{"version":3,"file":"index.00413c7d.js","sources":["../../vite/modulepreload-polyfill","../../packages/utils/utils.ts","../../packages/tokens/config-provider.ts","../../packages/hooks/use-global-config/index.ts","../../packages/MDVUI/version.ts","../../packages/MDVUI/make-installer.ts","../../packages/utils/withInstall.ts","../../packages/components/Button/index.ts","../../packages/components/Message/src/Message.vue","../../packages/utils/popup-manager.ts","../../packages/components/Message/src/message-method.ts","../../packages/components/Message/index.ts","../../plugin-vue:export-helper","../../packages/components/Icon/index.ts","../../packages/components/Input/index.ts","../../packages/components/Panel/src/Panel.vue","../../packages/components/Panel/index.ts","../../packages/utils/dom.ts","../../packages/transition/panel.vue","../../packages/components/Panel/src/PanelItem.vue","../../packages/components/PanelItem/index.ts","../../packages/MDVUI/component.ts","../../packages/hooks/use-mircotasks-mount/index.ts","../../packages/directives/Ripple/index.ts","../../packages/MDVUI/directives.ts","../../packages/MDVUI/defaults.ts","../../example/App.vue","../../example/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import type { MvNavigator } from '@mdvui/utils/types'\n\nexport const sliceArray = <T>(arr: T[], index: number): T[] => {\n  return arr.filter((item, i) => i !== index)\n}\n\nexport const hasOwn = (obj: object, key: string) => {\n  // eslint-disable-next-line no-prototype-builtins\n  return !!obj.hasOwnProperty(key)\n}\nexport const isUndefined = (val: any) => typeof val === 'undefined'\n\nexport const cloneArray = <T>(val: T[]): T[] => new Array(...val)\n\nexport const enum Device {\n  // eslint-disable-next-line no-unused-vars\n  phone = 0,\n  // eslint-disable-next-line no-unused-vars\n  pc =1\n}\nexport const getCurrentDevice = (): Device => {\n  if ((navigator as MvNavigator).userAgentData.platform === 'Windows' || (navigator as MvNavigator).userAgentData.platform === 'macOS') {\n    return Device.pc\n  }\n\n  return Device.phone\n}\n","import type { InjectionKey, Ref } from 'vue-demi'\nimport type { ExtractTypes } from '@mdvui/utils/types'\n\nexport interface ConfigProviderKeyProps {\n  zIndex?: number\n}\n\nexport type ExtractConfigProviderProps = ExtractTypes<ConfigProviderKeyProps>\n\nexport const ConfigProviderKey: InjectionKey<Ref<ConfigProviderKeyProps>> = Symbol('MDVUI')\n","import type { MaybeRef } from '@vueuse/core'\nimport { computed, getCurrentInstance, inject, ref } from 'vue-demi'\nimport { isObject } from '@vueuse/core'\nimport type { App, Ref } from 'vue-demi'\nimport { debugWarn } from '@mdvui/utils/error'\nimport { hasOwn } from '@mdvui/utils/utils'\nimport { unref } from 'vue'\nimport type { ConfigProviderKeyProps, ExtractConfigProviderProps } from '../../tokens/config-provider'\nimport { ConfigProviderKey } from '../../tokens/config-provider'\n\nconst defaultInject = ref<ConfigProviderKeyProps>({})\n\nexport function useGlobalConfig<T extends keyof ConfigProviderKeyProps>(key: T): Ref<ConfigProviderKeyProps[T]>\nexport function useGlobalConfig(): Ref<ExtractConfigProviderProps>\nexport function useGlobalConfig<T extends keyof ConfigProviderKeyProps>(key?: T) {\n  const config = inject(ConfigProviderKey, defaultInject) || defaultInject\n\n  if (key) {\n    return isObject(config.value) && hasOwn(config.value, key) ? computed(() => config.value[key]) : undefined\n  } else {\n    return config as Ref<ConfigProviderKeyProps[T]>\n  }\n}\n\nexport const provideGlobalConfig = (config: MaybeRef<ConfigProviderKeyProps>, app?: App) => {\n  const inSetup = !!getCurrentInstance()\n\n  if (!inSetup) {\n    debugWarn('provideGlobalConfig', 'provideGlobalConfig() can only be used inside setup().')\n  }\n\n  if (!app) {\n    return undefined\n  }\n\n  const provideFn = (value: any) => {\n    app.provide(ConfigProviderKey, value)\n  }\n  const oldConfig = useGlobalConfig()\n\n  const context = computed(() => Object.assign(unref(oldConfig) || {}, config))\n\n  provideFn(unref(context))\n\n  return context\n}\n","export const version = '0.0.1'\n","import type { App, Plugin } from 'vue-demi'\nimport type { MvFunctionDirective, MvObjDirective } from '@mdvui/utils/types'\nimport type { ConfigProviderKeyProps } from '../tokens/config-provider'\nimport { provideGlobalConfig } from '../hooks/use-global-config'\nimport { version } from './version'\n\nexport const makeInstaller = (components: Plugin[] = [], directives: MvObjDirective[] | MvFunctionDirective[]) => {\n  const install = (app: App, options: ConfigProviderKeyProps = {}) => {\n    options.zIndex = options.zIndex || 2000\n    provideGlobalConfig(options, app)\n    components.forEach(c => app.use(c))\n    directives.forEach(d => app.directive(d.name, d))\n  }\n\n  return {\n    install,\n    version,\n  }\n}\n","import type { App } from 'vue-demi'\nimport type { SFCWithInstall } from '@mdvui/utils/types'\n\nexport const withInstall = <T>(main: T, name: string): SFCWithInstall<T> => {\n  (main as SFCWithInstall<T>).install = (app: App) => {\n    app.component(`M${name}`, main)\n  }\n  return main as SFCWithInstall<T>\n}\n\nexport const withInstallFn = <T>(fn: T, name: string): SFCWithInstall<T> => {\n  (fn as SFCWithInstall<T>).install = (app: App) => {\n    // Compatible Options API\n    app.config.globalProperties[name] = fn\n  }\n\n  return fn as SFCWithInstall<T>\n}\n","import { withInstall } from '@mdvui/utils/withInstall'\nimport Button from './src/Button.vue'\n\nconst MButton = withInstall(Button, 'Button')\n\nexport default MButton\n","<script lang='ts' setup>\nimport type { VNode } from 'vue-demi'\nimport { computed, onMounted, ref } from 'vue-demi'\nimport type { MessageType } from '@mdvui/components/Message/src/message-types'\n\nexport interface IMessageProps {\n  id?: number\n  type?: MessageType\n  duration?: number\n  showClose?: boolean\n  zIndex?: number\n  message?: string | VNode\n  offset?: number\n  onDestroy?: () => void\n  onClose?: () => void\n  color?: string\n}\n\nconst props = withDefaults(defineProps<IMessageProps>(), {\n  type: 'info',\n  duration: 3000,\n  showClose: false,\n  message: '',\n  offset: 20,\n  onDestroy: () => {},\n  onClose: () => {},\n})\n\nconst Style = computed(() => ({\n  top: `${props.offset}px`,\n  zIndex: props.zIndex,\n}))\n\nconst error = computed(() => props.type === 'error')\nconst info = computed(() => props.type === 'info' || (props.type !== 'success' && props.type !== 'error' && props.type !== 'warning'))\nconst success = computed(() => props.type === 'success')\nconst warning = computed(() => props.type === 'warning')\n\nconst render = ref()\nonMounted(() => {\n  startTimer()\n  render.value = true\n})\n\nfunction startTimer() {\n  setTimeout(() => {\n    close()\n  }, props.duration)\n}\n\nfunction destroy() {\n  props.onDestroy()\n}\n\nfunction close() {\n  render.value = false\n}\n</script>\n<template>\n  <transition\n    name=\"mv-message-fade\"\n    @before-leave=\"onClose\"\n    @after-leave=\"destroy\"\n  >\n    <div\n      v-if=\"render\"\n      ref=\"rootRef\"\n      class=\"mv-message mv-text-color-white mv-shadow-3\"\n      :class=\"[\n        info ? 'mv-color-blue': '',\n        error ? 'mv-color-red': '',\n        success ? 'mv-color-green': '',\n        warning ? 'mv-color-orange': '',\n        typeof color !== 'undefined' ? `mv-color-${color}` : ''\n      ]\"\n      :style=\"Style\"\n    >\n      <i class=\"mdui-icon material-icons\" v-html=\"error || info ? 'info': warning ? 'warning' : 'done'\" />\n      <div class=\"mv-alert-tip-slot\">\n        {{ message }}\n      </div>\n    </div>\n  </transition>\n</template>\n","import { useGlobalConfig } from '@mdvui/hooks/use-global-config'\n\ninterface IPopupManager {\n  zIndex: number\n  globalInitialZIndex: number\n  getInitialZIndex: () => number\n  nextZIndex: () => number\n}\n\nexport const PopupManager: IPopupManager = {\n  zIndex: 0,\n  globalInitialZIndex: 2000,\n  getInitialZIndex() {\n    return useGlobalConfig('zIndex').value as number || this.globalInitialZIndex\n  },\n  nextZIndex() {\n    return this.getInitialZIndex() + ++this.zIndex\n  },\n}\n","import type { VNode } from 'vue-demi'\nimport { debugWarn } from '@mdvui/utils/error'\nimport { PopupManager } from '@mdvui/utils/popup-manager'\nimport { createVNode, isVNode, render } from 'vue-demi'\nimport MessageConstructor from './Message.vue'\nimport type { IMessageProps } from './Message.vue'\n\ninterface MessageOptions extends IMessageProps {\n  appendTo?: HTMLElement | string\n}\n\ninterface MessageVNode extends VNode{\n  container?: HTMLElement\n}\n\nlet instances: MessageVNode[] = []\nlet seed = 0\n\nconst message = (options: MessageOptions | string) => {\n  if (typeof options === 'string') {\n    options = { message: options }\n  }\n  let appendTo: HTMLElement | null = document.body\n\n  if (typeof options.appendTo === 'string') {\n    appendTo = document.querySelector(options.appendTo)\n  }\n  if (!(appendTo instanceof HTMLElement)) {\n    debugWarn('MvMessage', 'The appendTo option is not an HTMLElement. Falling back to document.body.')\n    appendTo = document.body\n  }\n\n  const props = {\n    zIndex: PopupManager.nextZIndex(),\n    id: seed++,\n    onClose: () => {\n      close(seed - 1)\n    },\n    ...options,\n  }\n\n  let verticalOffset = options.offset || 20\n  instances.forEach((vInstance) => {\n    verticalOffset += (vInstance.el?.offsetHeight || 0) + 16\n  })\n\n  props.offset = verticalOffset\n\n  const container = document.createElement('div')\n  container.className = 'mv-message-container'\n\n  const vm: MessageVNode = createVNode(\n    MessageConstructor,\n    props,\n    isVNode(props.message) ? { default: () => props.message } : null,\n  )\n\n  vm.props!.onDestroy = () => {\n    render(null, container)\n  }\n\n  vm.container = container\n  instances.push(vm)\n  render(vm, container)\n\n  appendTo.appendChild(container)\n\n  return {\n    close: () => close(vm.props!.id as number),\n  }\n}\n\nexport const close = (vmId: number) => {\n  const idx = instances.findIndex(vm => vm.props!.id = vmId)\n\n  if (idx === -1) {\n    return\n  }\n\n  const vm = instances[idx]\n  const removedHeight = vm.el!.offsetHeight\n\n  instances[idx].container!.remove()\n  instances.splice(idx, 1)\n\n  const len = instances.length\n  if (len === 0) {\n    return\n  }\n\n  for (let i = 0; i < len; i++) {\n    // TODO Why when using `offsetHeight` will cause bug? And use `style.top` it will be ok?\n    const pos = parseInt(instances[i].el!.style.top, 10) - removedHeight - 16\n\n    instances[i].component!.props.offset = pos\n  }\n}\n\nexport default message\n","import { withInstall, withInstallFn } from '@mdvui/utils/withInstall'\nimport Message from './src/Message.vue'\nimport MessageMethod from './src/message-method'\n\nconst MMessage = withInstall(Message, 'Message')\nexport default MMessage\nexport const MvMessageFn = withInstallFn(MessageMethod, '$message')\n","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","import { withInstall } from '@mdvui/utils/withInstall'\nimport Icon from './src/Icon.vue'\n\nconst MIcon = withInstall(Icon, 'Icon')\n\nexport default MIcon\n","import { withInstall } from '@mdvui/utils/withInstall'\nimport Input from './src/Input.vue'\n\nconst MInput = withInstall(Input, 'Input')\n\nexport default MInput\n","<script setup lang='ts'>\nimport { onMounted, watchEffect, provide, ref } from 'vue-demi';\nimport { useVModel } from '@vueuse/core';\n\nconst componentsName = 'Panel';\n\ntype ActiveNames = (string | number)[];\ntype Value = ActiveNames | string | number;\n\ninterface Props {\n  value?: Value;\n  accordion?: boolean;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  value: () => [],\n  accordion: false\n});\n\nconst activeNames = ref(([] as ActiveNames).concat(props.value));\n// 注入\nprovide('activeNames', activeNames);\n\nwatchEffect(() => {\n  activeNames.value = ([] as ActiveNames).concat(props.value);\n});\n\nconst emits = defineEmits<{\n  (e: 'input' | 'change', value: Value): void;\n  (e: 'update:value', value: Value): void;\n}>();\n\nconst activeValue = useVModel(props, 'value', emits);\n\nfunction handleClick(name: string | number): void {\n  const index = activeNames.value.indexOf(name);\n  if (index >= 0) {\n    activeNames.value.splice(index, 1);\n  } else {\n    if (props.accordion) activeNames.value = [];\n    activeNames.value.push(name);\n  }\n  const value = props.accordion ? activeNames.value[0] : activeNames.value;\n  activeValue.value = value;\n  emits('change', value);\n  emits('input', value);\n}\n</script>\n\n<template>\n  <div class='mv-panel'>\n    <slot></slot>\n  </div>\n</template>\n","import { withInstall } from '@mdvui/utils/withInstall';\nimport Panel from './src/Panel.vue';\n\nconst MPanel = withInstall(Panel, 'Panel');\n\nexport default MPanel;","import type { MaybeRef } from '@vueuse/core'\nimport { unref } from 'vue'\n\nexport const removeDom = <T extends MaybeRef<HTMLElement>>(el: T) => {\n  if (!(el instanceof HTMLElement) && el.value) {\n    el.value.remove()\n  } else {\n    (el as HTMLElement).remove()\n  }\n}\n\nexport const addClass = <T extends MaybeRef<HTMLElement | Element>>(\n  el: T,\n  clsName: string,\n) => {\n  const unrefEl = unref(el)\n  if (unrefEl.classList.contains(clsName)) {\n    return\n  }\n  unrefEl.classList.add(clsName)\n}\n\nexport const removeClass = <T extends MaybeRef<HTMLElement | Element>>(\n  el: T,\n  clsName: string,\n) => {\n  const unrefEl = unref(el)\n  unrefEl.classList.remove(clsName)\n}\n","<script lang='ts' setup>\nimport { addClass, removeClass } from '../utils/dom';\n\ntype Dom = any\n\ninterface Props {\n  show: boolean\n}\n\nconst className = 'panel-transition';\n\nconst props = withDefaults(defineProps<Props>(), {\n  show: true\n});\n\nconst onTransition = {\n  beforeEnter(dom: Dom) {\n    addClass(dom, className);\n    if (!dom.dataset) dom.dataset = {};\n    dom.dataset.oldPaddingTop = dom.style.paddingTop;\n    dom.dataset.oldPaddingBottom = dom.style.paddingBottom;\n\n    dom.style.height = '0';\n    dom.style.paddingTop = 0;\n    dom.style.paddingBottom = 0;\n  },\n  enter(dom: Dom) {\n    dom.dataset.oldOverflow = dom.style.overflow;\n    if (dom.scrollHeight !== 0) {\n      dom.style.height = dom.scrollHeight + 'px';\n      dom.style.paddingTop = dom.dataset.oldPaddingTop;\n      dom.style.paddingBottom = dom.dataset.oldPaddingBottom;\n    } else {\n      dom.style.height = '';\n      dom.style.paddingTop = dom.dataset.oldPaddingTop;\n      dom.style.paddingBottom = dom.dataset.oldPaddingBottom;\n    }\n\n    dom.style.overflow = 'hidden';\n  },\n  afterEnter(dom: Dom) {\n    removeClass(dom, className);\n    dom.style.height = '';\n    dom.style.overflow = dom.dataset.oldOverflow;\n  },\n  beforeLeave(dom: Dom) {\n    if (!dom.dataset) dom.dataset = {};\n    dom.dataset.oldPaddingTop = dom.style.paddingTop;\n    dom.dataset.oldPaddingBottom = dom.style.paddingBottom;\n    dom.dataset.oldOverflow = dom.style.overflow;\n\n    dom.style.height = dom.scrollHeight + 'px';\n    dom.style.overflow = 'hidden';\n  },\n  leave(dom: Dom) {\n    if (dom.scrollHeight !== 0) {\n      // for safari: add class after set height, or it will jump to zero height suddenly, weired\n      addClass(dom, className);\n      dom.style.height = 0;\n      dom.style.paddingTop = 0;\n      dom.style.paddingBottom = 0;\n    }\n  },\n  afterLeave(dom: Dom) {\n    removeClass(dom, className);\n    dom.style.height = '';\n    dom.style.overflow = dom.dataset.oldOverflow;\n    dom.style.paddingTop = dom.dataset.oldPaddingTop;\n    dom.style.paddingBottom = dom.dataset.oldPaddingBottom;\n  }\n};\n</script>\n\n<template>\n  <transition v-on='onTransition'>\n    <div v-show='show' v-bind='$attrs'>\n      <slot></slot>\n    </div>\n  </transition>\n</template>\n\n<style>\n.panel-transition {\n  transition-duration: .3s;\n  transition-timing-function: ease-in-out;\n  transition-property: height, padding-top, padding-bottom;\n}\n</style>","<script lang='ts' setup>\nimport { ComponentInternalInstance, computed, getCurrentInstance, inject } from 'vue-demi';\nimport TransitionPanel from '../../../transition/panel.vue';\n\nconst self = getCurrentInstance() as ComponentInternalInstance;\nconst activeNames = inject('activeNames');\n\ninterface Props {\n  label?: string,\n  showIcon: boolean,\n  name?: number | string,\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  showIcon: true\n});\n\nconst isActive = computed((): boolean => {\n  return activeNames.value.indexOf(props.name) >= 0;\n});\n\nconst handleItemClick = (): void => {\n  let parent = self.parent || self.root;\n  const getName = () => parent.devtoolsRawSetupState.componentsName || parent.devtoolsRawSetupState.name;\n  let name = getName();\n  while (parent && (!name || name !== 'Panel')) {\n    parent = parent.parent;\n    if (parent) name = getName();\n  }\n  if (parent && parent.devtoolsRawSetupState) {\n    parent = parent.devtoolsRawSetupState;\n    parent.handleClick(props.name);\n  }\n};\n</script>\n\n<template>\n  <div class='vm-panel-item' :class='{\"is-active\": isActive}'>\n    <div class='vm-panel-item__title' @click='handleItemClick'>\n      <div class='vm-panel-item__title--text'>\n        <slot name='title'>{{ label }}</slot>\n      </div>\n      <i v-if='showIcon' class='vm-panel-item__title--icon mv-icon-expand_more'></i>\n    </div>\n    <transition-panel class='vm-panel-item__body' :show='isActive'>\n      <div class='vm-panel-item__content'>\n        <slot></slot>\n      </div>\n      <div class='vm-panel-item__footer' v-if='$slots.footer'>\n        <slot name='footer'></slot>\n      </div>\n    </transition-panel>\n  </div>\n</template>\n","import { withInstall } from '@mdvui/utils/withInstall';\nimport PanelItem from '../Panel/src/PanelItem.vue';\n\nconst MPanelItem = withInstall(PanelItem, 'PanelItem');\n\nexport default MPanelItem;","import MButton from '@mdvui/components/Button';\nimport MMessage from '@mdvui/components/Message';\nimport MIcon from '@mdvui/components/Icon';\nimport type { Plugin } from 'vue-demi';\nimport MInput from '@mdvui/components/Input';\nimport MPanel from '@mdvui/components/Panel';\nimport MPanelItem from '@mdvui/components/PanelItem';\n\nexport default [\n  MButton,\n  MMessage,\n  MIcon,\n  MInput,\n  MPanel,\n  MPanelItem\n] as Plugin[];\n","import type { Fn } from '@mdvui/utils/types'\n\n/**\n * If you use the native method to add the class name with animation effect, the animation effect will not trigger correctly.\n * This method is to ensure that the animation is triggered correctly\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop#adding_messages\n *\n * @param fn\n */\nexport default function useMicrotasksMount(fn: Fn) {\n  setTimeout(() => {\n    fn()\n  })\n}\n","import type { MvDirectiveHTMLElement, MvFunctionDirective, MvRippleElement } from '@mdvui/utils/types'\nimport type { DirectiveBinding } from 'vue-demi'\nimport { useEventListener } from '@vueuse/core'\nimport { addClass, removeClass } from '@mdvui/utils/dom'\nimport useMicrotasksMount from '@mdvui/hooks/use-mircotasks-mount'\nimport { Device, cloneArray, getCurrentDevice } from '@mdvui/utils/utils'\n\ntype MvRippleEvent = MouseEvent | TouchEvent\n\ninterface AnimationsTransform {\n  translateX: number\n  translateY: number\n  scale: number\n}\n\ninterface Animations {\n  el: HTMLElement\n  transform: AnimationsTransform\n}\n\nconst instances: MvRippleElement[] = []\nconst animations: Animations[] = []\nlet seed = 0\n\nfunction append(appendTo: HTMLElement, el: HTMLElement) {\n  appendTo.appendChild(el)\n}\n\nfunction isTouchEvent(e: MvRippleEvent): e is TouchEvent {\n  return e.constructor.name === 'TouchEvent'\n}\n\nfunction updateColor(el: MvDirectiveHTMLElement) {\n  if (el.rippleColor === 'white' || el.rippleColor === 'black' || el.rippleColor === undefined) {\n    let defaultColor = 'black'\n    el.classList.forEach((clsName) => {\n      if (clsName.includes('mv-color-')) {\n        defaultColor = 'white'\n      }\n    })\n    el.rippleColor = defaultColor\n  }\n}\n\nfunction removeRipple(\n  rootEl: MvDirectiveHTMLElement,\n) {\n  // Ensure animation can be triggered\n  useMicrotasksMount(() => {\n    const currentAnimation = animations[animations.length - 1]\n    const transform = currentAnimation.transform\n    currentAnimation.el.style.transitionDuration = '300ms'\n    currentAnimation.el.style.transform = `translate3d(${transform.translateX}px, ${transform.translateY}px, 0) scale(${transform.scale + 2})`\n    // After 600ms, the ripple animation will be closed\n    setTimeout(() => {\n      hideRipple(rootEl, currentAnimation.el, rootEl.ripple as MvRippleElement)\n    }, 300)\n  })\n}\n\nconst calculate = (\n  e: MvRippleEvent,\n  el: MvDirectiveHTMLElement,\n) => {\n  const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e\n  const elWidth = el.clientWidth\n  const elHeight = el.clientHeight\n  const elMaxSide = (elWidth > elHeight ? elWidth : elHeight)\n  const diameter = elMaxSide / 10\n  const clickX = target.clientX - el.getBoundingClientRect().x\n  const clickY = target.clientY - el.getBoundingClientRect().y\n\n  const scale = 13\n  const translateX = elWidth / 2 - clickX + diameter / 2\n  const translateY = elHeight / 2 - clickY + diameter / 2\n\n  return {\n    clickX,\n    clickY,\n    diameter,\n    translateX,\n    translateY,\n    scale,\n  }\n}\n\nconst showRipple = (e: MvRippleEvent) => {\n  const el = e.currentTarget as MvDirectiveHTMLElement || undefined\n  // Make sure that only TouchEvent can be triggered when using phone or pad\n  if (!el || ((getCurrentDevice() === Device.phone) && e.type === 'mousedown')) {\n    return\n  }\n\n  if (e.type === 'mouseup' || e.type === 'touchmove') {\n    removeRipple(el)\n    return\n  }\n\n  /**\n   * When the user does not set the ripple color,\n   * make sure that when the background-color of the el changes,\n   * the ripple color will adapt to the change\n   *\n   */\n  updateColor(el)\n\n  const { clickX, clickY, diameter, translateX, translateY, scale } = calculate(e, el)\n  const container = document.createElement('div')\n  const animation = document.createElement('div')\n  const initialSize = `${diameter}px`\n\n  container.className = 'mv-ripple'\n  animation.className = `mv-ripple-animation mv-ripple-animation-in mv-ripple-animation-color-${el.rippleColor}`\n  append(container, animation)\n\n  animation.style.width = initialSize\n  animation.style.height = initialSize\n  animation.style.transform = 'translate3d(0, 0, 0) scale(1)'\n  animation.style.left = `${clickX - diameter / 2}px`\n  animation.style.top = `${clickY - diameter / 2}px`\n\n  append(el, container)\n\n  el.ripple = container\n  el.ripple.seed = seed++\n\n  instances.push(el.ripple)\n\n  animations.push({\n    el: animation,\n    transform: {\n      translateX,\n      translateY,\n      scale,\n    },\n  })\n  useMicrotasksMount(() => {\n    animation.style.transform = `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`\n  })\n}\n\nconst hideRipple = (\n  el: MvDirectiveHTMLElement,\n  animationEl: HTMLElement,\n  rippleEl: MvRippleElement,\n) => {\n  removeClass(animationEl, 'mv-ripple-animation-in')\n  addClass(animationEl, 'mv-ripple-animation-out')\n\n  const cloneIns = cloneArray(instances)\n\n  setTimeout(() => {\n    const idx = cloneIns.findIndex(vm => vm.seed === rippleEl.seed)\n    // Ensure all useless ripples will be removew\n    cloneIns.forEach((cVm, index) => {\n      if (index <= idx) {\n        const cVmAnimation = cVm.firstElementChild as Element\n        removeClass(cVmAnimation, 'mv-ripple-animation-in')\n        addClass(cVmAnimation, 'mv-ripple-animation-out')\n        setTimeout(() => {\n          cVm.remove()\n        }, 300)\n      }\n    })\n  }, 300)\n}\n\nconst updateRipple = <T extends MvDirectiveHTMLElement>(\n  el: T,\n  binding: DirectiveBinding,\n) => {\n  el.rippleColor = binding.value\n  useEventListener(el, 'mousedown', showRipple)\n  useEventListener(el, 'mouseup', showRipple)\n  useEventListener(el, 'touchstart', showRipple)\n  useEventListener(el, 'touchmove', showRipple)\n}\n\nconst Ripple: MvFunctionDirective = (\n  el: HTMLElement,\n  binding: DirectiveBinding,\n) => {\n  updateRipple(el, binding)\n}\n\nexport default Ripple\n","import Ripple from '@mdvui/directives/Ripple'\nimport type { MvFunctionDirective, MvObjDirective } from '@mdvui/utils/types'\n\nexport default [\n  Ripple,\n] as MvObjDirective[] | MvFunctionDirective[]\n","import { makeInstaller } from './make-installer'\nimport Components from './component'\nimport Directives from './directives'\n\nexport default makeInstaller(Components, Directives)\n","<script setup lang='ts'>\nimport { MvMessageFn } from '@mdvui/components/Message';\nimport { ref } from 'vue';\nimport type { MessageType } from '@mdvui/components/Message/src/message-types';\n\nconst input = ref<MessageType>('info');\nconst panelAccordion = ref(false);\nconst panelValue = ref([]);\n\nfunction message() {\n  MvMessageFn({\n    duration: 2000,\n    message: 'Test',\n    type: input.value || 'info'\n  });\n}\n\nfunction setPanel(value) {\n  panelValue.value = value;\n}\n\nfunction onPanelChange(value) {\n  panelValue.value = value;\n}\n</script>\n\n<template>\n  <div class='mdui-textfield' style='width: 50%; margin: 0 auto'>\n    <input v-model='input' class='mdui-textfield-input' type='text' placeholder='error | info | success | warning'>\n  </div>\n  <div class='btn'>\n    <m-button v-ripple :color=\"'red-light-1'\" @click='message' v-text=\"'add message'\" />\n    <m-button v-ripple style='width: 300px; height: 200px' class='mv-color-red'>\n      Ripple\n    </m-button>\n  </div>\n  <m-icon class='mv-icon mv-icon-horizontal_split' />\n  <div>\n    <m-button @click='panelAccordion = !panelAccordion'>Panel Accordion {{ panelAccordion }}</m-button>\n    <m-button @click='setPanel([\"1\"])' style='margin-left: 10px;'>Panel Set Value 1</m-button>\n    <m-button @click='setPanel([\"2\"])' style='margin-left: 10px;'>Panel Set Value 2</m-button>\n  </div>\n  <m-panel v-model:value='panelValue' :accordion='panelAccordion'>\n    <m-panel-item label='panel-item 1' name='1'>panel-item</m-panel-item>\n    <m-panel-item label='panel-item 2' name='2'>panel-item</m-panel-item>\n    <m-panel-item label='panel-item 3' name='3'>\n      panel-item\n      <template v-slot:footer>\n        panel-item footer\n      </template>\n    </m-panel-item>\n  </m-panel>\n</template>\n\n<style lang='scss'>\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n\n  .btn {\n    position: relative;\n    display: flex;\n    width: 100vw;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n</style>\n","import { createApp } from 'vue'\nimport 'mdui'\nimport 'mdui/dist/css/mdui.min.css'\nimport MDVUI from '../packages/MDVUI/index'\nimport '@mdvui/styles/index.scss'\nimport App from './App.vue'\n\ncreateApp(App).use(MDVUI).mount('#app')\n"],"names":["Button","instances","seed","MessageConstructor","Message","MessageMethod","Input","Panel","PanelItem","App","MDVUI"],"mappings":"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"}