{"version":3,"file":"index.a070fe9b.js","sources":["../../vite/modulepreload-polyfill","../../packages/utils/utils.ts","../../packages/tokens/config-provider.ts","../../packages/hooks/use-global-config/index.ts","../../packages/MDVUI/version.ts","../../packages/MDVUI/make-installer.ts","../../packages/utils/withInstall.ts","../../packages/components/Button/index.ts","../../packages/components/Message/src/Message.vue","../../packages/utils/popup-manager.ts","../../packages/components/Message/src/message-method.ts","../../packages/components/Message/index.ts","../../packages/MDVUI/component.ts","../../packages/MDVUI/defaults.ts","../../example/App.vue","../../example/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const sliceArray = <T>(arr: T[], index: number): T[] => {\n  return arr.filter((item, i) => i !== index)\n}\n\nexport const hasOwn = (obj: object, key: string) => {\n  // eslint-disable-next-line no-prototype-builtins\n  return !!obj.hasOwnProperty(key)\n}\nexport const isUndefined = (val: any) => typeof val === 'undefined'\n","import type { InjectionKey, Ref } from 'vue-demi'\nimport type { ExtractTypes } from '@mdvui/utils/types'\n\nexport interface ConfigProviderKeyProps {\n  zIndex?: number\n}\n\nexport type ExtractConfigProviderProps = ExtractTypes<ConfigProviderKeyProps>\n\nexport const ConfigProviderKey: InjectionKey<Ref<ConfigProviderKeyProps>> = Symbol('MDVUI')\n","import type { MaybeRef } from '@vueuse/core'\nimport { computed, getCurrentInstance, inject, ref } from 'vue-demi'\nimport { isObject } from '@vueuse/core'\nimport type { App, Ref } from 'vue-demi'\nimport { debugWarn } from '@mdvui/utils/error'\nimport { hasOwn } from '@mdvui/utils/utils'\nimport { unref } from 'vue'\nimport type { ConfigProviderKeyProps, ExtractConfigProviderProps } from '../../tokens/config-provider'\nimport { ConfigProviderKey } from '../../tokens/config-provider'\n\nconst defaultInject = ref<ConfigProviderKeyProps>({})\n\nexport function useGlobalConfig<T extends keyof ConfigProviderKeyProps>(\n  key: T\n): Ref<ConfigProviderKeyProps[T]>\nexport function useGlobalConfig(): Ref<ExtractConfigProviderProps>\nexport function useGlobalConfig<T extends keyof ConfigProviderKeyProps>(\n  key?: T,\n) {\n  const config = inject(ConfigProviderKey, defaultInject) || defaultInject\n\n  if (key) {\n    return isObject(config.value) && hasOwn(config.value, key)\n      ? computed(() => config.value[key])\n      : undefined\n  } else {\n    return config as Ref<ConfigProviderKeyProps[T]>\n  }\n}\n\nexport const provideGlobalConfig = (\n  config: MaybeRef<ConfigProviderKeyProps>,\n  app?: App,\n) => {\n  const inSetup = !!getCurrentInstance()\n\n  if (!inSetup) {\n    debugWarn('provideGlobalConfig', 'provideGlobalConfig() can only be used inside setup().')\n  }\n\n  if (!app) {\n    return undefined\n  }\n\n  const provideFn = (value: any) => {\n    app.provide(ConfigProviderKey, value)\n  }\n  const oldConfig = useGlobalConfig()\n\n  const context = computed(() => Object.assign(unref(oldConfig) || {}, config))\n\n  provideFn(unref(context))\n\n  return context\n}\n","export const version = '0.0.1'\n","import type { App, Plugin } from 'vue-demi'\nimport type { ConfigProviderKeyProps } from '../tokens/config-provider'\nimport { provideGlobalConfig } from '../hooks/use-global-config'\nimport { version } from './version'\n\nexport const makeInstaller = (components: Plugin[] = []) => {\n  const install = (app: App, options: ConfigProviderKeyProps = {}) => {\n    options.zIndex = options.zIndex || 2000\n    provideGlobalConfig(options, app)\n    components.forEach(c => app.use(c))\n  }\n\n  return {\n    install,\n    version,\n  }\n}\n","import type { App } from 'vue-demi'\nimport type { SFCWithInstall } from '@mdvui/utils/types'\n\nexport const withInstall = <T>(main: T, name: string): SFCWithInstall<T> => {\n  (main as SFCWithInstall<T>).install = (app: App) => {\n    app.component(`Mv${name}`, main)\n  }\n  return main as SFCWithInstall<T>\n}\n\nexport const withInstallFn = <T>(fn: T, name: string): SFCWithInstall<T> => {\n  (fn as SFCWithInstall<T>).install = (app: App) => {\n    // Compatible Options API\n    app.config.globalProperties[name] = fn\n  }\n\n  return fn as SFCWithInstall<T>\n}\n","import { withInstall } from '@mdvui/utils/withInstall'\nimport Button from './Button.vue'\n\nconst MvButton = withInstall(Button, 'Button')\n\nexport default MvButton\n","<script lang='ts' setup>\nimport type { VNode } from 'vue-demi'\nimport { computed, ref } from 'vue-demi'\nimport type { MessagePos, MessageType } from '@mdvui/components/Message/src/message-types'\nimport { onMounted } from 'vue'\n\nexport interface IMessageProps {\n  id?: number\n  type?: MessageType\n  pos?: MessagePos\n  duration?: number\n  showClose?: boolean\n  zIndex?: number\n  message?: string | VNode\n  offset?: number\n  onDestroy?: () => void\n  onClose?: () => void\n}\n\nconst props = withDefaults(defineProps<IMessageProps>(), {\n  type: 'info',\n  pos: 'right-top',\n  duration: 3000,\n  showClose: false,\n  message: '',\n  offset: 20,\n  onDestroy: () => {},\n  onClose: () => {},\n})\n\nconst Style = computed(() => ({\n  top: `${props.offset}px`,\n  zIndex: props.zIndex,\n}))\n\nconst error = computed(() => props.type === 'error')\nconst info = computed(() => props.type === 'info')\nconst success = computed(() => props.type === 'success')\n\nconst render = ref()\nonMounted(() => {\n  startTimer()\n  render.value = true\n})\n\nfunction startTimer() {\n  setTimeout(() => {\n    close()\n  }, props.duration)\n}\n\nfunction destroy() {\n  props.onDestroy()\n}\n\nfunction close() {\n  render.value = false\n}\n</script>\n<template>\n  <transition\n    name=\"mv-message-fade\"\n    @before-leave=\"onClose\"\n    @after-leave=\"destroy\"\n  >\n    <div\n      v-show=\"render\"\n      ref=\"rootRef\"\n      class=\"mv-message mv-text-color-white mv-shadow-3\"\n      :class=\"[\n        info ? 'mv-color-blue': '',\n        error ? 'mv-color-red': '',\n        success ? 'mv-color-green': '',\n      ]\"\n      :style=\"Style\"\n    >\n      <i class=\"mdui-icon material-icons\" v-html=\"error || info ? 'info': 'done'\" />\n      <div class=\"mv-alert-tip-slot\">\n        {{ message }}\n      </div>\n    </div>\n  </transition>\n</template>\n","import { useGlobalConfig } from '@mdvui/hooks/use-global-config'\n\ninterface IPopupManager {\n  zIndex: number\n  globalInitialZIndex: number\n  getInitialZIndex: () => number\n  nextZIndex: () => number\n}\n\nexport const PopupManager: IPopupManager = {\n  zIndex: 0,\n  globalInitialZIndex: 2000,\n  getInitialZIndex() {\n    return useGlobalConfig('zIndex').value as number || this.globalInitialZIndex\n  },\n  nextZIndex() {\n    return this.getInitialZIndex() + ++this.zIndex\n  },\n}\n","import type { VNode } from 'vue-demi'\nimport { debugWarn } from '@mdvui/utils/error'\nimport { PopupManager } from '@mdvui/utils/popup-manager'\nimport { createVNode, isVNode, render } from 'vue-demi'\nimport MessageConstructor from './Message.vue'\nimport type { IMessageProps } from './Message.vue'\n\ninterface MessageOptions extends IMessageProps {\n  appendTo?: HTMLElement | string\n}\n\nlet instances: VNode[] = []\nlet seed = 0\n\nconst message = (options: MessageOptions | string) => {\n  if (typeof options === 'string') {\n    options = { message: options }\n  }\n  let appendTo: HTMLElement | null = document.body\n\n  if (typeof options.appendTo === 'string') {\n    appendTo = document.querySelector(options.appendTo)\n  }\n  if (!(appendTo instanceof HTMLElement)) {\n    debugWarn('MvMessage', 'The appendTo option is not an HTMLElement. Falling back to document.body.')\n    appendTo = document.body\n  }\n\n  const props = {\n    zIndex: PopupManager.nextZIndex(),\n    id: seed++,\n    onClose: () => {\n      close(seed - 1)\n    },\n    ...options,\n  }\n\n  let verticalOffset = options.offset || 20\n  instances.forEach((vInstance) => {\n    verticalOffset += (vInstance.el?.offsetHeight || 0) + 16\n  })\n\n  props.offset = verticalOffset\n\n  const container = document.createElement('div')\n  container.className = 'mv-message-container'\n\n  const vm = createVNode(\n    MessageConstructor,\n    props,\n    isVNode(props.message) ? { default: () => props.message } : null,\n  )\n\n  vm.props!.onDestroy = () => {\n    render(null, container)\n  }\n\n  instances.push(vm)\n  render(vm, container)\n\n  appendTo.appendChild(container)\n\n  return {\n    close: () => close(vm.props!.id as number),\n  }\n}\n\nexport const close = (vmId: number) => {\n  const idx = instances.findIndex(vm => vm.props!.id = vmId)\n\n  if (idx === -1) {\n    return\n  }\n\n  const vm = instances[idx]\n  const removedHeight = vm.el!.offsetHeight\n\n  instances.splice(idx, 1)\n\n  const len = instances.length\n  if (len === 0) {\n    return\n  }\n\n  for (let i = 0; i < len; i++) {\n    // TODO Why when using `offsetHeight` will cause bug? And use `style.top` it will be ok?\n    const pos = parseInt(instances[i].el!.style.top, 10) - removedHeight - 16\n\n    instances[i].component!.props.offset = pos\n  }\n}\n\nexport default message\n","import { withInstall, withInstallFn } from '@mdvui/utils/withInstall'\nimport Message from './src/Message.vue'\nimport MessageMethod from './src/message-method'\n\nconst MvMessage = withInstall(Message, 'Message')\nexport default MvMessage\nexport const MvMessageFn = withInstallFn(MessageMethod, '$message')\n","import MvButton from '@mdvui/components/Button'\nimport MvMessage from '@mdvui/components/Message'\nimport type { Plugin } from 'vue-demi'\n\nexport default [\n  MvButton,\n  MvMessage,\n] as unknown as Plugin[]\n","import { makeInstaller } from './make-installer'\nimport Components from './component'\n\nexport default makeInstaller(Components)\n","<script setup lang=\"ts\">\nimport { MvMessageFn } from '@mdvui/components/Message'\nimport { ref } from 'vue-demi'\n\nconst input = ref()\n\nfunction message() {\n  MvMessageFn({\n    duration: 2000,\n    message: 'Test',\n    type: input.value,\n  })\n}\n</script>\n\n<template>\n  <div class=\"mdui-textfield\" style=\"width: 50%; margin: 0 auto\">\n    <input v-model=\"input\" class=\"mdui-textfield-input\" type=\"text\" placeholder=\"error | info | success\">\n  </div>\n  <mv-button class=\"mv-color-red\" :ripple-color=\"'blue'\" @click=\"message\" v-text=\"'click'\" />\n</template>\n\n<style lang=\"scss\">\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n\n}\n</style>\n","import { createApp } from 'vue'\nimport 'mdui'\nimport 'mdui/dist/css/mdui.min.css'\nimport MDVUI from '../packages/MDVUI/index'\nimport '@mdvui/styles/index.scss'\nimport App from './App.vue'\n\ncreateApp(App).use(MDVUI).mount('#app')\n"],"names":["Button","MessageConstructor","Message","MessageMethod","App","MDVUI"],"mappings":"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"}