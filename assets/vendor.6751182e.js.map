{"version":3,"file":"vendor.6751182e.js","sources":["../../node_modules/@vue/shared/dist/shared.esm-bundler.js","../../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","../../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","../../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","../../node_modules/mdui/dist/js/mdui.esm.js","../../node_modules/@vueuse/core/node_modules/@vueuse/shared/index.mjs"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isArray(val) ||\r\n            (isObject(val) &&\r\n                (val.toString === objectToString || !isFunction(val.toString)))\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { extend, isArray, isMap, isIntegerKey, isSymbol, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\r\n    console.warn(`[Vue warn] ${msg}`, ...args);\r\n}\n\nlet activeEffectScope;\r\nconst effectScopeStack = [];\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        this.active = true;\r\n        this.effects = [];\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            try {\r\n                this.on();\r\n                return fn();\r\n            }\r\n            finally {\r\n                this.off();\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`cannot run an inactive effect scope.`);\r\n        }\r\n    }\r\n    on() {\r\n        if (this.active) {\r\n            effectScopeStack.push(this);\r\n            activeEffectScope = this;\r\n        }\r\n    }\r\n    off() {\r\n        if (this.active) {\r\n            effectScopeStack.pop();\r\n            activeEffectScope = effectScopeStack[effectScopeStack.length - 1];\r\n        }\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            this.effects.forEach(e => e.stop());\r\n            this.cleanups.forEach(cleanup => cleanup());\r\n            if (this.scopes) {\r\n                this.scopes.forEach(e => e.stop(true));\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope) {\r\n    scope = scope || activeEffectScope;\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`onScopeDispose() is called when there is no active effect scope` +\r\n            ` to be associated with.`);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        if (!effectStack.includes(this)) {\r\n            try {\r\n                effectStack.push((activeEffect = this));\r\n                enableTracking();\r\n                trackOpBit = 1 << ++effectTrackDepth;\r\n                if (effectTrackDepth <= maxMarkerBits) {\r\n                    initDepMarkers(this);\r\n                }\r\n                else {\r\n                    cleanupEffect(this);\r\n                }\r\n                return this.fn();\r\n            }\r\n            finally {\r\n                if (effectTrackDepth <= maxMarkerBits) {\r\n                    finalizeDepMarkers(this);\r\n                }\r\n                trackOpBit = 1 << --effectTrackDepth;\r\n                resetTracking();\r\n                effectStack.pop();\r\n                const n = effectStack.length;\r\n                activeEffect = n > 0 ? effectStack[n - 1] : undefined;\r\n            }\r\n        }\r\n    }\r\n    stop() {\r\n        if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!isTracking()) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = createDep()));\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { effect: activeEffect, target, type, key }\r\n        : undefined;\r\n    trackEffects(dep, eventInfo);\r\n}\r\nfunction isTracking() {\r\n    return shouldTrack && activeEffect !== undefined;\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\r\n            activeEffect.onTrack(Object.assign({\r\n                effect: activeEffect\r\n            }, debuggerEventExtraInfo));\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { target, type, key, newValue, oldValue, oldTarget }\r\n        : undefined;\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                triggerEffects(deps[0], eventInfo);\r\n            }\r\n            else {\r\n                triggerEffects(deps[0]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(createDep(effects), eventInfo);\r\n        }\r\n        else {\r\n            triggerEffects(createDep(effects));\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    for (const effect of isArray(dep) ? dep : [...dep]) {\r\n        if (effect !== activeEffect || effect.allowRecurse) {\r\n            if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\r\n                effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\r\n            }\r\n            if (effect.scheduler) {\r\n                effect.scheduler();\r\n            }\r\n            else {\r\n                effect.run();\r\n            }\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow && !isReadonly(value)) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\r\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\r\n    if (isTracking()) {\r\n        ref = toRaw(ref);\r\n        if (!ref.dep) {\r\n            ref.dep = createDep();\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            trackEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"get\" /* GET */,\r\n                key: 'value'\r\n            });\r\n        }\r\n        else {\r\n            trackEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"set\" /* SET */,\r\n                key: 'value',\r\n                newValue: newVal\r\n            });\r\n        }\r\n        else {\r\n            triggerEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass RefImpl {\r\n    constructor(value, _shallow) {\r\n        this._shallow = _shallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = _shallow ? value : toRaw(value);\r\n        this._value = _shallow ? value : toReactive(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this._shallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : toReactive(newVal);\r\n            triggerRefValue(this, newVal);\r\n        }\r\n    }\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key, _defaultValue) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this._defaultValue = _defaultValue;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        const val = this._object[this._key];\r\n        return val === undefined ? this._defaultValue : val;\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key, defaultValue) {\r\n    const val = object[key];\r\n    return isRef(val)\r\n        ? val\r\n        : new ObjectRefImpl(object, key, defaultValue);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions, debugOptions) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter);\r\n    if ((process.env.NODE_ENV !== 'production') && debugOptions) {\r\n        cRef.effect.onTrack = debugOptions.onTrack;\r\n        cRef.effect.onTrigger = debugOptions.onTrigger;\r\n    }\r\n    return cRef;\r\n}\n\nvar _a;\r\nconst tick = Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = true;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { toRaw, ref, pauseTracking, resetTracking, reactive, computed, isRef, shallowReactive, trigger, ReactiveEffect, isProxy, shallowReadonly, track, EffectScope, markRaw, proxyRefs, isReactive, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, computed, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, isFunction, toNumber, hyphenate, camelize, isArray, isOn, hasOwn, isModelListener, isObject, remove, isString, invokeArrayFns, isPromise, NOOP, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, NO, normalizeClass, normalizeStyle, isGloballyWhitelisted, hasChanged, isSet, isMap, isPlainObject } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    getGlobalThis().__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, initialDef) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        initialDef: normalizeClassComponent(initialDef),\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // update initial record (for not-yet-rendered component)\r\n    record.initialDef.render = newRender;\r\n    [...record.instances].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // update initial def (for not-yet-rendered components)\r\n    updateComponentDef(record.initialDef, newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record.instances];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            if (oldComp !== record.initialDef) {\r\n                updateComponentDef(oldComp, newComp);\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction updateComponentDef(oldComp, newComp) {\r\n    extend(oldComp, newComp);\r\n    for (const key in oldComp) {\r\n        if (key !== '__file' && !(key in newComp)) {\r\n            delete oldComp[key];\r\n        }\r\n    }\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nlet buffer = [];\r\nlet devtoolsNotInstalled = false;\r\nfunction emit(event, ...args) {\r\n    if (devtools) {\r\n        devtools.emit(event, ...args);\r\n    }\r\n    else if (!devtoolsNotInstalled) {\r\n        buffer.push({ event, args });\r\n    }\r\n}\r\nfunction setDevtoolsHook(hook, target) {\r\n    var _a, _b;\r\n    devtools = hook;\r\n    if (devtools) {\r\n        devtools.enabled = true;\r\n        buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\r\n        buffer = [];\r\n    }\r\n    else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    // eslint-disable-next-line no-restricted-globals\r\n    typeof window !== 'undefined' &&\r\n        // some envs mock window but not fully\r\n        window.HTMLElement &&\r\n        // also exclude jsdom\r\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\r\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\r\n        replay.push((newHook) => {\r\n            setDevtoolsHook(newHook, target);\r\n        });\r\n        // clear buffer after 3s - the user probably doesn't have devtools installed\r\n        // at all, and keeping the buffer will cause memory leaks (#4738)\r\n        setTimeout(() => {\r\n            if (!devtools) {\r\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\r\n                devtoolsNotInstalled = true;\r\n                buffer = [];\r\n            }\r\n        }, 3000);\r\n    }\r\n    else {\r\n        // non-browser env, assume not installed\r\n        devtoolsNotInstalled = true;\r\n        buffer = [];\r\n    }\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    let setRoot = undefined;\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        result.patchFlag > 0 &&\r\n        result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n        [root, setRoot] = getChildRoot(result);\r\n    }\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ELEMENT */ | 6 /* COMPONENT */)) {\r\n                if (propsOptions && keys.some(isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!isModelListener(key)) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Runtime directive used on component with non-element root node. ` +\r\n                `The directives will not function as intended.`);\r\n        }\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Component inside <Transition> renders non-element root node ` +\r\n                `that cannot be animated.`);\r\n        }\r\n        root.transition = vnode.transition;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n        setRoot(root);\r\n    }\r\n    else {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & (6 /* COMPONENT */ | 1 /* ELEMENT */) ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                mode &&\r\n                mode !== 'in-out' && mode !== 'out-in' && mode !== 'default') {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                        warn(`Async component loader resolved to undefined. ` +\r\n                            `If you are using retry(), make sure to return its return value.`);\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                        throw new Error(`Invalid async component load result: ${comp}`);\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (isInSSRComponentSetup)) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (isObject(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\r\n                        `To opt-in to the new behavior now, ` +\r\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n                        `temporary and will not be needed in the future.)`);\r\n                }\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (!(key in attrs) || value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((...args) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\n/**\r\n * Function for handling a template ref\r\n */\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else {\r\n        const _isString = isString(ref);\r\n        const _isRef = isRef(ref);\r\n        if (_isString || _isRef) {\r\n            const doSet = () => {\r\n                if (rawRef.f) {\r\n                    const existing = _isString ? refs[ref] : ref.value;\r\n                    if (isUnmount) {\r\n                        isArray(existing) && remove(existing, refValue);\r\n                    }\r\n                    else {\r\n                        if (!isArray(existing)) {\r\n                            if (_isString) {\r\n                                refs[ref] = [refValue];\r\n                            }\r\n                            else {\r\n                                ref.value = [refValue];\r\n                                if (rawRef.k)\r\n                                    refs[rawRef.k] = ref.value;\r\n                            }\r\n                        }\r\n                        else if (!existing.includes(refValue)) {\r\n                            existing.push(refValue);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_isString) {\r\n                    refs[ref] = value;\r\n                    if (hasOwn(setupState, ref)) {\r\n                        setupState[ref] = value;\r\n                    }\r\n                }\r\n                else if (isRef(ref)) {\r\n                    ref.value = value;\r\n                    if (rawRef.k)\r\n                        refs[rawRef.k] = value;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n                }\r\n            };\r\n            if (value) {\r\n                doSet.id = -1;\r\n                queuePostRenderEffect(doSet, parentSuspense);\r\n            }\r\n            else {\r\n                doSet();\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n        }\r\n    }\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        if (forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* FULL_PROPS */ | 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    const needWarn = [];\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_OPTIONS_API__`);\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn.length) {\r\n        const multi = needWarn.length > 1;\r\n        console.warn(`Feature flag${multi ? `s` : ``} ${needWarn.join(', ')} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, ` +\r\n            `which expects these compile-time feature flags to be globally injected ` +\r\n            `via the bundler config in order to get better tree-shaking in the ` +\r\n            `production bundle.\\n\\n` +\r\n            `For more details, see https://link.vuejs.org/feature-flags.`);\r\n    }\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        // disable recurse in beforeUpdate hooks\r\n        parentComponent && toggleRecurse(parentComponent, false);\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        parentComponent && toggleRecurse(parentComponent, true);\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* COMPONENT */ | 64 /* TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                toggleRecurse(instance, false);\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                toggleRecurse(instance, false);\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = (instance.effect = new ReactiveEffect(componentUpdateFn, () => queueJob(instance.update), instance.scope // track it in component's effect scope\r\n        ));\r\n        const update = (instance.update = effect.run.bind(effect));\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        toggleRecurse(instance, true);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            effect.onTrack = instance.rtc\r\n                ? e => invokeArrayFns(instance.rtc, e)\r\n                : void 0;\r\n            effect.onTrigger = instance.rtg\r\n                ? e => invokeArrayFns(instance.rtg, e)\r\n                : void 0;\r\n            // @ts-ignore (for scheduler)\r\n            update.ownerInstance = instance;\r\n        }\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* KEYED_FRAGMENT */ | 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction toggleRecurse({ effect, update }, allowed) {\r\n    effect.allowRecurse = update.allowRecurse = allowed;\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            const extra = type === COMPONENTS\r\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n                    `component resolution via compilerOptions.isCustomElement.`\r\n                : ``;\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= isString(children)\r\n            ? 8 /* TEXT_CHILDREN */\r\n            : 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = ((process.env.NODE_ENV !== 'production') ? createVNodeWithArgsTransform : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return isProxy(props) || InternalObjectKey in props\r\n        ? extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ELEMENT */ | 64 /* TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming &&\r\n                    !(isArray(existing) && existing.includes(incoming))) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 1 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 2 /* DATA */:\r\n                        return data[key];\r\n                    case 4 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 3 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 1 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 2 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 3 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 4 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 0 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 4 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (!!accessCache[key] ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createDevRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup) {\r\n            if (key[0] === '$' || key[0] === '_') {\r\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                    `which are reserved prefixes for Vue internals.`);\r\n                return;\r\n            }\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => setupState[key],\r\n                set: NOOP\r\n            });\r\n        }\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        effect: null,\r\n        update: null,\r\n        scope: new EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createDevRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit$1.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n        if (isPromise(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        if (instance.type.__ssrInlineRender) {\r\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n            // set it as ssrRender instead.\r\n            instance.ssrRender = setupResult;\r\n        }\r\n        else {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    // could be already set when returned from setup()\r\n    if (!instance.render) {\r\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compliation\r\n        // is done by server-renderer\r\n        if (!isSSR && compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, (process.env.NODE_ENV !== 'production')\r\n        ? {\r\n            get(target, key) {\r\n                markAttrsAccessed();\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            },\r\n            set() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            },\r\n            deleteProperty() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            }\r\n        }\r\n        : {\r\n            get(target, key) {\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            }\r\n        });\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = (process.env.NODE_ENV !== 'production')\r\n        ? (job) => checkRecursiveUpdates(seen, job)\r\n        : NOOP;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && check(job)) {\r\n                    continue;\r\n                }\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'post' })\r\n        : { flush: 'post' }));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'sync' })\r\n        : { flush: 'sync' }));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    // in SSR there is no need to setup an actual effect, and it should be noop\r\n    // unless it's eager\r\n    if (isInSSRComponentSetup) {\r\n        // we will also not call the invalidate callback (+ runner is not set up)\r\n        onInvalidate = NOOP;\r\n        if (!cb) {\r\n            getter();\r\n        }\r\n        else if (immediate) {\r\n            callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                getter(),\r\n                isMultiSource ? [] : undefined,\r\n                onInvalidate\r\n            ]);\r\n        }\r\n        return NOOP;\r\n    }\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const effect = new ReactiveEffect(getter, scheduler);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        effect.onTrack = onTrack;\r\n        effect.onTrigger = onTrigger;\r\n    }\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!isObject(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(raw, defaults) {\r\n    const props = isArray(raw)\r\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\r\n        : raw;\r\n    for (const key in defaults) {\r\n        const opt = props[key];\r\n        if (opt) {\r\n            if (isArray(opt) || isFunction(opt)) {\r\n                props[key] = { type: opt, default: defaults[key] };\r\n            }\r\n            else {\r\n                opt.default = defaults[key];\r\n            }\r\n        }\r\n        else if (opt === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nfunction createPropsRestProxy(props, excludedKeys) {\r\n    const ret = {};\r\n    for (const key in props) {\r\n        if (!excludedKeys.includes(key)) {\r\n            Object.defineProperty(ret, key, {\r\n                enumerable: true,\r\n                get: () => props[key]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\r\n        warn(`withAsyncContext called without active current instance. ` +\r\n            `This is likely a bug.`);\r\n    }\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (prev[i] !== memo[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.26\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, toNumber, camelize as camelize$1, extend, EMPTY_OBJ, isObject, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst staticTemplateCache = new Map();\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        let template = staticTemplateCache.get(content);\r\n        if (!template) {\r\n            const t = doc.createElement('template');\r\n            t.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            template = t.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            staticTemplateCache.set(content, template);\r\n        }\r\n        parent.insertBefore(template.cloneNode(true), anchor);\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    const isCssString = isString(next);\r\n    if (next && !isCssString) {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const currentDisplay = style.display;\r\n        if (isCssString) {\r\n            if (prev !== next) {\r\n                style.cssText = next;\r\n            }\r\n        }\r\n        else if (prev) {\r\n            el.removeAttribute('style');\r\n        }\r\n        // indicates that the `display` of the element is controlled by `v-show`,\r\n        // so we always keep the current `display` value regardless of the `style`\r\n        // value, thus handing over control to `v-show`.\r\n        if ('_vod' in el) {\r\n            style.display = currentDisplay;\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' &&\r\n        el.tagName !== 'PROGRESS' &&\r\n        // custom elements may use _value internally\r\n        !el.tagName.includes('-')) {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue ||\r\n            // #4956: always set for OPTION elements because its value falls back to\r\n            // textContent if no value attribute is present. And setting .value for\r\n            // OPTION has no side effect\r\n            el.tagName === 'OPTION') {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = includeBooleanAttr(value);\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            try {\r\n                el[key] = 0;\r\n            }\r\n            catch (_a) { }\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue, isSVG);\r\n    }\r\n    else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue);\r\n    }\r\n    else if (isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!isModelListener(key)) {\r\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n        }\r\n    }\r\n    else if (key[0] === '.'\r\n        ? ((key = key.slice(1)), true)\r\n        : key[0] === '^'\r\n            ? ((key = key.slice(1)), false)\r\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n    }\r\n    else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n            el._trueValue = nextValue;\r\n        }\r\n        else if (key === 'false-value') {\r\n            el._falseValue = nextValue;\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG);\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML & textContent\r\n        if (key === 'innerHTML' || key === 'textContent') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction defineCustomElement(options, hydate) {\r\n    const Comp = defineComponent(options);\r\n    class VueCustomElement extends VueElement {\r\n        constructor(initialProps) {\r\n            super(Comp, initialProps, hydate);\r\n        }\r\n    }\r\n    VueCustomElement.def = Comp;\r\n    return VueCustomElement;\r\n}\r\nconst defineSSRCustomElement = ((options) => {\r\n    // @ts-ignore\r\n    return defineCustomElement(options, hydrate);\r\n});\r\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\r\n});\r\nclass VueElement extends BaseClass {\r\n    constructor(_def, _props = {}, hydrate) {\r\n        super();\r\n        this._def = _def;\r\n        this._props = _props;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._instance = null;\r\n        this._connected = false;\r\n        this._resolved = false;\r\n        this._numberProps = null;\r\n        if (this.shadowRoot && hydrate) {\r\n            hydrate(this._createVNode(), this.shadowRoot);\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && this.shadowRoot) {\r\n                warn(`Custom element has pre-rendered declarative shadow root but is not ` +\r\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\r\n            }\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this._connected = true;\r\n        if (!this._instance) {\r\n            this._resolveDef();\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        this._connected = false;\r\n        nextTick(() => {\r\n            if (!this._connected) {\r\n                render(null, this.shadowRoot);\r\n                this._instance = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * resolve inner component definition (handle possible async component)\r\n     */\r\n    _resolveDef() {\r\n        if (this._resolved) {\r\n            return;\r\n        }\r\n        this._resolved = true;\r\n        // set initial attrs\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            this._setAttr(this.attributes[i].name);\r\n        }\r\n        // watch future attr changes\r\n        new MutationObserver(mutations => {\r\n            for (const m of mutations) {\r\n                this._setAttr(m.attributeName);\r\n            }\r\n        }).observe(this, { attributes: true });\r\n        const resolve = (def) => {\r\n            const { props, styles } = def;\r\n            const hasOptions = !isArray(props);\r\n            const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : [];\r\n            // cast Number-type props set before resolve\r\n            let numberProps;\r\n            if (hasOptions) {\r\n                for (const key in this._props) {\r\n                    const opt = props[key];\r\n                    if (opt === Number || (opt && opt.type === Number)) {\r\n                        this._props[key] = toNumber(this._props[key]);\r\n                        (numberProps || (numberProps = Object.create(null)))[key] = true;\r\n                    }\r\n                }\r\n            }\r\n            this._numberProps = numberProps;\r\n            // check if there are props set pre-upgrade or connect\r\n            for (const key of Object.keys(this)) {\r\n                if (key[0] !== '_') {\r\n                    this._setProp(key, this[key], true, false);\r\n                }\r\n            }\r\n            // defining getter/setters on prototype\r\n            for (const key of rawKeys.map(camelize$1)) {\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        return this._getProp(key);\r\n                    },\r\n                    set(val) {\r\n                        this._setProp(key, val);\r\n                    }\r\n                });\r\n            }\r\n            // apply CSS\r\n            this._applyStyles(styles);\r\n            // initial render\r\n            this._update();\r\n        };\r\n        const asyncDef = this._def.__asyncLoader;\r\n        if (asyncDef) {\r\n            asyncDef().then(resolve);\r\n        }\r\n        else {\r\n            resolve(this._def);\r\n        }\r\n    }\r\n    _setAttr(key) {\r\n        let value = this.getAttribute(key);\r\n        if (this._numberProps && this._numberProps[key]) {\r\n            value = toNumber(value);\r\n        }\r\n        this._setProp(camelize$1(key), value, false);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _getProp(key) {\r\n        return this._props[key];\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\r\n        if (val !== this._props[key]) {\r\n            this._props[key] = val;\r\n            if (shouldUpdate && this._instance) {\r\n                this._update();\r\n            }\r\n            // reflect\r\n            if (shouldReflect) {\r\n                if (val === true) {\r\n                    this.setAttribute(hyphenate(key), '');\r\n                }\r\n                else if (typeof val === 'string' || typeof val === 'number') {\r\n                    this.setAttribute(hyphenate(key), val + '');\r\n                }\r\n                else if (!val) {\r\n                    this.removeAttribute(hyphenate(key));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _update() {\r\n        render(this._createVNode(), this.shadowRoot);\r\n    }\r\n    _createVNode() {\r\n        const vnode = createVNode(this._def, extend({}, this._props));\r\n        if (!this._instance) {\r\n            vnode.ce = instance => {\r\n                this._instance = instance;\r\n                instance.isCE = true;\r\n                // HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    instance.ceReload = newStyles => {\r\n                        // always reset styles\r\n                        if (this._styles) {\r\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\r\n                            this._styles.length = 0;\r\n                        }\r\n                        this._applyStyles(newStyles);\r\n                        // if this is an async component, ceReload is called from the inner\r\n                        // component so no need to reload the async wrapper\r\n                        if (!this._def.__asyncLoader) {\r\n                            // reload\r\n                            this._instance = null;\r\n                            this._update();\r\n                        }\r\n                    };\r\n                }\r\n                // intercept emit\r\n                instance.emit = (event, ...args) => {\r\n                    this.dispatchEvent(new CustomEvent(event, {\r\n                        detail: args\r\n                    }));\r\n                };\r\n                // locate nearest Vue custom element parent for provide/inject\r\n                let parent = this;\r\n                while ((parent =\r\n                    parent && (parent.parentNode || parent.host))) {\r\n                    if (parent instanceof VueElement) {\r\n                        instance.parent = parent._instance;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        return vnode;\r\n    }\r\n    _applyStyles(styles) {\r\n        if (styles) {\r\n            styles.forEach(css => {\r\n                const s = document.createElement('style');\r\n                s.textContent = css;\r\n                this.shadowRoot.appendChild(s);\r\n                // record for HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    (this._styles || (this._styles = [])).push(s);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    watchPostEffect(setVars);\r\n    onMounted(() => {\r\n        const ob = new MutationObserver(setVars);\r\n        ob.observe(instance.subTree.el.parentNode, { childList: true });\r\n        onUnmounted(() => ob.disconnect());\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        setVarsOnNode(vnode.el, vars);\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n    else if (vnode.type === Static) {\r\n        let { el, anchor } = vnode;\r\n        while (el) {\r\n            setVarsOnNode(el, vars);\r\n            if (el === anchor)\r\n                break;\r\n            el = el.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction setVarsOnNode(el, vars) {\r\n    if (el.nodeType === 1) {\r\n        const style = el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props =\r\n    /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1 ? root : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (lazy) {\r\n                return;\r\n            }\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVModelForSSR() {\r\n    vModelText.getSSRProps = ({ value }) => ({ value });\r\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n        if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n        if (isArray(value)) {\r\n            if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (isSet(value)) {\r\n            if (vnode.props && value.has(vnode.props.value)) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (value) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVShowForSSR() {\r\n    vShow.getSSRProps = ({ value }) => {\r\n        if (!value) {\r\n            return { style: { display: 'none' } };\r\n        }\r\n    };\r\n}\n\nconst rendererOptions = extend({ patchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return (renderer ||\r\n        (renderer = createRenderer(rendererOptions)));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        window.ShadowRoot &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\r\nlet ssrDirectiveInitialized = false;\r\n/**\r\n * @internal\r\n */\r\nconst initDirectivesForSSR = () => {\r\n        if (!ssrDirectiveInitialized) {\r\n            ssrDirectiveInitialized = true;\r\n            initVModelForSSR();\r\n            initVShowForSSR();\r\n        }\r\n    }\r\n    ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/*!\n * mdui 1.0.2 (https://mdui.org)\n * Copyright 2016-2021 zdhxiong\n * Licensed under MIT\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isUndefined(target) {\n    return typeof target === 'undefined';\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isWindow(target) {\n    return target instanceof Window;\n}\nfunction isDocument(target) {\n    return target instanceof Document;\n}\nfunction isElement(target) {\n    return target instanceof Element;\n}\nfunction isNode(target) {\n    return target instanceof Node;\n}\n/**\n * 是否是 IE 浏览器\n */\nfunction isIE() {\n    // @ts-ignore\n    return !!window.document.documentMode;\n}\nfunction isArrayLike(target) {\n    if (isFunction(target) || isWindow(target)) {\n        return false;\n    }\n    return isNumber(target.length);\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction toElement(target) {\n    return isDocument(target) ? target.documentElement : target;\n}\n/**\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\n * @param string\n */\nfunction toCamelCase(string) {\n    return string\n        .replace(/^-ms-/, 'ms-')\n        .replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n/**\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\n * @param string\n */\nfunction toKebabCase(string) {\n    return string.replace(/[A-Z]/g, (replacer) => '-' + replacer.toLowerCase());\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n */\nfunction getComputedStyleValue(element, name) {\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\n}\n/**\n * 检查元素的 box-sizing 是否是 border-box\n * @param element\n */\nfunction isBorderBox(element) {\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\n}\n/**\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\n * @param element\n * @param direction\n * @param extra\n */\nfunction getExtraWidth(element, direction, extra) {\n    const position = direction === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n    return [0, 1].reduce((prev, _, index) => {\n        let prop = extra + position[index];\n        if (extra === 'border') {\n            prop += 'Width';\n        }\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\n    }, 0);\n}\n/**\n * 获取元素的样式值，对 width 和 height 进行过处理\n * @param element\n * @param name\n */\nfunction getStyle(element, name) {\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\n    if (name === 'width' || name === 'height') {\n        const valueNumber = element.getBoundingClientRect()[name];\n        if (isBorderBox(element)) {\n            return `${valueNumber}px`;\n        }\n        return `${valueNumber -\n            getExtraWidth(element, name, 'border') -\n            getExtraWidth(element, name, 'padding')}px`;\n    }\n    return getComputedStyleValue(element, name);\n}\n/**\n * 获取子节点组成的数组\n * @param target\n * @param parent\n */\nfunction getChildNodesArray(target, parent) {\n    const tempParent = document.createElement(parent);\n    tempParent.innerHTML = target;\n    return [].slice.call(tempParent.childNodes);\n}\n/**\n * 始终返回 false 的函数\n */\nfunction returnFalse() {\n    return false;\n}\n/**\n * 数值单位的 CSS 属性\n */\nconst cssNumber = [\n    'animationIterationCount',\n    'columnCount',\n    'fillOpacity',\n    'flexGrow',\n    'flexShrink',\n    'fontWeight',\n    'gridArea',\n    'gridColumn',\n    'gridColumnEnd',\n    'gridColumnStart',\n    'gridRow',\n    'gridRowEnd',\n    'gridRowStart',\n    'lineHeight',\n    'opacity',\n    'order',\n    'orphans',\n    'widows',\n    'zIndex',\n    'zoom',\n];\n\nfunction each(target, callback) {\n    if (isArrayLike(target)) {\n        for (let i = 0; i < target.length; i += 1) {\n            if (callback.call(target[i], i, target[i]) === false) {\n                return target;\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i += 1) {\n            if (callback.call(target[keys[i]], keys[i], target[keys[i]]) === false) {\n                return target;\n            }\n        }\n    }\n    return target;\n}\n\n/**\n * 为了使用模块扩充，这里不能使用默认导出\n */\nclass JQ {\n    constructor(arr) {\n        this.length = 0;\n        if (!arr) {\n            return this;\n        }\n        each(arr, (i, item) => {\n            // @ts-ignore\n            this[i] = item;\n        });\n        this.length = arr.length;\n        return this;\n    }\n}\n\nfunction get$() {\n    const $ = function (selector) {\n        if (!selector) {\n            return new JQ();\n        }\n        // JQ\n        if (selector instanceof JQ) {\n            return selector;\n        }\n        // function\n        if (isFunction(selector)) {\n            if (/complete|loaded|interactive/.test(document.readyState) &&\n                document.body) {\n                selector.call(document, $);\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), false);\n            }\n            return new JQ([document]);\n        }\n        // String\n        if (isString(selector)) {\n            const html = selector.trim();\n            // 根据 HTML 字符串创建 JQ 对象\n            if (html[0] === '<' && html[html.length - 1] === '>') {\n                let toCreate = 'div';\n                const tags = {\n                    li: 'ul',\n                    tr: 'tbody',\n                    td: 'tr',\n                    th: 'tr',\n                    tbody: 'table',\n                    option: 'select',\n                };\n                each(tags, (childTag, parentTag) => {\n                    if (html.indexOf(`<${childTag}`) === 0) {\n                        toCreate = parentTag;\n                        return false;\n                    }\n                    return;\n                });\n                return new JQ(getChildNodesArray(html, toCreate));\n            }\n            // 根据 CSS 选择器创建 JQ 对象\n            const isIdSelector = selector[0] === '#' && !selector.match(/[ .<>:~]/);\n            if (!isIdSelector) {\n                return new JQ(document.querySelectorAll(selector));\n            }\n            const element = document.getElementById(selector.slice(1));\n            if (element) {\n                return new JQ([element]);\n            }\n            return new JQ();\n        }\n        if (isArrayLike(selector) && !isNode(selector)) {\n            return new JQ(selector);\n        }\n        return new JQ([selector]);\n    };\n    $.fn = JQ.prototype;\n    return $;\n}\nconst $ = get$();\n\n// 避免页面加载完后直接执行css动画\n// https://css-tricks.com/transitions-only-after-page-load/\nsetTimeout(() => $('body').addClass('mdui-loaded'));\nconst mdui = {\n    $: $,\n};\n\n$.fn.each = function (callback) {\n    return each(this, callback);\n};\n\n/**\n * 检查 container 元素内是否包含 contains 元素\n * @param container 父元素\n * @param contains 子元素\n * @example\n```js\ncontains( document, document.body ); // true\ncontains( document.getElementById('test'), document ); // false\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\n```\n */\nfunction contains(container, contains) {\n    return container !== contains && toElement(container).contains(contains);\n}\n\n/**\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\n * @param first 第一个数组\n * @param second 该数组的元素将被追加到第一个数组中\n * @example\n```js\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\n// [ 0, 1, 2, 2, 3, 4 ]\n```\n */\nfunction merge(first, second) {\n    each(second, (_, value) => {\n        first.push(value);\n    });\n    return first;\n}\n\n$.fn.get = function (index) {\n    return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n};\n\n$.fn.find = function (selector) {\n    const foundElements = [];\n    this.each((_, element) => {\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\n    });\n    return new JQ(foundElements);\n};\n\n// 存储事件\nconst handlers = {};\n// 元素ID\nlet mduiElementId = 1;\n/**\n * 为元素赋予一个唯一的ID\n */\nfunction getElementId(element) {\n    const key = '_mduiEventId';\n    // @ts-ignore\n    if (!element[key]) {\n        // @ts-ignore\n        element[key] = ++mduiElementId;\n    }\n    // @ts-ignore\n    return element[key];\n}\n/**\n * 解析事件名中的命名空间\n */\nfunction parse(type) {\n    const parts = type.split('.');\n    return {\n        type: parts[0],\n        ns: parts.slice(1).sort().join(' '),\n    };\n}\n/**\n * 命名空间匹配规则\n */\nfunction matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\n}\n/**\n * 获取匹配的事件\n * @param element\n * @param type\n * @param func\n * @param selector\n */\nfunction getHandlers(element, type, func, selector) {\n    const event = parse(type);\n    return (handlers[getElementId(element)] || []).filter((handler) => handler &&\n        (!event.type || handler.type === event.type) &&\n        (!event.ns || matcherFor(event.ns).test(handler.ns)) &&\n        (!func || getElementId(handler.func) === getElementId(func)) &&\n        (!selector || handler.selector === selector));\n}\n/**\n * 添加事件监听\n * @param element\n * @param types\n * @param func\n * @param data\n * @param selector\n */\nfunction add(element, types, func, data, selector) {\n    const elementId = getElementId(element);\n    if (!handlers[elementId]) {\n        handlers[elementId] = [];\n    }\n    // 传入 data.useCapture 来设置 useCapture: true\n    let useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n    }\n    types.split(' ').forEach((type) => {\n        if (!type) {\n            return;\n        }\n        const event = parse(type);\n        function callFn(e, elem) {\n            // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n            const result = func.apply(elem, \n            // @ts-ignore\n            e._detail === undefined ? [e] : [e].concat(e._detail));\n            if (result === false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n        function proxyFn(e) {\n            // @ts-ignore\n            if (e._ns && !matcherFor(e._ns).test(event.ns)) {\n                return;\n            }\n            // @ts-ignore\n            e._data = data;\n            if (selector) {\n                // 事件代理\n                $(element)\n                    .find(selector)\n                    .get()\n                    .reverse()\n                    .forEach((elem) => {\n                    if (elem === e.target ||\n                        contains(elem, e.target)) {\n                        callFn(e, elem);\n                    }\n                });\n            }\n            else {\n                // 不使用事件代理\n                callFn(e, element);\n            }\n        }\n        const handler = {\n            type: event.type,\n            ns: event.ns,\n            func,\n            selector,\n            id: handlers[elementId].length,\n            proxy: proxyFn,\n        };\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.type, proxyFn, useCapture);\n    });\n}\n/**\n * 移除事件监听\n * @param element\n * @param types\n * @param func\n * @param selector\n */\nfunction remove(element, types, func, selector) {\n    const handlersInElement = handlers[getElementId(element)] || [];\n    const removeEvent = (handler) => {\n        delete handlersInElement[handler.id];\n        element.removeEventListener(handler.type, handler.proxy, false);\n    };\n    if (!types) {\n        handlersInElement.forEach((handler) => removeEvent(handler));\n    }\n    else {\n        types.split(' ').forEach((type) => {\n            if (type) {\n                getHandlers(element, type, func, selector).forEach((handler) => removeEvent(handler));\n            }\n        });\n    }\n}\n\n$.fn.trigger = function (type, extraParameters) {\n    const event = parse(type);\n    let eventObject;\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n    };\n    const isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(event.type) > -1;\n    if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        eventObject = new MouseEvent(event.type, eventParams);\n    }\n    else {\n        eventParams.detail = extraParameters;\n        eventObject = new CustomEvent(event.type, eventParams);\n    }\n    // @ts-ignore\n    eventObject._detail = extraParameters;\n    // @ts-ignore\n    eventObject._ns = event.ns;\n    return this.each(function () {\n        this.dispatchEvent(eventObject);\n    });\n};\n\nfunction extend(target, object1, ...objectN) {\n    objectN.unshift(object1);\n    each(objectN, (_, object) => {\n        each(object, (prop, value) => {\n            if (!isUndefined(value)) {\n                target[prop] = value;\n            }\n        });\n    });\n    return target;\n}\n\n/**\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\n *\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\n * @param obj 对象或数组\n * @example\n```js\nparam({ width: 1680, height: 1050 });\n// width=1680&height=1050\n```\n * @example\n```js\nparam({ foo: { one: 1, two: 2 }})\n// foo[one]=1&foo[two]=2\n```\n * @example\n```js\nparam({ids: [1, 2, 3]})\n// ids[]=1&ids[]=2&ids[]=3\n```\n * @example\n```js\nparam([\n  {\"name\":\"name\",\"value\":\"mdui\"},\n  {\"name\":\"password\",\"value\":\"123456\"}\n])\n// name=mdui&password=123456\n```\n */\nfunction param(obj) {\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\n        return '';\n    }\n    const args = [];\n    function destructure(key, value) {\n        let keyTmp;\n        if (isObjectLike(value)) {\n            each(value, (i, v) => {\n                if (Array.isArray(value) && !isObjectLike(v)) {\n                    keyTmp = '';\n                }\n                else {\n                    keyTmp = i;\n                }\n                destructure(`${key}[${keyTmp}]`, v);\n            });\n        }\n        else {\n            if (value == null || value === '') {\n                keyTmp = '=';\n            }\n            else {\n                keyTmp = `=${encodeURIComponent(value)}`;\n            }\n            args.push(encodeURIComponent(key) + keyTmp);\n        }\n    }\n    if (Array.isArray(obj)) {\n        each(obj, function () {\n            destructure(this.name, this.value);\n        });\n    }\n    else {\n        each(obj, destructure);\n    }\n    return args.join('&');\n}\n\n// 全局配置参数\nconst globalOptions = {};\n// 全局事件名\nconst ajaxEvents = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n};\n\n/**\n * 判断此请求方法是否通过查询字符串提交参数\n * @param method 请求方法，大写\n */\nfunction isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n}\n/**\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n * @param url\n * @param query\n */\nfunction appendQuery(url, query) {\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\n}\n/**\n * 合并请求参数，参数优先级：options > globalOptions > defaults\n * @param options\n */\nfunction mergeOptions(options) {\n    // 默认参数\n    const defaults = {\n        url: '',\n        method: 'GET',\n        data: '',\n        processData: true,\n        async: true,\n        cache: true,\n        username: '',\n        password: '',\n        headers: {},\n        xhrFields: {},\n        statusCode: {},\n        dataType: 'text',\n        contentType: 'application/x-www-form-urlencoded',\n        timeout: 0,\n        global: true,\n    };\n    // globalOptions 中的回调函数不合并\n    each(globalOptions, (key, value) => {\n        const callbacks = [\n            'beforeSend',\n            'success',\n            'error',\n            'complete',\n            'statusCode',\n        ];\n        // @ts-ignore\n        if (callbacks.indexOf(key) < 0 && !isUndefined(value)) {\n            defaults[key] = value;\n        }\n    });\n    return extend({}, defaults, options);\n}\n/**\n * 发送 ajax 请求\n * @param options\n * @example\n```js\najax({\n  method: \"POST\",\n  url: \"some.php\",\n  data: { name: \"John\", location: \"Boston\" }\n}).then(function( msg ) {\n  alert( \"Data Saved: \" + msg );\n});\n```\n */\nfunction ajax(options) {\n    // 是否已取消请求\n    let isCanceled = false;\n    // 事件参数\n    const eventParams = {};\n    // 参数合并\n    const mergedOptions = mergeOptions(options);\n    let url = mergedOptions.url || window.location.toString();\n    const method = mergedOptions.method.toUpperCase();\n    let data = mergedOptions.data;\n    const processData = mergedOptions.processData;\n    const async = mergedOptions.async;\n    const cache = mergedOptions.cache;\n    const username = mergedOptions.username;\n    const password = mergedOptions.password;\n    const headers = mergedOptions.headers;\n    const xhrFields = mergedOptions.xhrFields;\n    const statusCode = mergedOptions.statusCode;\n    const dataType = mergedOptions.dataType;\n    const contentType = mergedOptions.contentType;\n    const timeout = mergedOptions.timeout;\n    const global = mergedOptions.global;\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    if (data &&\n        (isQueryStringData(method) || processData) &&\n        !isString(data) &&\n        !(data instanceof ArrayBuffer) &&\n        !(data instanceof Blob) &&\n        !(data instanceof Document) &&\n        !(data instanceof FormData)) {\n        data = param(data);\n    }\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (data && isQueryStringData(method)) {\n        // 查询字符串拼接到 URL 中\n        url = appendQuery(url, data);\n        data = null;\n    }\n    /**\n     * 触发事件和回调函数\n     * @param event\n     * @param params\n     * @param callback\n     * @param args\n     */\n    function trigger(event, params, callback, ...args) {\n        // 触发全局事件\n        if (global) {\n            $(document).trigger(event, params);\n        }\n        // 触发 ajax 回调和事件\n        let result1;\n        let result2;\n        if (callback) {\n            // 全局回调\n            if (callback in globalOptions) {\n                // @ts-ignore\n                result1 = globalOptions[callback](...args);\n            }\n            // 自定义回调\n            if (mergedOptions[callback]) {\n                // @ts-ignore\n                result2 = mergedOptions[callback](...args);\n            }\n            // beforeSend 回调返回 false 时取消 ajax 请求\n            if (callback === 'beforeSend' &&\n                (result1 === false || result2 === false)) {\n                isCanceled = true;\n            }\n        }\n    }\n    // XMLHttpRequest 请求\n    function XHR() {\n        let textStatus;\n        return new Promise((resolve, reject) => {\n            // GET/HEAD 请求的缓存处理\n            if (isQueryStringData(method) && !cache) {\n                url = appendQuery(url, `_=${Date.now()}`);\n            }\n            // 创建 XHR\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, async, username, password);\n            if (contentType ||\n                (data && !isQueryStringData(method) && contentType !== false)) {\n                xhr.setRequestHeader('Content-Type', contentType);\n            }\n            // 设置 Accept\n            if (dataType === 'json') {\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n            }\n            // 添加 headers\n            if (headers) {\n                each(headers, (key, value) => {\n                    // undefined 值不发送，string 和 null 需要发送\n                    if (!isUndefined(value)) {\n                        xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\n                    }\n                });\n            }\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\n            const crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(url) &&\n                RegExp.$2 !== window.location.host;\n            if (!crossDomain) {\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            }\n            if (xhrFields) {\n                each(xhrFields, (key, value) => {\n                    // @ts-ignore\n                    xhr[key] = value;\n                });\n            }\n            eventParams.xhr = xhr;\n            eventParams.options = mergedOptions;\n            let xhrTimeout;\n            xhr.onload = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                // AJAX 返回的 HTTP 响应码是否表示成功\n                const isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) ||\n                    xhr.status === 304 ||\n                    xhr.status === 0;\n                let responseData;\n                if (isHttpStatusSuccess) {\n                    if (xhr.status === 204 || method === 'HEAD') {\n                        textStatus = 'nocontent';\n                    }\n                    else if (xhr.status === 304) {\n                        textStatus = 'notmodified';\n                    }\n                    else {\n                        textStatus = 'success';\n                    }\n                    if (dataType === 'json') {\n                        try {\n                            responseData =\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\n                            eventParams.data = responseData;\n                        }\n                        catch (err) {\n                            textStatus = 'parsererror';\n                            trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                            reject(new Error(textStatus));\n                        }\n                        if (textStatus !== 'parsererror') {\n                            trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                            resolve(responseData);\n                        }\n                    }\n                    else {\n                        responseData =\n                            method === 'HEAD'\n                                ? undefined\n                                : xhr.responseType === 'text' || xhr.responseType === ''\n                                    ? xhr.responseText\n                                    : xhr.response;\n                        eventParams.data = responseData;\n                        trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                        resolve(responseData);\n                    }\n                }\n                else {\n                    textStatus = 'error';\n                    trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                    reject(new Error(textStatus));\n                }\n                // statusCode\n                each([globalOptions.statusCode, statusCode], (_, func) => {\n                    if (func && func[xhr.status]) {\n                        if (isHttpStatusSuccess) {\n                            func[xhr.status](responseData, textStatus, xhr);\n                        }\n                        else {\n                            func[xhr.status](xhr, textStatus);\n                        }\n                    }\n                });\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, textStatus);\n            };\n            xhr.onerror = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, xhr.statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, 'error');\n                reject(new Error(xhr.statusText));\n            };\n            xhr.onabort = function () {\n                let statusText = 'abort';\n                if (xhrTimeout) {\n                    statusText = 'timeout';\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, statusText);\n                reject(new Error(statusText));\n            };\n            // ajax start 回调\n            trigger(ajaxEvents.ajaxStart, eventParams, 'beforeSend', xhr);\n            if (isCanceled) {\n                reject(new Error('cancel'));\n                return;\n            }\n            // Timeout\n            if (timeout > 0) {\n                xhrTimeout = setTimeout(() => {\n                    xhr.abort();\n                }, timeout);\n            }\n            // 发送 XHR\n            xhr.send(data);\n        });\n    }\n    return XHR();\n}\n\n$.ajax = ajax;\n\n/**\n * 为 Ajax 请求设置全局配置参数\n * @param options 键值对参数\n * @example\n```js\najaxSetup({\n  dataType: 'json',\n  method: 'POST',\n});\n```\n */\nfunction ajaxSetup(options) {\n    return extend(globalOptions, options);\n}\n\n$.ajaxSetup = ajaxSetup;\n\n$.contains = contains;\n\nconst dataNS = '_mduiElementDataStorage';\n\n/**\n * 在元素上设置键值对数据\n * @param element\n * @param object\n */\nfunction setObjectToElement(element, object) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        // @ts-ignore\n        element[dataNS] = {};\n    }\n    each(object, (key, value) => {\n        // @ts-ignore\n        element[dataNS][toCamelCase(key)] = value;\n    });\n}\nfunction data(element, key, value) {\n    // 根据键值对设置值\n    // data(element, { 'key' : 'value' })\n    if (isObjectLike(key)) {\n        setObjectToElement(element, key);\n        return key;\n    }\n    // 根据 key、value 设置值\n    // data(element, 'key', 'value')\n    if (!isUndefined(value)) {\n        setObjectToElement(element, { [key]: value });\n        return value;\n    }\n    // 获取所有值\n    // data(element)\n    if (isUndefined(key)) {\n        // @ts-ignore\n        return element[dataNS] ? element[dataNS] : {};\n    }\n    // 从 dataNS 中获取指定值\n    // data(element, 'key')\n    key = toCamelCase(key);\n    // @ts-ignore\n    if (element[dataNS] && key in element[dataNS]) {\n        // @ts-ignore\n        return element[dataNS][key];\n    }\n    return undefined;\n}\n\n$.data = data;\n\n$.each = each;\n\n$.extend = function (...objectN) {\n    if (objectN.length === 1) {\n        each(objectN[0], (prop, value) => {\n            this[prop] = value;\n        });\n        return this;\n    }\n    return extend(objectN.shift(), objectN.shift(), ...objectN);\n};\n\nfunction map(elements, callback) {\n    let value;\n    const ret = [];\n    each(elements, (i, element) => {\n        value = callback.call(window, element, i);\n        if (value != null) {\n            ret.push(value);\n        }\n    });\n    return [].concat(...ret);\n}\n\n$.map = map;\n\n$.merge = merge;\n\n$.param = param;\n\n/**\n * 移除指定元素上存放的数据\n * @param element 存放数据的元素\n * @param name\n * 数据键名\n *\n * 若未指定键名，将移除元素上所有数据\n *\n * 多个键名可以用空格分隔，或者用数组表示多个键名\n  @example\n```js\n// 移除元素上键名为 name 的数据\nremoveData(document.body, 'name');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, 'name1 name2');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, ['name1', 'name2']);\n```\n * @example\n```js\n// 移除元素上所有数据\nremoveData(document.body);\n```\n */\nfunction removeData(element, name) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        return;\n    }\n    const remove = (nameItem) => {\n        nameItem = toCamelCase(nameItem);\n        // @ts-ignore\n        if (element[dataNS][nameItem]) {\n            // @ts-ignore\n            element[dataNS][nameItem] = null;\n            // @ts-ignore\n            delete element[dataNS][nameItem];\n        }\n    };\n    if (isUndefined(name)) {\n        // @ts-ignore\n        element[dataNS] = null;\n        // @ts-ignore\n        delete element[dataNS];\n        // @ts-ignore\n    }\n    else if (isString(name)) {\n        name\n            .split(' ')\n            .filter((nameItem) => nameItem)\n            .forEach((nameItem) => remove(nameItem));\n    }\n    else {\n        each(name, (_, nameItem) => remove(nameItem));\n    }\n}\n\n$.removeData = removeData;\n\n/**\n * 过滤掉数组中的重复元素\n * @param arr 数组\n * @example\n```js\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\n// [1, 2, 12, 3]\n```\n */\nfunction unique(arr) {\n    const result = [];\n    each(arr, (_, val) => {\n        if (result.indexOf(val) === -1) {\n            result.push(val);\n        }\n    });\n    return result;\n}\n\n$.unique = unique;\n\n$.fn.add = function (selector) {\n    return new JQ(unique(merge(this.get(), $(selector).get())));\n};\n\neach(['add', 'remove', 'toggle'], (_, name) => {\n    $.fn[`${name}Class`] = function (className) {\n        if (name === 'remove' && !arguments.length) {\n            return this.each((_, element) => {\n                element.setAttribute('class', '');\n            });\n        }\n        return this.each((i, element) => {\n            if (!isElement(element)) {\n                return;\n            }\n            const classes = (isFunction(className)\n                ? className.call(element, i, element.getAttribute('class') || '')\n                : className)\n                .split(' ')\n                .filter((name) => name);\n            each(classes, (_, cls) => {\n                element.classList[name](cls);\n            });\n        });\n    };\n});\n\neach(['insertBefore', 'insertAfter'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\n        const $target = $(target);\n        const result = [];\n        $target.each((index, target) => {\n            if (!target.parentNode) {\n                return;\n            }\n            $element.each((_, element) => {\n                const newItem = index\n                    ? element.cloneNode(true)\n                    : element;\n                const existingItem = nameIndex ? target.nextSibling : target;\n                result.push(newItem);\n                target.parentNode.insertBefore(newItem, existingItem);\n            });\n        });\n        return $(nameIndex ? result.reverse() : result);\n    };\n});\n\n/**\n * 是否不是 HTML 字符串（包裹在 <> 中）\n * @param target\n */\nfunction isPlainText(target) {\n    return (isString(target) && (target[0] !== '<' || target[target.length - 1] !== '>'));\n}\neach(['before', 'after'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理\n        if (nameIndex === 1) {\n            args = args.reverse();\n        }\n        return this.each((index, element) => {\n            const targets = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            each(targets, (_, target) => {\n                let $target;\n                if (isPlainText(target)) {\n                    $target = $(getChildNodesArray(target, 'div'));\n                }\n                else if (index && isElement(target)) {\n                    $target = $(target.cloneNode(true));\n                }\n                else {\n                    $target = $(target);\n                }\n                $target[nameIndex ? 'insertAfter' : 'insertBefore'](element);\n            });\n        });\n    };\n});\n\n$.fn.off = function (types, selector, callback) {\n    // types 是对象\n    if (isObjectLike(types)) {\n        each(types, (type, fn) => {\n            // this.off('click', undefined, function () {})\n            // this.off('click', '.box', function () {})\n            this.off(type, selector, fn);\n        });\n        return this;\n    }\n    // selector 不存在\n    if (selector === false || isFunction(selector)) {\n        callback = selector;\n        selector = undefined;\n        // this.off('click', undefined, function () {})\n    }\n    // callback 传入 `false`，相当于 `return false`\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    return this.each(function () {\n        remove(this, types, callback, selector);\n    });\n};\n\n$.fn.on = function (types, selector, data, callback, one) {\n    // types 可以是 type/func 对象\n    if (isObjectLike(types)) {\n        // (types-Object, selector, data)\n        if (!isString(selector)) {\n            // (types-Object, data)\n            data = data || selector;\n            selector = undefined;\n        }\n        each(types, (type, fn) => {\n            // selector 和 data 都可能是 undefined\n            // @ts-ignore\n            this.on(type, selector, data, fn, one);\n        });\n        return this;\n    }\n    if (data == null && callback == null) {\n        // (types, fn)\n        callback = selector;\n        data = selector = undefined;\n    }\n    else if (callback == null) {\n        if (isString(selector)) {\n            // (types, selector, fn)\n            callback = data;\n            data = undefined;\n        }\n        else {\n            // (types, data, fn)\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    else if (!callback) {\n        return this;\n    }\n    // $().one()\n    if (one) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const _this = this;\n        const origCallback = callback;\n        callback = function (event) {\n            _this.off(event.type, selector, callback);\n            // eslint-disable-next-line prefer-rest-params\n            return origCallback.apply(this, arguments);\n        };\n    }\n    return this.each(function () {\n        add(this, types, callback, data, selector);\n    });\n};\n\neach(ajaxEvents, (name, eventName) => {\n    $.fn[name] = function (fn) {\n        return this.on(eventName, (e, params) => {\n            fn(e, params.xhr, params.options, params.data);\n        });\n    };\n});\n\n$.fn.map = function (callback) {\n    return new JQ(map(this, (element, i) => callback.call(element, i, element)));\n};\n\n$.fn.clone = function () {\n    return this.map(function () {\n        return this.cloneNode(true);\n    });\n};\n\n$.fn.is = function (selector) {\n    let isMatched = false;\n    if (isFunction(selector)) {\n        this.each((index, element) => {\n            if (selector.call(element, index, element)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    if (isString(selector)) {\n        this.each((_, element) => {\n            if (isDocument(element) || isWindow(element)) {\n                return;\n            }\n            // @ts-ignore\n            const matches = element.matches || element.msMatchesSelector;\n            if (matches.call(element, selector)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    const $compareWith = $(selector);\n    this.each((_, element) => {\n        $compareWith.each((_, compare) => {\n            if (element === compare) {\n                isMatched = true;\n            }\n        });\n    });\n    return isMatched;\n};\n\n$.fn.remove = function (selector) {\n    return this.each((_, element) => {\n        if (element.parentNode && (!selector || $(element).is(selector))) {\n            element.parentNode.removeChild(element);\n        }\n    });\n};\n\neach(['prepend', 'append'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        return this.each((index, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            const child = childLength\n                ? childNodes[nameIndex ? childLength - 1 : 0]\n                : document.createElement('div');\n            if (!childLength) {\n                element.appendChild(child);\n            }\n            let contents = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素\n            if (index) {\n                contents = contents.map((content) => {\n                    return isString(content) ? content : $(content).clone();\n                });\n            }\n            $(child)[nameIndex ? 'after' : 'before'](...contents);\n            if (!childLength) {\n                element.removeChild(child);\n            }\n        });\n    };\n});\n\neach(['appendTo', 'prependTo'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const extraChilds = [];\n        const $target = $(target).map((_, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            if (childLength) {\n                return childNodes[nameIndex ? 0 : childLength - 1];\n            }\n            const child = document.createElement('div');\n            element.appendChild(child);\n            extraChilds.push(child);\n            return child;\n        });\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\n        $(extraChilds).remove();\n        return $result;\n    };\n});\n\neach(['attr', 'prop', 'css'], (nameIndex, name) => {\n    function set(element, key, value) {\n        // 值为 undefined 时，不修改\n        if (isUndefined(value)) {\n            return;\n        }\n        switch (nameIndex) {\n            // attr\n            case 0:\n                if (isNull(value)) {\n                    element.removeAttribute(key);\n                }\n                else {\n                    element.setAttribute(key, value);\n                }\n                break;\n            // prop\n            case 1:\n                // @ts-ignore\n                element[key] = value;\n                break;\n            // css\n            default:\n                key = toCamelCase(key);\n                // @ts-ignore\n                element.style[key] = isNumber(value)\n                    ? `${value}${cssNumber.indexOf(key) > -1 ? '' : 'px'}`\n                    : value;\n                break;\n        }\n    }\n    function get(element, key) {\n        switch (nameIndex) {\n            // attr\n            case 0:\n                // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\n                const value = element.getAttribute(key);\n                return isNull(value) ? undefined : value;\n            // prop\n            case 1:\n                // @ts-ignore\n                return element[key];\n            // css\n            default:\n                return getStyle(element, key);\n        }\n    }\n    $.fn[name] = function (key, value) {\n        if (isObjectLike(key)) {\n            each(key, (k, v) => {\n                // @ts-ignore\n                this[name](k, v);\n            });\n            return this;\n        }\n        if (arguments.length === 1) {\n            const element = this[0];\n            return isElement(element) ? get(element, key) : undefined;\n        }\n        return this.each((i, element) => {\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\n        });\n    };\n});\n\n$.fn.children = function (selector) {\n    const children = [];\n    this.each((_, element) => {\n        each(element.childNodes, (__, childNode) => {\n            if (!isElement(childNode)) {\n                return;\n            }\n            if (!selector || $(childNode).is(selector)) {\n                children.push(childNode);\n            }\n        });\n    });\n    return new JQ(unique(children));\n};\n\n$.fn.slice = function (...args) {\n    return new JQ([].slice.apply(this, args));\n};\n\n$.fn.eq = function (index) {\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n    return new JQ(ret);\n};\n\nfunction dir($elements, nameIndex, node, selector, filter) {\n    const ret = [];\n    let target;\n    $elements.each((_, element) => {\n        target = element[node];\n        // 不能包含最顶层的 document 元素\n        while (target && isElement(target)) {\n            // prevUntil, nextUntil, parentsUntil\n            if (nameIndex === 2) {\n                if (selector && $(target).is(selector)) {\n                    break;\n                }\n                if (!filter || $(target).is(filter)) {\n                    ret.push(target);\n                }\n            }\n            // prev, next, parent\n            else if (nameIndex === 0) {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n                break;\n            }\n            // prevAll, nextAll, parents\n            else {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n            }\n            // @ts-ignore\n            target = target[node];\n        }\n    });\n    return new JQ(unique(ret));\n}\n\neach(['', 's', 'sUntil'], (nameIndex, name) => {\n    $.fn[`parent${name}`] = function (selector, filter) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\n    };\n});\n\n$.fn.closest = function (selector) {\n    if (this.is(selector)) {\n        return this;\n    }\n    const matched = [];\n    this.parents().each((_, element) => {\n        if ($(element).is(selector)) {\n            matched.push(element);\n            return false;\n        }\n    });\n    return new JQ(matched);\n};\n\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n// 从 `data-*` 中获取的值，需要经过该函数转换\nfunction getData(value) {\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    if (value === 'null') {\n        return null;\n    }\n    if (value === +value + '') {\n        return +value;\n    }\n    if (rbrace.test(value)) {\n        return JSON.parse(value);\n    }\n    return value;\n}\n// 若 value 不存在，则从 `data-*` 中获取值\nfunction dataAttr(element, key, value) {\n    if (isUndefined(value) && element.nodeType === 1) {\n        const name = 'data-' + toKebabCase(key);\n        value = element.getAttribute(name);\n        if (isString(value)) {\n            try {\n                value = getData(value);\n            }\n            catch (e) { }\n        }\n        else {\n            value = undefined;\n        }\n    }\n    return value;\n}\n$.fn.data = function (key, value) {\n    // 获取所有值\n    if (isUndefined(key)) {\n        if (!this.length) {\n            return undefined;\n        }\n        const element = this[0];\n        const resultData = data(element);\n        // window, document 上不存在 `data-*` 属性\n        if (element.nodeType !== 1) {\n            return resultData;\n        }\n        // 从 `data-*` 中获取值\n        const attrs = element.attributes;\n        let i = attrs.length;\n        while (i--) {\n            if (attrs[i]) {\n                let name = attrs[i].name;\n                if (name.indexOf('data-') === 0) {\n                    name = toCamelCase(name.slice(5));\n                    resultData[name] = dataAttr(element, name, resultData[name]);\n                }\n            }\n        }\n        return resultData;\n    }\n    // 同时设置多个值\n    if (isObjectLike(key)) {\n        return this.each(function () {\n            data(this, key);\n        });\n    }\n    // value 传入了 undefined\n    if (arguments.length === 2 && isUndefined(value)) {\n        return this;\n    }\n    // 设置值\n    if (!isUndefined(value)) {\n        return this.each(function () {\n            data(this, key, value);\n        });\n    }\n    // 获取值\n    if (!this.length) {\n        return undefined;\n    }\n    return dataAttr(this[0], key, data(this[0], key));\n};\n\n$.fn.empty = function () {\n    return this.each(function () {\n        this.innerHTML = '';\n    });\n};\n\n$.fn.extend = function (obj) {\n    each(obj, (prop, value) => {\n        // 在 JQ 对象上扩展方法时，需要自己添加 typescript 的类型定义\n        $.fn[prop] = value;\n    });\n    return this;\n};\n\n$.fn.filter = function (selector) {\n    if (isFunction(selector)) {\n        return this.map((index, element) => selector.call(element, index, element) ? element : undefined);\n    }\n    if (isString(selector)) {\n        return this.map((_, element) => $(element).is(selector) ? element : undefined);\n    }\n    const $selector = $(selector);\n    return this.map((_, element) => $selector.get().indexOf(element) > -1 ? element : undefined);\n};\n\n$.fn.first = function () {\n    return this.eq(0);\n};\n\n$.fn.has = function (selector) {\n    const $targets = isString(selector) ? this.find(selector) : $(selector);\n    const { length } = $targets;\n    return this.map(function () {\n        for (let i = 0; i < length; i += 1) {\n            if (contains(this, $targets[i])) {\n                return this;\n            }\n        }\n        return;\n    });\n};\n\n$.fn.hasClass = function (className) {\n    return this[0].classList.contains(className);\n};\n\n/**\n * 值上面的 padding、border、margin 处理\n * @param element\n * @param name\n * @param value\n * @param funcIndex\n * @param includeMargin\n * @param multiply\n */\nfunction handleExtraWidth(element, name, value, funcIndex, includeMargin, multiply) {\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\n    const getExtraWidthValue = (extra) => {\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\n            multiply);\n    };\n    if (funcIndex === 2 && includeMargin) {\n        value += getExtraWidthValue('margin');\n    }\n    if (isBorderBox(element)) {\n        // IE 为 box-sizing: border-box 时，得到的值不含 border 和 padding，这里先修复\n        // 仅获取时需要处理，multiply === 1 为 get\n        if (isIE() && multiply === 1) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 0) {\n            value -= getExtraWidthValue('border');\n        }\n        if (funcIndex === 1) {\n            value -= getExtraWidthValue('border');\n            value -= getExtraWidthValue('padding');\n        }\n    }\n    else {\n        if (funcIndex === 0) {\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 2) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n    }\n    return value;\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n */\nfunction get(element, name, funcIndex, includeMargin) {\n    const clientProp = `client${name}`;\n    const scrollProp = `scroll${name}`;\n    const offsetProp = `offset${name}`;\n    const innerProp = `inner${name}`;\n    // $(window).width()\n    if (isWindow(element)) {\n        // outerWidth, outerHeight 需要包含滚动条的宽度\n        return funcIndex === 2\n            ? element[innerProp]\n            : toElement(document)[clientProp];\n    }\n    // $(document).width()\n    if (isDocument(element)) {\n        const doc = toElement(element);\n        return Math.max(\n        // @ts-ignore\n        element.body[scrollProp], doc[scrollProp], \n        // @ts-ignore\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\n    }\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\n}\n/**\n * 设置元素的样式值\n * @param element\n * @param elementIndex\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n * @param value\n */\nfunction set(element, elementIndex, name, funcIndex, includeMargin, value) {\n    let computedValue = isFunction(value)\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\n        : value;\n    if (computedValue == null) {\n        return;\n    }\n    const $element = $(element);\n    const dimension = name.toLowerCase();\n    // 特殊的值，不需要计算 padding、border、margin\n    if (['auto', 'inherit', ''].indexOf(computedValue) > -1) {\n        $element.css(dimension, computedValue);\n        return;\n    }\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\n    const numerical = parseFloat(computedValue);\n    computedValue =\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\n            (suffix || 'px');\n    $element.css(dimension, computedValue);\n}\neach(['Width', 'Height'], (_, name) => {\n    each([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcIndex, funcName) => {\n        $.fn[funcName] = function (margin, value) {\n            // 是否是赋值操作\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\n            const includeMargin = margin === true || value === true;\n            // 获取第一个元素的值\n            if (!isSet) {\n                return this.length\n                    ? get(this[0], name, funcIndex, includeMargin)\n                    : undefined;\n            }\n            // 设置每个元素的值\n            return this.each((index, element) => set(element, index, name, funcIndex, includeMargin, margin));\n        };\n    });\n});\n\n$.fn.hide = function () {\n    return this.each(function () {\n        this.style.display = 'none';\n    });\n};\n\neach(['val', 'html', 'text'], (nameIndex, name) => {\n    const props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent',\n    };\n    const propName = props[nameIndex];\n    function get($elements) {\n        // text() 获取所有元素的文本\n        if (nameIndex === 2) {\n            // @ts-ignore\n            return map($elements, (element) => toElement(element)[propName]).join('');\n        }\n        // 空集合时，val() 和 html() 返回 undefined\n        if (!$elements.length) {\n            return undefined;\n        }\n        // val() 和 html() 仅获取第一个元素的内容\n        const firstElement = $elements[0];\n        // select multiple 返回数组\n        if (nameIndex === 0 && $(firstElement).is('select[multiple]')) {\n            return map($(firstElement).find('option:checked'), (element) => element.value);\n        }\n        // @ts-ignore\n        return firstElement[propName];\n    }\n    function set(element, value) {\n        // text() 和 html() 赋值为 undefined，则保持原内容不变\n        // val() 赋值为 undefined 则赋值为空\n        if (isUndefined(value)) {\n            if (nameIndex !== 0) {\n                return;\n            }\n            value = '';\n        }\n        if (nameIndex === 1 && isElement(value)) {\n            value = value.outerHTML;\n        }\n        // @ts-ignore\n        element[propName] = value;\n    }\n    $.fn[name] = function (value) {\n        // 获取值\n        if (!arguments.length) {\n            return get(this);\n        }\n        // 设置值\n        return this.each((i, element) => {\n            const computedValue = isFunction(value)\n                ? value.call(element, i, get($(element)))\n                : value;\n            // value 是数组，则选中数组中的元素，反选不在数组中的元素\n            if (nameIndex === 0 && Array.isArray(computedValue)) {\n                // select[multiple]\n                if ($(element).is('select[multiple]')) {\n                    map($(element).find('option'), (option) => (option.selected =\n                        computedValue.indexOf(option.value) >\n                            -1));\n                }\n                // 其他 checkbox, radio 等元素\n                else {\n                    element.checked =\n                        computedValue.indexOf(element.value) > -1;\n                }\n            }\n            else {\n                set(element, computedValue);\n            }\n        });\n    };\n});\n\n$.fn.index = function (selector) {\n    if (!arguments.length) {\n        return this.eq(0).parent().children().get().indexOf(this[0]);\n    }\n    if (isString(selector)) {\n        return $(selector).get().indexOf(this[0]);\n    }\n    return this.get().indexOf($(selector)[0]);\n};\n\n$.fn.last = function () {\n    return this.eq(-1);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`next${name}`] = function (selector, filter) {\n        return dir(this, nameIndex, 'nextElementSibling', selector, filter);\n    };\n});\n\n$.fn.not = function (selector) {\n    const $excludes = this.filter(selector);\n    return this.map((_, element) => $excludes.index(element) > -1 ? undefined : element);\n};\n\n/**\n * 返回最近的用于定位的父元素\n */\n$.fn.offsetParent = function () {\n    return this.map(function () {\n        let offsetParent = this.offsetParent;\n        while (offsetParent && $(offsetParent).css('position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || document.documentElement;\n    });\n};\n\nfunction floatStyle($element, name) {\n    return parseFloat($element.css(name));\n}\n$.fn.position = function () {\n    if (!this.length) {\n        return undefined;\n    }\n    const $element = this.eq(0);\n    let currentOffset;\n    let parentOffset = {\n        left: 0,\n        top: 0,\n    };\n    if ($element.css('position') === 'fixed') {\n        currentOffset = $element[0].getBoundingClientRect();\n    }\n    else {\n        currentOffset = $element.offset();\n        const $offsetParent = $element.offsetParent();\n        parentOffset = $offsetParent.offset();\n        parentOffset.top += floatStyle($offsetParent, 'border-top-width');\n        parentOffset.left += floatStyle($offsetParent, 'border-left-width');\n    }\n    return {\n        top: currentOffset.top - parentOffset.top - floatStyle($element, 'margin-top'),\n        left: currentOffset.left -\n            parentOffset.left -\n            floatStyle($element, 'margin-left'),\n    };\n};\n\nfunction get$1(element) {\n    if (!element.getClientRects().length) {\n        return { top: 0, left: 0 };\n    }\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset,\n    };\n}\nfunction set$1(element, value, index) {\n    const $element = $(element);\n    const position = $element.css('position');\n    if (position === 'static') {\n        $element.css('position', 'relative');\n    }\n    const currentOffset = get$1(element);\n    const currentTopString = $element.css('top');\n    const currentLeftString = $element.css('left');\n    let currentTop;\n    let currentLeft;\n    const calculatePosition = (position === 'absolute' || position === 'fixed') &&\n        (currentTopString + currentLeftString).indexOf('auto') > -1;\n    if (calculatePosition) {\n        const currentPosition = $element.position();\n        currentTop = currentPosition.top;\n        currentLeft = currentPosition.left;\n    }\n    else {\n        currentTop = parseFloat(currentTopString);\n        currentLeft = parseFloat(currentLeftString);\n    }\n    const computedValue = isFunction(value)\n        ? value.call(element, index, extend({}, currentOffset))\n        : value;\n    $element.css({\n        top: computedValue.top != null\n            ? computedValue.top - currentOffset.top + currentTop\n            : undefined,\n        left: computedValue.left != null\n            ? computedValue.left - currentOffset.left + currentLeft\n            : undefined,\n    });\n}\n$.fn.offset = function (value) {\n    // 获取坐标\n    if (!arguments.length) {\n        if (!this.length) {\n            return undefined;\n        }\n        return get$1(this[0]);\n    }\n    // 设置坐标\n    return this.each(function (index) {\n        set$1(this, value, index);\n    });\n};\n\n$.fn.one = function (types, selector, data, callback) {\n    // @ts-ignore\n    return this.on(types, selector, data, callback, true);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`prev${name}`] = function (selector, filter) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'previousElementSibling', selector, filter);\n    };\n});\n\n$.fn.removeAttr = function (attributeName) {\n    const names = attributeName.split(' ').filter((name) => name);\n    return this.each(function () {\n        each(names, (_, name) => {\n            this.removeAttribute(name);\n        });\n    });\n};\n\n$.fn.removeData = function (name) {\n    return this.each(function () {\n        removeData(this, name);\n    });\n};\n\n$.fn.removeProp = function (name) {\n    return this.each(function () {\n        try {\n            // @ts-ignore\n            delete this[name];\n        }\n        catch (e) { }\n    });\n};\n\n$.fn.replaceWith = function (newContent) {\n    this.each((index, element) => {\n        let content = newContent;\n        if (isFunction(content)) {\n            content = content.call(element, index, element.innerHTML);\n        }\n        else if (index && !isString(content)) {\n            content = $(content).clone();\n        }\n        $(element).before(content);\n    });\n    return this.remove();\n};\n\n$.fn.replaceAll = function (target) {\n    return $(target).map((index, element) => {\n        $(element).replaceWith(index ? this.clone() : this);\n        return this.get();\n    });\n};\n\n/**\n * 将表单元素的值组合成键值对数组\n * @returns {Array}\n */\n$.fn.serializeArray = function () {\n    const result = [];\n    this.each((_, element) => {\n        const elements = element instanceof HTMLFormElement ? element.elements : [element];\n        $(elements).each((_, element) => {\n            const $element = $(element);\n            const type = element.type;\n            const nodeName = element.nodeName.toLowerCase();\n            if (nodeName !== 'fieldset' &&\n                element.name &&\n                !element.disabled &&\n                ['input', 'select', 'textarea', 'keygen'].indexOf(nodeName) > -1 &&\n                ['submit', 'button', 'image', 'reset', 'file'].indexOf(type) === -1 &&\n                (['radio', 'checkbox'].indexOf(type) === -1 ||\n                    element.checked)) {\n                const value = $element.val();\n                const valueArr = Array.isArray(value) ? value : [value];\n                valueArr.forEach((value) => {\n                    result.push({\n                        name: element.name,\n                        value,\n                    });\n                });\n            }\n        });\n    });\n    return result;\n};\n\n$.fn.serialize = function () {\n    return param(this.serializeArray());\n};\n\nconst elementDisplay = {};\n/**\n * 获取元素的初始 display 值，用于 .show() 方法\n * @param nodeName\n */\nfunction defaultDisplay(nodeName) {\n    let element;\n    let display;\n    if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getStyle(element, 'display');\n        element.parentNode.removeChild(element);\n        if (display === 'none') {\n            display = 'block';\n        }\n        elementDisplay[nodeName] = display;\n    }\n    return elementDisplay[nodeName];\n}\n/**\n * 显示指定元素\n * @returns {JQ}\n */\n$.fn.show = function () {\n    return this.each(function () {\n        if (this.style.display === 'none') {\n            this.style.display = '';\n        }\n        if (getStyle(this, 'display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n        }\n    });\n};\n\n/**\n * 取得同辈元素的集合\n * @param selector {String=}\n * @returns {JQ}\n */\n$.fn.siblings = function (selector) {\n    return this.prevAll(selector).add(this.nextAll(selector));\n};\n\n/**\n * 切换元素的显示状态\n */\n$.fn.toggle = function () {\n    return this.each(function () {\n        getStyle(this, 'display') === 'none' ? $(this).show() : $(this).hide();\n    });\n};\n\n$.fn.reflow = function () {\n    return this.each(function () {\n        return this.clientLeft;\n    });\n};\n\n$.fn.transition = function (duration) {\n    if (isNumber(duration)) {\n        duration = `${duration}ms`;\n    }\n    return this.each(function () {\n        this.style.webkitTransitionDuration = duration;\n        this.style.transitionDuration = duration;\n    });\n};\n\n$.fn.transitionEnd = function (callback) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const events = ['webkitTransitionEnd', 'transitionend'];\n    function fireCallback(e) {\n        if (e.target !== this) {\n            return;\n        }\n        // @ts-ignore\n        callback.call(this, e);\n        each(events, (_, event) => {\n            that.off(event, fireCallback);\n        });\n    }\n    each(events, (_, event) => {\n        that.on(event, fireCallback);\n    });\n    return this;\n};\n\n$.fn.transformOrigin = function (transformOrigin) {\n    return this.each(function () {\n        this.style.webkitTransformOrigin = transformOrigin;\n        this.style.transformOrigin = transformOrigin;\n    });\n};\n\n$.fn.transform = function (transform) {\n    return this.each(function () {\n        this.style.webkitTransform = transform;\n        this.style.transform = transform;\n    });\n};\n\n/**\n * CSS 选择器和初始化函数组成的对象\n */\nconst entries = {};\n/**\n * 注册并执行初始化函数\n * @param selector CSS 选择器\n * @param apiInit 初始化函数\n * @param i 元素索引\n * @param element 元素\n */\nfunction mutation(selector, apiInit, i, element) {\n    let selectors = data(element, '_mdui_mutation');\n    if (!selectors) {\n        selectors = [];\n        data(element, '_mdui_mutation', selectors);\n    }\n    if (selectors.indexOf(selector) === -1) {\n        selectors.push(selector);\n        apiInit.call(element, i, element);\n    }\n}\n\n$.fn.mutation = function () {\n    return this.each((i, element) => {\n        const $this = $(element);\n        each(entries, (selector, apiInit) => {\n            if ($this.is(selector)) {\n                mutation(selector, apiInit, i, element);\n            }\n            $this.find(selector).each((i, element) => {\n                mutation(selector, apiInit, i, element);\n            });\n        });\n    });\n};\n\n$.showOverlay = function (zIndex) {\n    let $overlay = $('.mdui-overlay');\n    if ($overlay.length) {\n        $overlay.data('_overlay_is_deleted', false);\n        if (!isUndefined(zIndex)) {\n            $overlay.css('z-index', zIndex);\n        }\n    }\n    else {\n        if (isUndefined(zIndex)) {\n            zIndex = 2000;\n        }\n        $overlay = $('<div class=\"mdui-overlay\">')\n            .appendTo(document.body)\n            .reflow()\n            .css('z-index', zIndex);\n    }\n    let level = $overlay.data('_overlay_level') || 0;\n    return $overlay.data('_overlay_level', ++level).addClass('mdui-overlay-show');\n};\n\n$.hideOverlay = function (force = false) {\n    const $overlay = $('.mdui-overlay');\n    if (!$overlay.length) {\n        return;\n    }\n    let level = force ? 1 : $overlay.data('_overlay_level');\n    if (level > 1) {\n        $overlay.data('_overlay_level', --level);\n        return;\n    }\n    $overlay\n        .data('_overlay_level', 0)\n        .removeClass('mdui-overlay-show')\n        .data('_overlay_is_deleted', true)\n        .transitionEnd(() => {\n        if ($overlay.data('_overlay_is_deleted')) {\n            $overlay.remove();\n        }\n    });\n};\n\n$.lockScreen = function () {\n    const $body = $('body');\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    const newBodyWidth = $body.width();\n    let level = $body.data('_lockscreen_level') || 0;\n    $body\n        .addClass('mdui-locked')\n        .width(newBodyWidth)\n        .data('_lockscreen_level', ++level);\n};\n\n$.unlockScreen = function (force = false) {\n    const $body = $('body');\n    let level = force ? 1 : $body.data('_lockscreen_level');\n    if (level > 1) {\n        $body.data('_lockscreen_level', --level);\n        return;\n    }\n    $body.data('_lockscreen_level', 0).removeClass('mdui-locked').width('');\n};\n\n$.throttle = function (fn, delay = 16) {\n    let timer = null;\n    return function (...args) {\n        if (isNull(timer)) {\n            timer = setTimeout(() => {\n                fn.apply(this, args);\n                timer = null;\n            }, delay);\n        }\n    };\n};\n\nconst GUID = {};\n$.guid = function (name) {\n    if (!isUndefined(name) && !isUndefined(GUID[name])) {\n        return GUID[name];\n    }\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    const guid = '_' +\n        s4() +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        s4() +\n        s4();\n    if (!isUndefined(name)) {\n        GUID[name] = guid;\n    }\n    return guid;\n};\n\nmdui.mutation = function (selector, apiInit) {\n    if (isUndefined(selector) || isUndefined(apiInit)) {\n        $(document).mutation();\n        return;\n    }\n    entries[selector] = apiInit;\n    $(selector).each((i, element) => mutation(selector, apiInit, i, element));\n};\n\n/**\n * 触发组件上的事件\n * @param eventName 事件名\n * @param componentName 组件名\n * @param target 在该元素上触发事件\n * @param instance 组件实例\n * @param parameters 事件参数\n */\nfunction componentEvent(eventName, componentName, target, instance, parameters) {\n    if (!parameters) {\n        parameters = {};\n    }\n    // @ts-ignore\n    parameters.inst = instance;\n    const fullEventName = `${eventName}.mdui.${componentName}`;\n    // jQuery 事件\n    // @ts-ignore\n    if (typeof jQuery !== 'undefined') {\n        // @ts-ignore\n        jQuery(target).trigger(fullEventName, parameters);\n    }\n    const $target = $(target);\n    // mdui.jq 事件\n    $target.trigger(fullEventName, parameters);\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n        detail: parameters,\n    };\n    const eventObject = new CustomEvent(fullEventName, eventParams);\n    // @ts-ignore\n    eventObject._detail = parameters;\n    $target[0].dispatchEvent(eventObject);\n}\n\nconst $document = $(document);\nconst $window = $(window);\n$('body');\n\nconst DEFAULT_OPTIONS = {\n    tolerance: 5,\n    offset: 0,\n    initialClass: 'mdui-headroom',\n    pinnedClass: 'mdui-headroom-pinned-top',\n    unpinnedClass: 'mdui-headroom-unpinned-top',\n};\nclass Headroom {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS);\n        /**\n         * 当前 headroom 的状态\n         */\n        this.state = 'pinned';\n        /**\n         * 当前是否启用\n         */\n        this.isEnable = false;\n        /**\n         * 上次滚动后，垂直方向的距离\n         */\n        this.lastScrollY = 0;\n        /**\n         * AnimationFrame ID\n         */\n        this.rafId = 0;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        // tolerance 参数若为数值，转换为对象\n        const tolerance = this.options.tolerance;\n        if (isNumber(tolerance)) {\n            this.options.tolerance = {\n                down: tolerance,\n                up: tolerance,\n            };\n        }\n        this.enable();\n    }\n    /**\n     * 滚动时的处理\n     */\n    onScroll() {\n        this.rafId = window.requestAnimationFrame(() => {\n            const currentScrollY = window.pageYOffset;\n            const direction = currentScrollY > this.lastScrollY ? 'down' : 'up';\n            const tolerance = this.options.tolerance[direction];\n            const scrolled = Math.abs(currentScrollY - this.lastScrollY);\n            const toleranceExceeded = scrolled >= tolerance;\n            if (currentScrollY > this.lastScrollY &&\n                currentScrollY >= this.options.offset &&\n                toleranceExceeded) {\n                this.unpin();\n            }\n            else if ((currentScrollY < this.lastScrollY && toleranceExceeded) ||\n                currentScrollY <= this.options.offset) {\n                this.pin();\n            }\n            this.lastScrollY = currentScrollY;\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'headroom', this.$element, this);\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        if (this.state === 'pinning') {\n            this.state = 'pinned';\n            this.triggerEvent('pinned');\n        }\n        if (this.state === 'unpinning') {\n            this.state = 'unpinned';\n            this.triggerEvent('unpinned');\n        }\n    }\n    /**\n     * 使元素固定住\n     */\n    pin() {\n        if (this.state === 'pinning' ||\n            this.state === 'pinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('pin');\n        this.state = 'pinning';\n        this.$element\n            .removeClass(this.options.unpinnedClass)\n            .addClass(this.options.pinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 使元素隐藏\n     */\n    unpin() {\n        if (this.state === 'unpinning' ||\n            this.state === 'unpinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('unpin');\n        this.state = 'unpinning';\n        this.$element\n            .removeClass(this.options.pinnedClass)\n            .addClass(this.options.unpinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 启用 headroom 插件\n     */\n    enable() {\n        if (this.isEnable) {\n            return;\n        }\n        this.isEnable = true;\n        this.state = 'pinned';\n        this.$element\n            .addClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        this.lastScrollY = window.pageYOffset;\n        $window.on('scroll', () => this.onScroll());\n    }\n    /**\n     * 禁用 headroom 插件\n     */\n    disable() {\n        if (!this.isEnable) {\n            return;\n        }\n        this.isEnable = false;\n        this.$element\n            .removeClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        $window.off('scroll', () => this.onScroll());\n        window.cancelAnimationFrame(this.rafId);\n    }\n    /**\n     * 获取当前状态。共包含四种状态：`pinning`、`pinned`、`unpinning`、`unpinned`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Headroom = Headroom;\n\n/**\n * 解析 DATA API 参数\n * @param element 元素\n * @param name 属性名\n */\nfunction parseOptions(element, name) {\n    const attr = $(element).attr(name);\n    if (!attr) {\n        return {};\n    }\n    return new Function('', `var json = ${attr}; return JSON.parse(JSON.stringify(json));`)();\n}\n\nconst customAttr = 'mdui-headroom';\n$(() => {\n    mdui.mutation(`[${customAttr}]`, function () {\n        new mdui.Headroom(this, parseOptions(this, customAttr));\n    });\n});\n\nconst DEFAULT_OPTIONS$1 = {\n    accordion: false,\n};\nclass CollapseAbstract {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$1);\n        // CSS 类名\n        const classPrefix = `mdui-${this.getNamespace()}-item`;\n        this.classItem = classPrefix;\n        this.classItemOpen = `${classPrefix}-open`;\n        this.classHeader = `${classPrefix}-header`;\n        this.classBody = `${classPrefix}-body`;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.bindEvent();\n    }\n    /**\n     * 绑定事件\n     */\n    bindEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击 header 时，打开/关闭 item\n        this.$element.on('click', `.${this.classHeader}`, function () {\n            const $header = $(this);\n            const $item = $header.parent();\n            const $items = that.getItems();\n            $items.each((_, item) => {\n                if ($item.is(item)) {\n                    that.toggle(item);\n                }\n            });\n        });\n        // 点击关闭按钮时，关闭 item\n        this.$element.on('click', `[mdui-${this.getNamespace()}-item-close]`, function () {\n            const $target = $(this);\n            const $item = $target.parents(`.${that.classItem}`).first();\n            that.close($item);\n        });\n    }\n    /**\n     * 指定 item 是否处于打开状态\n     * @param $item\n     */\n    isOpen($item) {\n        return $item.hasClass(this.classItemOpen);\n    }\n    /**\n     * 获取所有 item\n     */\n    getItems() {\n        return this.$element.children(`.${this.classItem}`);\n    }\n    /**\n     * 获取指定 item\n     * @param item\n     */\n    getItem(item) {\n        if (isNumber(item)) {\n            return this.getItems().eq(item);\n        }\n        return $(item).first();\n    }\n    /**\n     * 触发组件事件\n     * @param name 事件名\n     * @param $item 事件触发的目标 item\n     */\n    triggerEvent(name, $item) {\n        componentEvent(name, this.getNamespace(), $item, this);\n    }\n    /**\n     * 动画结束回调\n     * @param $content body 元素\n     * @param $item item 元素\n     */\n    transitionEnd($content, $item) {\n        if (this.isOpen($item)) {\n            $content.transition(0).height('auto').reflow().transition('');\n            this.triggerEvent('opened', $item);\n        }\n        else {\n            $content.height('');\n            this.triggerEvent('closed', $item);\n        }\n    }\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    open(item) {\n        const $item = this.getItem(item);\n        if (this.isOpen($item)) {\n            return;\n        }\n        // 关闭其他项\n        if (this.options.accordion) {\n            this.$element.children(`.${this.classItemOpen}`).each((_, element) => {\n                const $element = $(element);\n                if (!$element.is($item)) {\n                    this.close($element);\n                }\n            });\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        $content\n            .height($content[0].scrollHeight)\n            .transitionEnd(() => this.transitionEnd($content, $item));\n        this.triggerEvent('open', $item);\n        $item.addClass(this.classItemOpen);\n    }\n    /**\n     * 关闭指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    close(item) {\n        const $item = this.getItem(item);\n        if (!this.isOpen($item)) {\n            return;\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        this.triggerEvent('close', $item);\n        $item.removeClass(this.classItemOpen);\n        $content\n            .transition(0)\n            .height($content[0].scrollHeight)\n            .reflow()\n            .transition('')\n            .height('')\n            .transitionEnd(() => this.transitionEnd($content, $item));\n    }\n    /**\n     * 切换指定面板项的打开状态\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    toggle(item) {\n        const $item = this.getItem(item);\n        this.isOpen($item) ? this.close($item) : this.open($item);\n    }\n    /**\n     * 打开所有面板项\n     */\n    openAll() {\n        this.getItems().each((_, element) => this.open(element));\n    }\n    /**\n     * 关闭所有面板项\n     */\n    closeAll() {\n        this.getItems().each((_, element) => this.close(element));\n    }\n}\n\nclass Collapse extends CollapseAbstract {\n    getNamespace() {\n        return 'collapse';\n    }\n}\nmdui.Collapse = Collapse;\n\nconst customAttr$1 = 'mdui-collapse';\n$(() => {\n    mdui.mutation(`[${customAttr$1}]`, function () {\n        new mdui.Collapse(this, parseOptions(this, customAttr$1));\n    });\n});\n\nclass Panel extends CollapseAbstract {\n    getNamespace() {\n        return 'panel';\n    }\n}\nmdui.Panel = Panel;\n\nconst customAttr$2 = 'mdui-panel';\n$(() => {\n    mdui.mutation(`[${customAttr$2}]`, function () {\n        new mdui.Panel(this, parseOptions(this, customAttr$2));\n    });\n});\n\nclass Table {\n    constructor(selector) {\n        /**\n         * 表头 tr 元素\n         */\n        this.$thRow = $();\n        /**\n         * 表格 body 中的 tr 元素\n         */\n        this.$tdRows = $();\n        /**\n         * 表头的 checkbox 元素\n         */\n        this.$thCheckbox = $();\n        /**\n         * 表格 body 中的 checkbox 元素\n         */\n        this.$tdCheckboxs = $();\n        /**\n         * 表格行是否可选择\n         */\n        this.selectable = false;\n        /**\n         * 已选中的行数\n         */\n        this.selectedRow = 0;\n        this.$element = $(selector).first();\n        this.init();\n    }\n    /**\n     * 初始化表格\n     */\n    init() {\n        this.$thRow = this.$element.find('thead tr');\n        this.$tdRows = this.$element.find('tbody tr');\n        this.selectable = this.$element.hasClass('mdui-table-selectable');\n        this.updateThCheckbox();\n        this.updateTdCheckbox();\n        this.updateNumericCol();\n    }\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag 标签名\n     */\n    createCheckboxHTML(tag) {\n        return (`<${tag} class=\"mdui-table-cell-checkbox\">` +\n            '<label class=\"mdui-checkbox\">' +\n            '<input type=\"checkbox\"/>' +\n            '<i class=\"mdui-checkbox-icon\"></i>' +\n            '</label>' +\n            `</${tag}>`);\n    }\n    /**\n     * 更新表头 checkbox 的状态\n     */\n    updateThCheckboxStatus() {\n        const checkbox = this.$thCheckbox[0];\n        const selectedRow = this.selectedRow;\n        const tdRowsLength = this.$tdRows.length;\n        checkbox.checked = selectedRow === tdRowsLength;\n        checkbox.indeterminate = !!selectedRow && selectedRow !== tdRowsLength;\n    }\n    /**\n     * 更新表格行的 checkbox\n     */\n    updateTdCheckbox() {\n        const rowSelectedClass = 'mdui-table-row-selected';\n        this.$tdRows.each((_, row) => {\n            const $row = $(row);\n            // 移除旧的 checkbox\n            $row.find('.mdui-table-cell-checkbox').remove();\n            if (!this.selectable) {\n                return;\n            }\n            // 创建 DOM\n            const $checkbox = $(this.createCheckboxHTML('td'))\n                .prependTo($row)\n                .find('input[type=\"checkbox\"]');\n            // 默认选中的行\n            if ($row.hasClass(rowSelectedClass)) {\n                $checkbox[0].checked = true;\n                this.selectedRow++;\n            }\n            this.updateThCheckboxStatus();\n            // 绑定事件\n            $checkbox.on('change', () => {\n                if ($checkbox[0].checked) {\n                    $row.addClass(rowSelectedClass);\n                    this.selectedRow++;\n                }\n                else {\n                    $row.removeClass(rowSelectedClass);\n                    this.selectedRow--;\n                }\n                this.updateThCheckboxStatus();\n            });\n            this.$tdCheckboxs = this.$tdCheckboxs.add($checkbox);\n        });\n    }\n    /**\n     * 更新表头的 checkbox\n     */\n    updateThCheckbox() {\n        // 移除旧的 checkbox\n        this.$thRow.find('.mdui-table-cell-checkbox').remove();\n        if (!this.selectable) {\n            return;\n        }\n        this.$thCheckbox = $(this.createCheckboxHTML('th'))\n            .prependTo(this.$thRow)\n            .find('input[type=\"checkbox\"]')\n            .on('change', () => {\n            const isCheckedAll = this.$thCheckbox[0].checked;\n            this.selectedRow = isCheckedAll ? this.$tdRows.length : 0;\n            this.$tdCheckboxs.each((_, checkbox) => {\n                checkbox.checked = isCheckedAll;\n            });\n            this.$tdRows.each((_, row) => {\n                isCheckedAll\n                    ? $(row).addClass('mdui-table-row-selected')\n                    : $(row).removeClass('mdui-table-row-selected');\n            });\n        });\n    }\n    /**\n     * 更新数值列\n     */\n    updateNumericCol() {\n        const numericClass = 'mdui-table-col-numeric';\n        this.$thRow.find('th').each((i, th) => {\n            const isNumericCol = $(th).hasClass(numericClass);\n            this.$tdRows.each((_, row) => {\n                const $td = $(row).find('td').eq(i);\n                isNumericCol\n                    ? $td.addClass(numericClass)\n                    : $td.removeClass(numericClass);\n            });\n        });\n    }\n}\nconst dataName = '_mdui_table';\n$(() => {\n    mdui.mutation('.mdui-table', function () {\n        const $element = $(this);\n        if (!$element.data(dataName)) {\n            $element.data(dataName, new Table($element));\n        }\n    });\n});\nmdui.updateTables = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-table') : $(selector);\n    $elements.each((_, element) => {\n        const $element = $(element);\n        const instance = $element.data(dataName);\n        if (instance) {\n            instance.init();\n        }\n        else {\n            $element.data(dataName, new Table($element));\n        }\n    });\n};\n\n/**\n * touch 事件后的 500ms 内禁用 mousedown 事件\n *\n * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n *\n * 在每一个事件中都使用 TouchHandler.isAllow(event) 判断事件是否可执行\n * 在 touchstart 和 touchmove、touchend、touchcancel\n *\n * (function () {\n *   $document\n *     .on(start, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       register(e);\n *       console.log(e.type);\n *     })\n *     .on(move, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(end, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(unlock, register);\n * })();\n */\nconst startEvent = 'touchstart mousedown';\nconst moveEvent = 'touchmove mousemove';\nconst endEvent = 'touchend mouseup';\nconst cancelEvent = 'touchcancel mouseleave';\nconst unlockEvent = 'touchend touchmove touchcancel';\nlet touches = 0;\n/**\n * 该事件是否被允许，在执行事件前调用该方法判断事件是否可以执行\n * 若已触发 touch 事件，则阻止之后的鼠标事件\n * @param event\n */\nfunction isAllow(event) {\n    return !(touches &&\n        [\n            'mousedown',\n            'mouseup',\n            'mousemove',\n            'click',\n            'mouseover',\n            'mouseout',\n            'mouseenter',\n            'mouseleave',\n        ].indexOf(event.type) > -1);\n}\n/**\n * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n * @param event\n */\nfunction register(event) {\n    if (event.type === 'touchstart') {\n        // 触发了 touch 事件\n        touches += 1;\n    }\n    else if (['touchmove', 'touchend', 'touchcancel'].indexOf(event.type) > -1) {\n        // touch 事件结束 500ms 后解除对鼠标事件的阻止\n        setTimeout(function () {\n            if (touches) {\n                touches -= 1;\n            }\n        }, 500);\n    }\n}\n\n/**\n * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n *\n * Inspired by https://github.com/fians/Waves\n */\n/**\n * 显示涟漪动画\n * @param event\n * @param $ripple\n */\nfunction show(event, $ripple) {\n    // 鼠标右键不产生涟漪\n    if (event instanceof MouseEvent && event.button === 2) {\n        return;\n    }\n    // 点击位置坐标\n    const touchPosition = typeof TouchEvent !== 'undefined' &&\n        event instanceof TouchEvent &&\n        event.touches.length\n        ? event.touches[0]\n        : event;\n    const touchStartX = touchPosition.pageX;\n    const touchStartY = touchPosition.pageY;\n    // 涟漪位置\n    const offset = $ripple.offset();\n    const height = $ripple.innerHeight();\n    const width = $ripple.innerWidth();\n    const center = {\n        x: touchStartX - offset.left,\n        y: touchStartY - offset.top,\n    };\n    const diameter = Math.max(Math.pow(Math.pow(height, 2) + Math.pow(width, 2), 0.5), 48);\n    // 涟漪扩散动画\n    const translate = `translate3d(${-center.x + width / 2}px,` +\n        `${-center.y + height / 2}px, 0) scale(1)`;\n    // 涟漪的 DOM 结构，并缓存动画效果\n    $(`<div class=\"mdui-ripple-wave\" ` +\n        `style=\"width:${diameter}px;height:${diameter}px;` +\n        `margin-top:-${diameter / 2}px;margin-left:-${diameter / 2}px;` +\n        `left:${center.x}px;top:${center.y}px;\"></div>`)\n        .data('_ripple_wave_translate', translate)\n        .prependTo($ripple)\n        .reflow()\n        .transform(translate);\n}\n/**\n * 隐藏并移除涟漪\n * @param $wave\n */\nfunction removeRipple($wave) {\n    if (!$wave.length || $wave.data('_ripple_wave_removed')) {\n        return;\n    }\n    $wave.data('_ripple_wave_removed', true);\n    let removeTimer = setTimeout(() => $wave.remove(), 400);\n    const translate = $wave.data('_ripple_wave_translate');\n    $wave\n        .addClass('mdui-ripple-wave-fill')\n        .transform(translate.replace('scale(1)', 'scale(1.01)'))\n        .transitionEnd(() => {\n        clearTimeout(removeTimer);\n        $wave\n            .addClass('mdui-ripple-wave-out')\n            .transform(translate.replace('scale(1)', 'scale(1.01)'));\n        removeTimer = setTimeout(() => $wave.remove(), 700);\n        setTimeout(() => {\n            $wave.transitionEnd(() => {\n                clearTimeout(removeTimer);\n                $wave.remove();\n            });\n        }, 0);\n    });\n}\n/**\n * 隐藏涟漪动画\n * @param this\n */\nfunction hide() {\n    const $ripple = $(this);\n    $ripple.children('.mdui-ripple-wave').each((_, wave) => {\n        removeRipple($(wave));\n    });\n    $ripple.off(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n}\n/**\n * 显示涟漪，并绑定 touchend 等事件\n * @param event\n */\nfunction showRipple(event) {\n    if (!isAllow(event)) {\n        return;\n    }\n    register(event);\n    // Chrome 59 点击滚动条时，会在 document 上触发事件\n    if (event.target === document) {\n        return;\n    }\n    const $target = $(event.target);\n    // 获取含 .mdui-ripple 类的元素\n    const $ripple = $target.hasClass('mdui-ripple')\n        ? $target\n        : $target.parents('.mdui-ripple').first();\n    if (!$ripple.length) {\n        return;\n    }\n    // 禁用状态的元素上不产生涟漪效果\n    if ($ripple.prop('disabled') || !isUndefined($ripple.attr('disabled'))) {\n        return;\n    }\n    if (event.type === 'touchstart') {\n        let hidden = false;\n        // touchstart 触发指定时间后开始涟漪动画，避免手指滑动时也触发涟漪\n        let timer = setTimeout(() => {\n            timer = 0;\n            show(event, $ripple);\n        }, 200);\n        const hideRipple = () => {\n            // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n                show(event, $ripple);\n            }\n            if (!hidden) {\n                hidden = true;\n                hide.call($ripple);\n            }\n        };\n        // 手指移动后，移除涟漪动画\n        const touchMove = () => {\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n            }\n            hideRipple();\n        };\n        $ripple.on('touchmove', touchMove).on('touchend touchcancel', hideRipple);\n    }\n    else {\n        show(event, $ripple);\n        $ripple.on(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n    }\n}\n$(() => {\n    $document.on(startEvent, showRipple).on(unlockEvent, register);\n});\n\nconst defaultData = {\n    reInit: false,\n    domLoadedEvent: false,\n};\n/**\n * 输入框事件\n * @param event\n * @param data\n */\nfunction inputEvent(event, data = {}) {\n    data = extend({}, defaultData, data);\n    const input = event.target;\n    const $input = $(input);\n    const eventType = event.type;\n    const value = $input.val();\n    // 文本框类型\n    const inputType = $input.attr('type') || '';\n    if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(inputType) > -1) {\n        return;\n    }\n    const $textfield = $input.parent('.mdui-textfield');\n    // 输入框是否聚焦\n    if (eventType === 'focus') {\n        $textfield.addClass('mdui-textfield-focus');\n    }\n    if (eventType === 'blur') {\n        $textfield.removeClass('mdui-textfield-focus');\n    }\n    // 输入框是否为空\n    if (eventType === 'blur' || eventType === 'input') {\n        value\n            ? $textfield.addClass('mdui-textfield-not-empty')\n            : $textfield.removeClass('mdui-textfield-not-empty');\n    }\n    // 输入框是否禁用\n    input.disabled\n        ? $textfield.addClass('mdui-textfield-disabled')\n        : $textfield.removeClass('mdui-textfield-disabled');\n    // 表单验证\n    if ((eventType === 'input' || eventType === 'blur') &&\n        !data.domLoadedEvent &&\n        input.validity) {\n        input.validity.valid\n            ? $textfield.removeClass('mdui-textfield-invalid-html5')\n            : $textfield.addClass('mdui-textfield-invalid-html5');\n    }\n    // textarea 高度自动调整\n    if ($input.is('textarea')) {\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        const inputValue = value;\n        let hasExtraSpace = false;\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n            $input.val(' ' + inputValue);\n            hasExtraSpace = true;\n        }\n        // 设置 textarea 高度\n        $input.outerHeight('');\n        const height = $input.outerHeight();\n        const scrollHeight = input.scrollHeight;\n        if (scrollHeight > height) {\n            $input.outerHeight(scrollHeight);\n        }\n        // 计算完，还原 textarea 的值\n        if (hasExtraSpace) {\n            $input.val(inputValue);\n        }\n    }\n    // 实时字数统计\n    if (data.reInit) {\n        $textfield.find('.mdui-textfield-counter').remove();\n    }\n    const maxLength = $input.attr('maxlength');\n    if (maxLength) {\n        if (data.reInit || data.domLoadedEvent) {\n            $('<div class=\"mdui-textfield-counter\">' +\n                `<span class=\"mdui-textfield-counter-inputed\"></span> / ${maxLength}` +\n                '</div>').appendTo($textfield);\n        }\n        $textfield\n            .find('.mdui-textfield-counter-inputed')\n            .text(value.length.toString());\n    }\n    // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n    if ($textfield.find('.mdui-textfield-helper').length ||\n        $textfield.find('.mdui-textfield-error').length ||\n        maxLength) {\n        $textfield.addClass('mdui-textfield-has-bottom');\n    }\n}\n$(() => {\n    // 绑定事件\n    $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n    // 可展开文本框展开\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .addClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')[0]\n            .focus();\n    });\n    // 可展开文本框关闭\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .removeClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')\n            .val('');\n    });\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n        $(this).find('.mdui-textfield-input').trigger('input', {\n            domLoadedEvent: true,\n        });\n    });\n});\nmdui.updateTextFields = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-textfield') : $(selector);\n    $elements.each((_, element) => {\n        $(element).find('.mdui-textfield-input').trigger('input', {\n            reInit: true,\n        });\n    });\n};\n\n/**\n * 滑块的值改变后修改滑块样式\n * @param $slider\n */\nfunction updateValueStyle($slider) {\n    const data = $slider.data();\n    const $track = data._slider_$track;\n    const $fill = data._slider_$fill;\n    const $thumb = data._slider_$thumb;\n    const $input = data._slider_$input;\n    const min = data._slider_min;\n    const max = data._slider_max;\n    const isDisabled = data._slider_disabled;\n    const isDiscrete = data._slider_discrete;\n    const $thumbText = data._slider_$thumbText;\n    const value = $input.val();\n    const percent = ((value - min) / (max - min)) * 100;\n    $fill.width(`${percent}%`);\n    $track.width(`${100 - percent}%`);\n    if (isDisabled) {\n        $fill.css('padding-right', '6px');\n        $track.css('padding-left', '6px');\n    }\n    $thumb.css('left', `${percent}%`);\n    if (isDiscrete) {\n        $thumbText.text(value);\n    }\n    percent === 0\n        ? $slider.addClass('mdui-slider-zero')\n        : $slider.removeClass('mdui-slider-zero');\n}\n/**\n * 重新初始化滑块\n * @param $slider\n */\nfunction reInit($slider) {\n    const $track = $('<div class=\"mdui-slider-track\"></div>');\n    const $fill = $('<div class=\"mdui-slider-fill\"></div>');\n    const $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n    const $input = $slider.find('input[type=\"range\"]');\n    const isDisabled = $input[0].disabled;\n    const isDiscrete = $slider.hasClass('mdui-slider-discrete');\n    // 禁用状态\n    isDisabled\n        ? $slider.addClass('mdui-slider-disabled')\n        : $slider.removeClass('mdui-slider-disabled');\n    // 重新填充 HTML\n    $slider.find('.mdui-slider-track').remove();\n    $slider.find('.mdui-slider-fill').remove();\n    $slider.find('.mdui-slider-thumb').remove();\n    $slider.append($track).append($fill).append($thumb);\n    // 间续型滑块\n    let $thumbText = $();\n    if (isDiscrete) {\n        $thumbText = $('<span></span>');\n        $thumb.empty().append($thumbText);\n    }\n    $slider.data('_slider_$track', $track);\n    $slider.data('_slider_$fill', $fill);\n    $slider.data('_slider_$thumb', $thumb);\n    $slider.data('_slider_$input', $input);\n    $slider.data('_slider_min', $input.attr('min'));\n    $slider.data('_slider_max', $input.attr('max'));\n    $slider.data('_slider_disabled', isDisabled);\n    $slider.data('_slider_discrete', isDiscrete);\n    $slider.data('_slider_$thumbText', $thumbText);\n    // 设置默认值\n    updateValueStyle($slider);\n}\nconst rangeSelector = '.mdui-slider input[type=\"range\"]';\n$(() => {\n    // 滑块滑动事件\n    $document.on('input change', rangeSelector, function () {\n        const $slider = $(this).parent();\n        updateValueStyle($slider);\n    });\n    // 开始触摸滑块事件\n    $document.on(startEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        register(event);\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.addClass('mdui-slider-focus');\n    });\n    // 结束触摸滑块事件\n    $document.on(endEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.removeClass('mdui-slider-focus');\n    });\n    $document.on(unlockEvent, rangeSelector, register);\n    /**\n     * 初始化滑块\n     */\n    mdui.mutation('.mdui-slider', function () {\n        reInit($(this));\n    });\n});\nmdui.updateSliders = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-slider') : $(selector);\n    $elements.each((_, element) => {\n        reInit($(element));\n    });\n};\n\nconst DEFAULT_OPTIONS$2 = {\n    trigger: 'hover',\n};\nclass Fab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$2);\n        /**\n         * 当前 fab 的状态\n         */\n        this.state = 'closed';\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$btn = this.$element.find('.mdui-fab');\n        this.$dial = this.$element.find('.mdui-fab-dial');\n        this.$dialBtns = this.$dial.find('.mdui-fab');\n        if (this.options.trigger === 'hover') {\n            this.$btn.on('touchstart mouseenter', () => this.open());\n            this.$element.on('mouseleave', () => this.close());\n        }\n        if (this.options.trigger === 'click') {\n            this.$btn.on(startEvent, () => this.open());\n        }\n        // 触摸屏幕其他地方关闭快速拨号\n        $document.on(startEvent, (event) => {\n            if ($(event.target).parents('.mdui-fab-wrapper').length) {\n                return;\n            }\n            this.close();\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'fab', this.$element, this);\n    }\n    /**\n     * 当前是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开快速拨号菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * (this.$dialBtns.length - index)}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.css('height', 'auto').addClass('mdui-fab-dial-show');\n        // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n        if (this.$btn.find('.mdui-fab-opened').length) {\n            this.$btn.addClass('mdui-fab-opened');\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n        this.$dialBtns.first().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                this.state = 'opened';\n                this.triggerEvent('opened');\n            }\n        });\n    }\n    /**\n     * 关闭快速拨号菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * index}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.removeClass('mdui-fab-dial-show');\n        this.$btn.removeClass('mdui-fab-opened');\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 从上往下依次关闭，最后一个关闭后才表示动画完成\n        this.$dialBtns.last().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                return;\n            }\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$dial.css('height', 0);\n        });\n    }\n    /**\n     * 切换快速拨号菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 以动画的形式显示整个浮动操作按钮\n     */\n    show() {\n        this.$element.removeClass('mdui-fab-hide');\n    }\n    /**\n     * 以动画的形式隐藏整个浮动操作按钮\n     */\n    hide() {\n        this.$element.addClass('mdui-fab-hide');\n    }\n    /**\n     * 返回当前快速拨号菜单的打开状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Fab = Fab;\n\nconst customAttr$3 = 'mdui-fab';\n$(() => {\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    $document.on('touchstart mousedown mouseover', `[${customAttr$3}]`, function () {\n        new mdui.Fab(this, parseOptions(this, customAttr$3));\n    });\n});\n\n/**\n * 最终生成的元素结构为：\n *  <select class=\"mdui-select\" mdui-select=\"{position: 'top'}\" style=\"display: none;\"> // $native\n *    <option value=\"1\">State 1</option>\n *    <option value=\"2\">State 2</option>\n *    <option value=\"3\" disabled=\"\">State 3</option>\n *  </select>\n *  <div class=\"mdui-select mdui-select-position-top\" style=\"\" id=\"88dec0e4-d4a2-c6d0-0e7f-1ba4501e0553\"> // $element\n *    <span class=\"mdui-select-selected\">State 1</span> // $selected\n *    <div class=\"mdui-select-menu\" style=\"transform-origin: center 100% 0px;\"> // $menu\n *      <div class=\"mdui-select-menu-item mdui-ripple\" selected=\"\">State 1</div> // $items\n *      <div class=\"mdui-select-menu-item mdui-ripple\">State 2</div>\n *      <div class=\"mdui-select-menu-item mdui-ripple\" disabled=\"\">State 3</div>\n *    </div>\n *  </div>\n */\nconst DEFAULT_OPTIONS$3 = {\n    position: 'auto',\n    gutter: 16,\n};\nclass Select {\n    constructor(selector, options = {}) {\n        /**\n         * 生成的 `<div class=\"mdui-select\">` 元素的 JQ 对象\n         */\n        this.$element = $();\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$3);\n        /**\n         * select 的 size 属性的值，根据该值设置 select 的高度\n         */\n        this.size = 0;\n        /**\n         * 占位元素，显示已选中菜单项的文本\n         */\n        this.$selected = $();\n        /**\n         * 菜单项的外层元素的 JQ 对象\n         */\n        this.$menu = $();\n        /**\n         * 菜单项数组的 JQ 对象\n         */\n        this.$items = $();\n        /**\n         * 当前选中的菜单项的索引号\n         */\n        this.selectedIndex = 0;\n        /**\n         * 当前选中菜单项的文本\n         */\n        this.selectedText = '';\n        /**\n         * 当前选中菜单项的值\n         */\n        this.selectedValue = '';\n        /**\n         * 当前 select 的状态\n         */\n        this.state = 'closed';\n        this.$native = $(selector).first();\n        this.$native.hide();\n        extend(this.options, options);\n        // 为当前 select 生成唯一 ID\n        this.uniqueID = $.guid();\n        // 生成 select\n        this.handleUpdate();\n        // 点击 select 外面区域关闭\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0])) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * 调整菜单位置\n     */\n    readjustMenu() {\n        const windowHeight = $window.height();\n        // mdui-select 高度\n        const elementHeight = this.$element.height();\n        // 菜单项高度\n        const $itemFirst = this.$items.first();\n        const itemHeight = $itemFirst.height();\n        const itemMargin = parseInt($itemFirst.css('margin-top'));\n        // 菜单高度\n        const menuWidth = this.$element.innerWidth() + 0.01; // 必须比真实宽度多一点，不然会出现省略号\n        let menuHeight = itemHeight * this.size + itemMargin * 2;\n        // mdui-select 在窗口中的位置\n        const elementTop = this.$element[0].getBoundingClientRect().top;\n        let transformOriginY;\n        let menuMarginTop;\n        if (this.options.position === 'bottom') {\n            menuMarginTop = elementHeight;\n            transformOriginY = '0px';\n        }\n        else if (this.options.position === 'top') {\n            menuMarginTop = -menuHeight - 1;\n            transformOriginY = '100%';\n        }\n        else {\n            // 菜单高度不能超过窗口高度\n            const menuMaxHeight = windowHeight - this.options.gutter * 2;\n            if (menuHeight > menuMaxHeight) {\n                menuHeight = menuMaxHeight;\n            }\n            // 菜单的 margin-top\n            menuMarginTop = -(itemMargin +\n                this.selectedIndex * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            const menuMaxMarginTop = -(itemMargin +\n                (this.size - 1) * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            if (menuMarginTop < menuMaxMarginTop) {\n                menuMarginTop = menuMaxMarginTop;\n            }\n            // 菜单不能超出窗口\n            const menuTop = elementTop + menuMarginTop;\n            if (menuTop < this.options.gutter) {\n                // 不能超出窗口上方\n                menuMarginTop = -(elementTop - this.options.gutter);\n            }\n            else if (menuTop + menuHeight + this.options.gutter > windowHeight) {\n                // 不能超出窗口下方\n                menuMarginTop = -(elementTop +\n                    menuHeight +\n                    this.options.gutter -\n                    windowHeight);\n            }\n            // transform 的 Y 轴坐标\n            transformOriginY = `${this.selectedIndex * itemHeight + itemHeight / 2 + itemMargin}px`;\n        }\n        // 设置样式\n        this.$element.innerWidth(menuWidth);\n        this.$menu\n            .innerWidth(menuWidth)\n            .height(menuHeight)\n            .css({\n            'margin-top': menuMarginTop + 'px',\n            'transform-origin': 'center ' + transformOriginY + ' 0',\n        });\n    }\n    /**\n     * select 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 对原生 select 组件进行了修改后，需要调用该方法\n     */\n    handleUpdate() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        this.selectedValue = this.$native.val();\n        const itemsData = [];\n        this.$items = $();\n        // 生成 HTML\n        this.$native.find('option').each((index, option) => {\n            const text = option.textContent || '';\n            const value = option.value;\n            const disabled = option.disabled;\n            const selected = this.selectedValue === value;\n            itemsData.push({\n                value,\n                text,\n                disabled,\n                selected,\n                index,\n            });\n            if (selected) {\n                this.selectedText = text;\n                this.selectedIndex = index;\n            }\n            this.$items = this.$items.add('<div class=\"mdui-select-menu-item mdui-ripple\"' +\n                (disabled ? ' disabled' : '') +\n                (selected ? ' selected' : '') +\n                `>${text}</div>`);\n        });\n        this.$selected = $(`<span class=\"mdui-select-selected\">${this.selectedText}</span>`);\n        this.$element = $(`<div class=\"mdui-select mdui-select-position-${this.options.position}\" ` +\n            `style=\"${this.$native.attr('style')}\" ` +\n            `id=\"${this.uniqueID}\"></div>`)\n            .show()\n            .append(this.$selected);\n        this.$menu = $('<div class=\"mdui-select-menu\"></div>')\n            .appendTo(this.$element)\n            .append(this.$items);\n        $(`#${this.uniqueID}`).remove();\n        this.$native.after(this.$element);\n        // 根据 select 的 size 属性设置高度\n        this.size = parseInt(this.$native.attr('size') || '0');\n        if (this.size <= 0) {\n            this.size = this.$items.length;\n            if (this.size > 8) {\n                this.size = 8;\n            }\n        }\n        // 点击选项时关闭下拉菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$items.on('click', function () {\n            if (that.state === 'closing') {\n                return;\n            }\n            const $item = $(this);\n            const index = $item.index();\n            const data = itemsData[index];\n            if (data.disabled) {\n                return;\n            }\n            that.$selected.text(data.text);\n            that.$native.val(data.value);\n            that.$items.removeAttr('selected');\n            $item.attr('selected', '');\n            that.selectedIndex = data.index;\n            that.selectedValue = data.value;\n            that.selectedText = data.text;\n            that.$native.trigger('change');\n            that.close();\n        });\n        // 点击 $element 时打开下拉菜单\n        this.$element.on('click', (event) => {\n            const $target = $(event.target);\n            // 在菜单上点击时不打开\n            if ($target.is('.mdui-select-menu') ||\n                $target.is('.mdui-select-menu-item')) {\n                return;\n            }\n            this.toggle();\n        });\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-select-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n            this.$menu.css('overflow-y', 'auto');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 恢复样式\n            this.$element.innerWidth('');\n            this.$menu.css({\n                'margin-top': '',\n                height: '',\n                width: '',\n            });\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'select', this.$native, this);\n    }\n    /**\n     * 切换下拉菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开下拉菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjustMenu();\n        this.$element.addClass('mdui-select-open');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭下拉菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$menu.css('overflow-y', '');\n        this.$element\n            .removeClass('mdui-select-open')\n            .addClass('mdui-select-closing');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 获取当前菜单的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Select = Select;\n\nconst customAttr$4 = 'mdui-select';\n$(() => {\n    mdui.mutation(`[${customAttr$4}]`, function () {\n        new mdui.Select(this, parseOptions(this, customAttr$4));\n    });\n});\n\n$(() => {\n    // 滚动时隐藏应用栏\n    mdui.mutation('.mdui-appbar-scroll-hide', function () {\n        new mdui.Headroom(this);\n    });\n    // 滚动时只隐藏应用栏中的工具栏\n    mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-toolbar',\n            unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n        });\n    });\n});\n\nconst DEFAULT_OPTIONS$4 = {\n    trigger: 'click',\n    loop: false,\n};\nclass Tab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$4);\n        /**\n         * 当前激活的 tab 的索引号。为 -1 时表示没有激活的选项卡，或不存在选项卡\n         */\n        this.activeIndex = -1;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$tabs = this.$element.children('a');\n        this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(this.$element);\n        // 根据 url hash 获取默认激活的选项卡\n        const hash = window.location.hash;\n        if (hash) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).attr('href') === hash) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 含 .mdui-tab-active 的元素默认激活\n        if (this.activeIndex === -1) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).hasClass('mdui-tab-active')) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 存在选项卡时，默认激活第一个选项卡\n        if (this.$tabs.length && this.activeIndex === -1) {\n            this.activeIndex = 0;\n        }\n        // 设置激活状态选项卡\n        this.setActive();\n        // 监听窗口大小变化事件，调整指示器位置\n        $window.on('resize', $.throttle(() => this.setIndicatorPosition(), 100));\n        // 监听点击选项卡事件\n        this.$tabs.each((_, tab) => {\n            this.bindTabEvent(tab);\n        });\n    }\n    /**\n     * 指定选项卡是否已禁用\n     * @param $tab\n     */\n    isDisabled($tab) {\n        return $tab.attr('disabled') !== undefined;\n    }\n    /**\n     * 绑定在 Tab 上点击或悬浮的事件\n     * @param tab\n     */\n    bindTabEvent(tab) {\n        const $tab = $(tab);\n        // 点击或鼠标移入触发的事件\n        const clickEvent = () => {\n            // 禁用状态的选项卡无法选中\n            if (this.isDisabled($tab)) {\n                return false;\n            }\n            this.activeIndex = this.$tabs.index(tab);\n            this.setActive();\n        };\n        // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n        $tab.on('click', clickEvent);\n        // trigger 为 hover 时，额外响应 mouseenter 事件\n        if (this.options.trigger === 'hover') {\n            $tab.on('mouseenter', clickEvent);\n        }\n        // 阻止链接的默认点击动作\n        $tab.on('click', () => {\n            if (($tab.attr('href') || '').indexOf('#') === 0) {\n                return false;\n            }\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     * @param $element\n     * @param parameters\n     */\n    triggerEvent(name, $element, parameters = {}) {\n        componentEvent(name, 'tab', $element, this, parameters);\n    }\n    /**\n     * 设置激活状态的选项卡\n     */\n    setActive() {\n        this.$tabs.each((index, tab) => {\n            const $tab = $(tab);\n            const targetId = $tab.attr('href') || '';\n            // 设置选项卡激活状态\n            if (index === this.activeIndex && !this.isDisabled($tab)) {\n                if (!$tab.hasClass('mdui-tab-active')) {\n                    this.triggerEvent('change', this.$element, {\n                        index: this.activeIndex,\n                        id: targetId.substr(1),\n                    });\n                    this.triggerEvent('show', $tab);\n                    $tab.addClass('mdui-tab-active');\n                }\n                $(targetId).show();\n                this.setIndicatorPosition();\n            }\n            else {\n                $tab.removeClass('mdui-tab-active');\n                $(targetId).hide();\n            }\n        });\n    }\n    /**\n     * 设置选项卡指示器的位置\n     */\n    setIndicatorPosition() {\n        // 选项卡数量为 0 时，不显示指示器\n        if (this.activeIndex === -1) {\n            this.$indicator.css({\n                left: 0,\n                width: 0,\n            });\n            return;\n        }\n        const $activeTab = this.$tabs.eq(this.activeIndex);\n        if (this.isDisabled($activeTab)) {\n            return;\n        }\n        const activeTabOffset = $activeTab.offset();\n        this.$indicator.css({\n            left: `${activeTabOffset.left +\n                this.$element[0].scrollLeft -\n                this.$element[0].getBoundingClientRect().left}px`,\n            width: `${$activeTab.innerWidth()}px`,\n        });\n    }\n    /**\n     * 切换到下一个选项卡\n     */\n    next() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.$tabs.length > this.activeIndex + 1) {\n            this.activeIndex++;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = 0;\n        }\n        this.setActive();\n    }\n    /**\n     * 切换到上一个选项卡\n     */\n    prev() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.activeIndex > 0) {\n            this.activeIndex--;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = this.$tabs.length - 1;\n        }\n        this.setActive();\n    }\n    /**\n     * 显示指定索引号、或指定id的选项卡\n     * @param index 索引号、或id\n     */\n    show(index) {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (isNumber(index)) {\n            this.activeIndex = index;\n        }\n        else {\n            this.$tabs.each((i, tab) => {\n                if (tab.id === index) {\n                    this.activeIndex = i;\n                    return false;\n                }\n            });\n        }\n        this.setActive();\n    }\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     * 在添加或删除选项卡时，需要调用该方法\n     */\n    handleUpdate() {\n        const $oldTabs = this.$tabs; // 旧的 tabs JQ对象\n        const $newTabs = this.$element.children('a'); // 新的 tabs JQ对象\n        const oldTabsElement = $oldTabs.get(); // 旧的 tabs 元素数组\n        const newTabsElement = $newTabs.get(); // 新的 tabs 元素数组\n        if (!$newTabs.length) {\n            this.activeIndex = -1;\n            this.$tabs = $newTabs;\n            this.setIndicatorPosition();\n            return;\n        }\n        // 重新遍历选项卡，找出新增的选项卡\n        $newTabs.each((index, tab) => {\n            // 有新增的选项卡\n            if (oldTabsElement.indexOf(tab) < 0) {\n                this.bindTabEvent(tab);\n                if (this.activeIndex === -1) {\n                    this.activeIndex = 0;\n                }\n                else if (index <= this.activeIndex) {\n                    this.activeIndex++;\n                }\n            }\n        });\n        // 找出被移除的选项卡\n        $oldTabs.each((index, tab) => {\n            // 有被移除的选项卡\n            if (newTabsElement.indexOf(tab) < 0) {\n                if (index < this.activeIndex) {\n                    this.activeIndex--;\n                }\n                else if (index === this.activeIndex) {\n                    this.activeIndex = 0;\n                }\n            }\n        });\n        this.$tabs = $newTabs;\n        this.setActive();\n    }\n}\nmdui.Tab = Tab;\n\nconst customAttr$5 = 'mdui-tab';\n$(() => {\n    mdui.mutation(`[${customAttr$5}]`, function () {\n        new mdui.Tab(this, parseOptions(this, customAttr$5));\n    });\n});\n\n/**\n * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n */\nconst DEFAULT_OPTIONS$5 = {\n    overlay: false,\n    swipe: false,\n};\nclass Drawer {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$5);\n        /**\n         * 当前是否显示着遮罩层\n         */\n        this.overlay = false;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.position = this.$element.hasClass('mdui-drawer-right')\n            ? 'right'\n            : 'left';\n        if (this.$element.hasClass('mdui-drawer-close')) {\n            this.state = 'closed';\n        }\n        else if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n        }\n        else if (this.isDesktop()) {\n            this.state = 'opened';\n        }\n        else {\n            this.state = 'closed';\n        }\n        // 浏览器窗口大小调整时\n        $window.on('resize', $.throttle(() => {\n            if (this.isDesktop()) {\n                // 由手机平板切换到桌面时\n                // 如果显示着遮罩，则隐藏遮罩\n                if (this.overlay && !this.options.overlay) {\n                    $.hideOverlay();\n                    this.overlay = false;\n                    $.unlockScreen();\n                }\n                // 没有强制关闭，则状态为打开状态\n                if (!this.$element.hasClass('mdui-drawer-close')) {\n                    this.state = 'opened';\n                }\n            }\n            else if (!this.overlay && this.state === 'opened') {\n                // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n                if (this.$element.hasClass('mdui-drawer-open')) {\n                    $.showOverlay();\n                    this.overlay = true;\n                    $.lockScreen();\n                    $('.mdui-overlay').one('click', () => this.close());\n                }\n                else {\n                    this.state = 'closed';\n                }\n            }\n        }, 100));\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-drawer-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n        this.swipeSupport();\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() >= 1024;\n    }\n    /**\n     * 滑动手势支持\n     */\n    swipeSupport() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 抽屉栏滑动手势控制\n        let openNavEventHandler;\n        let touchStartX;\n        let touchStartY;\n        let swipeStartX;\n        let swiping = null;\n        let maybeSwiping = false;\n        const $body = $('body');\n        // 手势触发的范围\n        const swipeAreaWidth = 24;\n        function setPosition(translateX) {\n            const rtlTranslateMultiplier = that.position === 'right' ? -1 : 1;\n            const transformCSS = `translate(${-1 * rtlTranslateMultiplier * translateX}px, 0) !important;`;\n            const transitionCSS = 'initial !important;';\n            that.$element.css('cssText', `transform: ${transformCSS}; transition: ${transitionCSS};`);\n        }\n        function cleanPosition() {\n            that.$element[0].style.transform = '';\n            that.$element[0].style.webkitTransform = '';\n            that.$element[0].style.transition = '';\n            that.$element[0].style.webkitTransition = '';\n        }\n        function getMaxTranslateX() {\n            return that.$element.width() + 10;\n        }\n        function getTranslateX(currentX) {\n            return Math.min(Math.max(swiping === 'closing'\n                ? swipeStartX - currentX\n                : getMaxTranslateX() + swipeStartX - currentX, 0), getMaxTranslateX());\n        }\n        function onBodyTouchEnd(event) {\n            if (swiping) {\n                let touchX = event.changedTouches[0].pageX;\n                if (that.position === 'right') {\n                    touchX = $body.width() - touchX;\n                }\n                const translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n                maybeSwiping = false;\n                const swipingState = swiping;\n                swiping = null;\n                if (swipingState === 'opening') {\n                    if (translateRatio < 0.92) {\n                        cleanPosition();\n                        that.open();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                else {\n                    if (translateRatio > 0.08) {\n                        cleanPosition();\n                        that.close();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                $.unlockScreen();\n            }\n            else {\n                maybeSwiping = false;\n            }\n            $body.off({\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function onBodyTouchMove(event) {\n            let touchX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchX = $body.width() - touchX;\n            }\n            const touchY = event.touches[0].pageY;\n            if (swiping) {\n                setPosition(getTranslateX(touchX));\n            }\n            else if (maybeSwiping) {\n                const dXAbs = Math.abs(touchX - touchStartX);\n                const dYAbs = Math.abs(touchY - touchStartY);\n                const threshold = 8;\n                if (dXAbs > threshold && dYAbs <= threshold) {\n                    swipeStartX = touchX;\n                    swiping = that.state === 'opened' ? 'closing' : 'opening';\n                    $.lockScreen();\n                    setPosition(getTranslateX(touchX));\n                }\n                else if (dXAbs <= threshold && dYAbs > threshold) {\n                    onBodyTouchEnd();\n                }\n            }\n        }\n        function onBodyTouchStart(event) {\n            touchStartX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchStartX = $body.width() - touchStartX;\n            }\n            touchStartY = event.touches[0].pageY;\n            if (that.state !== 'opened') {\n                if (touchStartX > swipeAreaWidth ||\n                    openNavEventHandler !== onBodyTouchStart) {\n                    return;\n                }\n            }\n            maybeSwiping = true;\n            $body.on({\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function enableSwipeHandling() {\n            if (!openNavEventHandler) {\n                $body.on('touchstart', onBodyTouchStart);\n                openNavEventHandler = onBodyTouchStart;\n            }\n        }\n        if (this.options.swipe) {\n            enableSwipeHandling();\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'drawer', this.$element, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 是否处于打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开抽屉栏\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        if (!this.options.overlay) {\n            $('body').addClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .removeClass('mdui-drawer-close')\n            .addClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (!this.isDesktop() || this.options.overlay) {\n            this.overlay = true;\n            $.showOverlay().one('click', () => this.close());\n            $.lockScreen();\n        }\n    }\n    /**\n     * 关闭抽屉栏\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        if (!this.options.overlay) {\n            $('body').removeClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .addClass('mdui-drawer-close')\n            .removeClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (this.overlay) {\n            $.hideOverlay();\n            this.overlay = false;\n            $.unlockScreen();\n        }\n    }\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 返回当前抽屉栏的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Drawer = Drawer;\n\nconst customAttr$6 = 'mdui-drawer';\n$(() => {\n    mdui.mutation(`[${customAttr$6}]`, function () {\n        const $element = $(this);\n        const options = parseOptions(this, customAttr$6);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $drawer = $(selector).first();\n        const instance = new mdui.Drawer($drawer, options);\n        $element.on('click', () => instance.toggle());\n    });\n});\n\nconst container = {};\nfunction queue(name, func) {\n    if (isUndefined(container[name])) {\n        container[name] = [];\n    }\n    if (isUndefined(func)) {\n        return container[name];\n    }\n    container[name].push(func);\n}\n/**\n * 从队列中移除第一个函数，并执行该函数\n * @param name 队列满\n */\nfunction dequeue(name) {\n    if (isUndefined(container[name])) {\n        return;\n    }\n    if (!container[name].length) {\n        return;\n    }\n    const func = container[name].shift();\n    func();\n}\n\nconst DEFAULT_OPTIONS$6 = {\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    destroyOnClosed: false,\n};\n/**\n * 当前显示的对话框实例\n */\nlet currentInst = null;\n/**\n * 队列名\n */\nconst queueName = '_mdui_dialog';\n/**\n * 窗口是否已锁定\n */\nlet isLockScreen = false;\n/**\n * 遮罩层元素\n */\nlet $overlay;\nclass Dialog {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$6);\n        /**\n         * 当前 dialog 的状态\n         */\n        this.state = 'closed';\n        /**\n         * dialog 元素是否是动态添加的\n         */\n        this.append = false;\n        this.$element = $(selector).first();\n        // 如果对话框元素没有在当前文档中，则需要添加\n        if (!contains(document.body, this.$element[0])) {\n            this.append = true;\n            $('body').append(this.$element);\n        }\n        extend(this.options, options);\n        // 绑定取消按钮事件\n        this.$element.find('[mdui-dialog-cancel]').each((_, cancel) => {\n            $(cancel).on('click', () => {\n                this.triggerEvent('cancel');\n                if (this.options.closeOnCancel) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定确认按钮事件\n        this.$element.find('[mdui-dialog-confirm]').each((_, confirm) => {\n            $(confirm).on('click', () => {\n                this.triggerEvent('confirm');\n                if (this.options.closeOnConfirm) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-dialog-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'dialog', this.$element, this);\n    }\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n    readjust() {\n        if (!currentInst) {\n            return;\n        }\n        const $element = currentInst.$element;\n        const $title = $element.children('.mdui-dialog-title');\n        const $content = $element.children('.mdui-dialog-content');\n        const $actions = $element.children('.mdui-dialog-actions');\n        // 调整 dialog 的 top 和 height 值\n        $element.height('');\n        $content.height('');\n        const elementHeight = $element.height();\n        $element.css({\n            top: `${($window.height() - elementHeight) / 2}px`,\n            height: `${elementHeight}px`,\n        });\n        // 调整 mdui-dialog-content 的高度\n        $content.innerHeight(elementHeight -\n            ($title.innerHeight() || 0) -\n            ($actions.innerHeight() || 0));\n    }\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n    hashchangeEvent() {\n        if (window.location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n            currentInst.close(true);\n        }\n    }\n    /**\n     * 点击遮罩层关闭对话框\n     * @param event\n     */\n    overlayClick(event) {\n        if ($(event.target).hasClass('mdui-overlay') &&\n            currentInst) {\n            currentInst.close();\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-dialog-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$element.hide();\n            // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n            if (!queue(queueName).length && !currentInst && isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n            $window.off('resize', $.throttle(this.readjust, 100));\n            if (this.options.destroyOnClosed) {\n                this.destroy();\n            }\n        }\n    }\n    /**\n     * 打开指定对话框\n     */\n    doOpen() {\n        currentInst = this;\n        if (!isLockScreen) {\n            $.lockScreen();\n            isLockScreen = true;\n        }\n        this.$element.show();\n        this.readjust();\n        $window.on('resize', $.throttle(this.readjust, 100));\n        // 打开消息框\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-dialog-open')\n            .transitionEnd(() => this.transitionEnd());\n        // 不存在遮罩层元素时，添加遮罩层\n        if (!$overlay) {\n            $overlay = $.showOverlay(5100);\n        }\n        // 点击遮罩层时是否关闭对话框\n        if (this.options.modal) {\n            $overlay.off('click', this.overlayClick);\n        }\n        else {\n            $overlay.on('click', this.overlayClick);\n        }\n        // 是否显示遮罩层，不显示时，把遮罩层背景透明\n        $overlay.css('opacity', this.options.overlay ? '' : 0);\n        if (this.options.history) {\n            // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n            // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n            let hash = window.location.hash.substring(1);\n            if (hash.indexOf('mdui-dialog') > -1) {\n                hash = hash.replace(/[&?]?mdui-dialog/g, '');\n            }\n            // 后退按钮关闭对话框\n            if (hash) {\n                window.location.hash = `${hash}${hash.indexOf('?') > -1 ? '&' : '?'}mdui-dialog`;\n            }\n            else {\n                window.location.hash = 'mdui-dialog';\n            }\n            $window.on('hashchange', this.hashchangeEvent);\n        }\n    }\n    /**\n     * 当前对话框是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开对话框\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n        if ((currentInst &&\n            (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n            queue(queueName).length) {\n            queue(queueName, () => this.doOpen());\n            return;\n        }\n        this.doOpen();\n    }\n    /**\n     * 关闭对话框\n     */\n    close(historyBack = false) {\n        // historyBack 是否需要后退历史纪录，默认为 `false`。该参数仅内部使用\n        // 为 `false` 时是通过 js 关闭，需要后退一个历史记录\n        // 为 `true` 时是通过后退按钮关闭，不需要后退历史记录\n        // setTimeout 的作用是：\n        // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n        setTimeout(() => {\n            if (!this.isOpen()) {\n                return;\n            }\n            currentInst = null;\n            this.state = 'closing';\n            this.triggerEvent('close');\n            // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n            if (!queue(queueName).length && $overlay) {\n                $.hideOverlay();\n                $overlay = null;\n                // 若仍存在遮罩，恢复遮罩的 z-index\n                $('.mdui-overlay').css('z-index', 2000);\n            }\n            this.$element\n                .removeClass('mdui-dialog-open')\n                .transitionEnd(() => this.transitionEnd());\n            if (this.options.history && !queue(queueName).length) {\n                if (!historyBack) {\n                    window.history.back();\n                }\n                $window.off('hashchange', this.hashchangeEvent);\n            }\n            // 关闭旧对话框，打开新对话框。\n            // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n            setTimeout(() => {\n                dequeue(queueName);\n            }, 100);\n        });\n    }\n    /**\n     * 切换对话框打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取对话框状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * 销毁对话框\n     */\n    destroy() {\n        if (this.append) {\n            this.$element.remove();\n        }\n        if (!queue(queueName).length && !currentInst) {\n            if ($overlay) {\n                $.hideOverlay();\n                $overlay = null;\n            }\n            if (isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n        }\n    }\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n    handleUpdate() {\n        this.readjust();\n    }\n}\n\n// esc 按下时关闭对话框\n$document.on('keydown', (event) => {\n    if (currentInst &&\n        currentInst.options.closeOnEsc &&\n        currentInst.state === 'opened' &&\n        event.keyCode === 27) {\n        currentInst.close();\n    }\n});\nmdui.Dialog = Dialog;\n\nconst customAttr$7 = 'mdui-dialog';\nconst dataName$1 = '_mdui_dialog';\n$(() => {\n    $document.on('click', `[${customAttr$7}]`, function () {\n        const options = parseOptions(this, customAttr$7);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $dialog = $(selector).first();\n        let instance = $dialog.data(dataName$1);\n        if (!instance) {\n            instance = new mdui.Dialog($dialog, options);\n            $dialog.data(dataName$1, instance);\n        }\n        instance.open();\n    });\n});\n\nconst DEFAULT_BUTTON = {\n    text: '',\n    bold: false,\n    close: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n};\nconst DEFAULT_OPTIONS$7 = {\n    title: '',\n    content: '',\n    buttons: [],\n    stackedButtons: false,\n    cssClass: '',\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    destroyOnClosed: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\nmdui.dialog = function (options) {\n    var _a, _b;\n    // 合并配置参数\n    options = extend({}, DEFAULT_OPTIONS$7, options);\n    each(options.buttons, (i, button) => {\n        options.buttons[i] = extend({}, DEFAULT_BUTTON, button);\n    });\n    // 按钮的 HTML\n    let buttonsHTML = '';\n    if ((_a = options.buttons) === null || _a === void 0 ? void 0 : _a.length) {\n        buttonsHTML = `<div class=\"mdui-dialog-actions${options.stackedButtons ? ' mdui-dialog-actions-stacked' : ''}\">`;\n        each(options.buttons, (_, button) => {\n            buttonsHTML +=\n                '<a href=\"javascript:void(0)\" ' +\n                    `class=\"mdui-btn mdui-ripple mdui-text-color-primary ${button.bold ? 'mdui-btn-bold' : ''}\">${button.text}</a>`;\n        });\n        buttonsHTML += '</div>';\n    }\n    // Dialog 的 HTML\n    const HTML = `<div class=\"mdui-dialog ${options.cssClass}\">` +\n        (options.title\n            ? `<div class=\"mdui-dialog-title\">${options.title}</div>`\n            : '') +\n        (options.content\n            ? `<div class=\"mdui-dialog-content\">${options.content}</div>`\n            : '') +\n        buttonsHTML +\n        '</div>';\n    // 实例化 Dialog\n    const instance = new mdui.Dialog(HTML, {\n        history: options.history,\n        overlay: options.overlay,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        destroyOnClosed: options.destroyOnClosed,\n    });\n    // 绑定按钮事件\n    if ((_b = options.buttons) === null || _b === void 0 ? void 0 : _b.length) {\n        instance.$element\n            .find('.mdui-dialog-actions .mdui-btn')\n            .each((index, button) => {\n            $(button).on('click', () => {\n                options.buttons[index].onClick(instance);\n                if (options.buttons[index].close) {\n                    instance.close();\n                }\n            });\n        });\n    }\n    // 绑定打开关闭事件\n    instance.$element\n        .on('open.mdui.dialog', () => {\n        options.onOpen(instance);\n    })\n        .on('opened.mdui.dialog', () => {\n        options.onOpened(instance);\n    })\n        .on('close.mdui.dialog', () => {\n        options.onClose(instance);\n    })\n        .on('closed.mdui.dialog', () => {\n        options.onClosed(instance);\n    });\n    instance.open();\n    return instance;\n};\n\nconst DEFAULT_OPTIONS$8 = {\n    confirmText: 'ok',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnConfirm: true,\n};\nmdui.alert = function (text, title, onConfirm, options) {\n    if (isFunction(title)) {\n        options = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$8, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-alert',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$9 = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n};\nmdui.confirm = function (text, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$9, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancel,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-confirm',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$a = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    type: 'text',\n    maxlength: 0,\n    defaultValue: '',\n    confirmOnEnter: false,\n};\nmdui.prompt = function (label, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$a, options);\n    const content = '<div class=\"mdui-textfield\">' +\n        (label ? `<label class=\"mdui-textfield-label\">${label}</label>` : '') +\n        (options.type === 'text'\n            ? `<input class=\"mdui-textfield-input\" type=\"text\" value=\"${options.defaultValue}\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}/>`\n            : '') +\n        (options.type === 'textarea'\n            ? `<textarea class=\"mdui-textfield-input\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}>${options.defaultValue}</textarea>`\n            : '') +\n        '</div>';\n    const onCancelClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onCancel(value, dialog);\n    };\n    const onConfirmClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onConfirm(value, dialog);\n    };\n    return mdui.dialog({\n        title,\n        content,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancelClick,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirmClick,\n            },\n        ],\n        cssClass: 'mdui-dialog-prompt',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        onOpen: (dialog) => {\n            // 初始化输入框\n            const $input = dialog.$element.find('.mdui-textfield-input');\n            mdui.updateTextFields($input);\n            // 聚焦到输入框\n            $input[0].focus();\n            // 捕捉文本框回车键，在单行文本框的情况下触发回调\n            if (options.type !== 'textarea' && options.confirmOnEnter === true) {\n                $input.on('keydown', (event) => {\n                    if (event.keyCode === 13) {\n                        const value = dialog.$element.find('.mdui-textfield-input').val();\n                        onConfirm(value, dialog);\n                        if (options.closeOnConfirm) {\n                            dialog.close();\n                        }\n                        return false;\n                    }\n                    return;\n                });\n            }\n            // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n            if (options.type === 'textarea') {\n                $input.on('input', () => dialog.handleUpdate());\n            }\n            // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n            if (options.maxlength) {\n                dialog.handleUpdate();\n            }\n        },\n    });\n};\n\nconst DEFAULT_OPTIONS$b = {\n    position: 'auto',\n    delay: 0,\n    content: '',\n};\nclass Tooltip {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$b);\n        /**\n         * 当前 tooltip 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的返回值\n         */\n        this.timeoutId = null;\n        this.$target = $(selector).first();\n        extend(this.options, options);\n        // 创建 Tooltip HTML\n        this.$element = $(`<div class=\"mdui-tooltip\" id=\"${$.guid()}\">${this.options.content}</div>`).appendTo(document.body);\n        // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$target\n            .on('touchstart mouseenter', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            register(event);\n            that.open();\n        })\n            .on('touchend mouseleave', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            that.close();\n        })\n            .on(unlockEvent, function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            register(event);\n        });\n    }\n    /**\n     * 元素是否已禁用\n     * @param element\n     */\n    isDisabled(element) {\n        return (element.disabled ||\n            $(element).attr('disabled') !== undefined);\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() > 1024;\n    }\n    /**\n     * 设置 Tooltip 的位置\n     */\n    setPosition() {\n        let marginLeft;\n        let marginTop;\n        // 触发的元素\n        const targetProps = this.$target[0].getBoundingClientRect();\n        // 触发的元素和 Tooltip 之间的距离\n        const targetMargin = this.isDesktop() ? 14 : 24;\n        // Tooltip 的宽度和高度\n        const tooltipWidth = this.$element[0].offsetWidth;\n        const tooltipHeight = this.$element[0].offsetHeight;\n        // Tooltip 的方向\n        let position = this.options.position;\n        // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n        if (position === 'auto') {\n            if (targetProps.top +\n                targetProps.height +\n                targetMargin +\n                tooltipHeight +\n                2 <\n                $window.height()) {\n                position = 'bottom';\n            }\n            else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n                position = 'top';\n            }\n            else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n                position = 'left';\n            }\n            else if (targetProps.width + targetMargin + tooltipWidth + 2 <\n                $window.width() - targetProps.left) {\n                position = 'right';\n            }\n            else {\n                position = 'bottom';\n            }\n        }\n        // 设置位置\n        switch (position) {\n            case 'bottom':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop = targetProps.height / 2 + targetMargin;\n                this.$element.transformOrigin('top center');\n                break;\n            case 'top':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop =\n                    -1 * (tooltipHeight + targetProps.height / 2 + targetMargin);\n                this.$element.transformOrigin('bottom center');\n                break;\n            case 'left':\n                marginLeft = -1 * (tooltipWidth + targetProps.width / 2 + targetMargin);\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center right');\n                break;\n            case 'right':\n                marginLeft = targetProps.width / 2 + targetMargin;\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center left');\n                break;\n        }\n        const targetOffset = this.$target.offset();\n        this.$element.css({\n            top: `${targetOffset.top + targetProps.height / 2}px`,\n            left: `${targetOffset.left + targetProps.width / 2}px`,\n            'margin-left': `${marginLeft}px`,\n            'margin-top': `${marginTop}px`,\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'tooltip', this.$target, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-tooltip-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 当前 tooltip 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 执行打开 tooltip\n     */\n    doOpen() {\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 打开 Tooltip\n     * @param options 允许每次打开时设置不同的参数\n     */\n    open(options) {\n        if (this.isOpen()) {\n            return;\n        }\n        const oldOptions = extend({}, this.options);\n        if (options) {\n            extend(this.options, options);\n        }\n        // tooltip 的内容有更新\n        if (oldOptions.content !== this.options.content) {\n            this.$element.html(this.options.content);\n        }\n        this.setPosition();\n        if (this.options.delay) {\n            this.timeoutId = setTimeout(() => this.doOpen(), this.options.delay);\n        }\n        else {\n            this.timeoutId = null;\n            this.doOpen();\n        }\n    }\n    /**\n     * 关闭 Tooltip\n     */\n    close() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$element\n            .removeClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 切换 Tooltip 的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取 Tooltip 状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Tooltip = Tooltip;\n\nconst customAttr$8 = 'mdui-tooltip';\nconst dataName$2 = '_mdui_tooltip';\n$(() => {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    $document.on('touchstart mouseover', `[${customAttr$8}]`, function () {\n        const $target = $(this);\n        let instance = $target.data(dataName$2);\n        if (!instance) {\n            instance = new mdui.Tooltip(this, parseOptions(this, customAttr$8));\n            $target.data(dataName$2, instance);\n        }\n    });\n});\n\nconst DEFAULT_OPTIONS$c = {\n    message: '',\n    timeout: 4000,\n    position: 'bottom',\n    buttonText: '',\n    buttonColor: '',\n    closeOnButtonClick: true,\n    closeOnOutsideClick: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onButtonClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\n/**\n * 当前打开着的 Snackbar\n */\nlet currentInst$1 = null;\n/**\n * 队列名\n */\nconst queueName$1 = '_mdui_snackbar';\nclass Snackbar {\n    constructor(options) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$c);\n        /**\n         * 当前 Snackbar 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的 ID\n         */\n        this.timeoutId = null;\n        extend(this.options, options);\n        // 按钮颜色\n        let buttonColorStyle = '';\n        let buttonColorClass = '';\n        if (this.options.buttonColor.indexOf('#') === 0 ||\n            this.options.buttonColor.indexOf('rgb') === 0) {\n            buttonColorStyle = `style=\"color:${this.options.buttonColor}\"`;\n        }\n        else if (this.options.buttonColor !== '') {\n            buttonColorClass = `mdui-text-color-${this.options.buttonColor}`;\n        }\n        // 添加 HTML\n        this.$element = $('<div class=\"mdui-snackbar\">' +\n            `<div class=\"mdui-snackbar-text\">${this.options.message}</div>` +\n            (this.options.buttonText\n                ? `<a href=\"javascript:void(0)\" class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ${buttonColorClass}\" ${buttonColorStyle}>${this.options.buttonText}</a>`\n                : '') +\n            '</div>').appendTo(document.body);\n        // 设置位置\n        this.setPosition('close');\n        this.$element.reflow().addClass(`mdui-snackbar-${this.options.position}`);\n    }\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param event\n     */\n    closeOnOutsideClick(event) {\n        const $target = $(event.target);\n        if (!$target.hasClass('mdui-snackbar') &&\n            !$target.parents('.mdui-snackbar').length) {\n            currentInst$1.close();\n        }\n    }\n    /**\n     * 设置 Snackbar 的位置\n     * @param state\n     */\n    setPosition(state) {\n        const snackbarHeight = this.$element[0].clientHeight;\n        const position = this.options.position;\n        let translateX;\n        let translateY;\n        // translateX\n        if (position === 'bottom' || position === 'top') {\n            translateX = '-50%';\n        }\n        else {\n            translateX = '0';\n        }\n        // translateY\n        if (state === 'open') {\n            translateY = '0';\n        }\n        else {\n            if (position === 'bottom') {\n                translateY = snackbarHeight;\n            }\n            if (position === 'top') {\n                translateY = -snackbarHeight;\n            }\n            if (position === 'left-top' || position === 'right-top') {\n                translateY = -snackbarHeight - 24;\n            }\n            if (position === 'left-bottom' || position === 'right-bottom') {\n                translateY = snackbarHeight + 24;\n            }\n        }\n        this.$element.transform(`translate(${translateX},${translateY}px`);\n    }\n    /**\n     * 打开 Snackbar\n     */\n    open() {\n        if (this.state === 'opening' || this.state === 'opened') {\n            return;\n        }\n        // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n        if (currentInst$1) {\n            queue(queueName$1, () => this.open());\n            return;\n        }\n        currentInst$1 = this;\n        // 开始打开\n        this.state = 'opening';\n        this.options.onOpen(this);\n        this.setPosition('open');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'opening') {\n                return;\n            }\n            this.state = 'opened';\n            this.options.onOpened(this);\n            // 有按钮时绑定事件\n            if (this.options.buttonText) {\n                this.$element.find('.mdui-snackbar-action').on('click', () => {\n                    this.options.onButtonClick(this);\n                    if (this.options.closeOnButtonClick) {\n                        this.close();\n                    }\n                });\n            }\n            // 点击 snackbar 的事件\n            this.$element.on('click', (event) => {\n                if (!$(event.target).hasClass('mdui-snackbar-action')) {\n                    this.options.onClick(this);\n                }\n            });\n            // 点击 Snackbar 外面的区域关闭\n            if (this.options.closeOnOutsideClick) {\n                $document.on(startEvent, this.closeOnOutsideClick);\n            }\n            // 超时后自动关闭\n            if (this.options.timeout) {\n                this.timeoutId = setTimeout(() => this.close(), this.options.timeout);\n            }\n        });\n    }\n    /**\n     * 关闭 Snackbar\n     */\n    close() {\n        if (this.state === 'closing' || this.state === 'closed') {\n            return;\n        }\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n        if (this.options.closeOnOutsideClick) {\n            $document.off(startEvent, this.closeOnOutsideClick);\n        }\n        this.state = 'closing';\n        this.options.onClose(this);\n        this.setPosition('close');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'closing') {\n                return;\n            }\n            currentInst$1 = null;\n            this.state = 'closed';\n            this.options.onClosed(this);\n            this.$element.remove();\n            dequeue(queueName$1);\n        });\n    }\n}\nmdui.snackbar = function (message, options = {}) {\n    if (isString(message)) {\n        options.message = message;\n    }\n    else {\n        options = message;\n    }\n    const instance = new Snackbar(options);\n    instance.open();\n    return instance;\n};\n\n$(() => {\n    // 切换导航项\n    $document.on('click', '.mdui-bottom-nav>a', function () {\n        const $item = $(this);\n        const $bottomNav = $item.parent();\n        $bottomNav.children('a').each((index, item) => {\n            const isThis = $item.is(item);\n            if (isThis) {\n                componentEvent('change', 'bottomNav', $bottomNav[0], undefined, {\n                    index,\n                });\n            }\n            isThis\n                ? $(item).addClass('mdui-bottom-nav-active')\n                : $(item).removeClass('mdui-bottom-nav-active');\n        });\n    });\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-down',\n            unpinnedClass: 'mdui-headroom-unpinned-down',\n        });\n    });\n});\n\n/**\n * layer 的 HTML 结构\n * @param index\n */\nfunction layerHTML(index = false) {\n    return (`<div class=\"mdui-spinner-layer ${index ? `mdui-spinner-layer-${index}` : ''}\">` +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-gap-patch\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '</div>');\n}\n/**\n * 填充 HTML\n * @param spinner\n */\nfunction fillHTML(spinner) {\n    const $spinner = $(spinner);\n    const layer = $spinner.hasClass('mdui-spinner-colorful')\n        ? layerHTML(1) + layerHTML(2) + layerHTML(3) + layerHTML(4)\n        : layerHTML();\n    $spinner.html(layer);\n}\n$(() => {\n    // 页面加载完后自动填充 HTML 结构\n    mdui.mutation('.mdui-spinner', function () {\n        fillHTML(this);\n    });\n});\nmdui.updateSpinners = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-spinner') : $(selector);\n    $elements.each(function () {\n        fillHTML(this);\n    });\n};\n\nconst DEFAULT_OPTIONS$d = {\n    position: 'auto',\n    align: 'auto',\n    gutter: 16,\n    fixed: false,\n    covered: 'auto',\n    subMenuTrigger: 'hover',\n    subMenuDelay: 200,\n};\nclass Menu {\n    constructor(anchorSelector, menuSelector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$d);\n        /**\n         * 当前菜单状态\n         */\n        this.state = 'closed';\n        this.$anchor = $(anchorSelector).first();\n        this.$element = $(menuSelector).first();\n        // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n        if (!this.$anchor.parent().is(this.$element.parent())) {\n            throw new Error('anchorSelector and menuSelector must be siblings');\n        }\n        extend(this.options, options);\n        // 是否是级联菜单\n        this.isCascade = this.$element.hasClass('mdui-menu-cascade');\n        // covered 参数处理\n        this.isCovered =\n            this.options.covered === 'auto' ? !this.isCascade : this.options.covered;\n        // 点击触发菜单切换\n        this.$anchor.on('click', () => this.toggle());\n        // 点击菜单外面区域关闭菜单\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0]) &&\n                !$target.is(this.$anchor) &&\n                !contains(this.$anchor[0], $target[0])) {\n                this.close();\n            }\n        });\n        // 点击不含子菜单的菜单条目关闭菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        $document.on('click', '.mdui-menu-item', function () {\n            const $item = $(this);\n            if (!$item.find('.mdui-menu').length &&\n                $item.attr('disabled') === undefined) {\n                that.close();\n            }\n        });\n        // 绑定点击或鼠标移入含子菜单的条目的事件\n        this.bindSubMenuEvent();\n        // 窗口大小变化时，重新调整菜单位置\n        $window.on('resize', $.throttle(() => this.readjust(), 100));\n    }\n    /**\n     * 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'menu', this.$element, this);\n    }\n    /**\n     * 调整主菜单位置\n     */\n    readjust() {\n        let menuLeft;\n        let menuTop;\n        // 菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 配置参数\n        const gutter = this.options.gutter;\n        const isCovered = this.isCovered;\n        const isFixed = this.options.fixed;\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 菜单的原始宽度和高度\n        const menuWidth = this.$element.width();\n        const menuHeight = this.$element.height();\n        // 触发菜单的元素在窗口中的位置\n        const anchorRect = this.$anchor[0].getBoundingClientRect();\n        const anchorTop = anchorRect.top;\n        const anchorLeft = anchorRect.left;\n        const anchorHeight = anchorRect.height;\n        const anchorWidth = anchorRect.width;\n        const anchorBottom = windowHeight - anchorTop - anchorHeight;\n        const anchorRight = windowWidth - anchorLeft - anchorWidth;\n        // 触发元素相对其拥有定位属性的父元素的位置\n        const anchorOffsetTop = this.$anchor[0].offsetTop;\n        const anchorOffsetLeft = this.$anchor[0].offsetLeft;\n        // 自动判断菜单位置\n        if (this.options.position === 'auto') {\n            if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n                // 判断下方是否放得下菜单\n                position = 'bottom';\n            }\n            else if (anchorTop + (isCovered ? anchorHeight : 0) >\n                menuHeight + gutter) {\n                // 判断上方是否放得下菜单\n                position = 'top';\n            }\n            else {\n                // 上下都放不下，居中显示\n                position = 'center';\n            }\n        }\n        else {\n            position = this.options.position;\n        }\n        // 自动判断菜单对齐方式\n        if (this.options.align === 'auto') {\n            if (anchorRight + anchorWidth > menuWidth + gutter) {\n                // 判断右侧是否放得下菜单\n                align = 'left';\n            }\n            else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n                // 判断左侧是否放得下菜单\n                align = 'right';\n            }\n            else {\n                // 左右都放不下，居中显示\n                align = 'center';\n            }\n        }\n        else {\n            align = this.options.align;\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            menuTop =\n                (isCovered ? 0 : anchorHeight) +\n                    (isFixed ? anchorTop : anchorOffsetTop);\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            menuTop =\n                (isCovered ? anchorHeight : 0) +\n                    (isFixed ? anchorTop - menuHeight : anchorOffsetTop - menuHeight);\n        }\n        else {\n            transformOriginY = '50%';\n            // =====================在窗口中居中\n            // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n            // 级联菜单内部不允许出现滚动条\n            let menuHeightTemp = menuHeight;\n            // 简单菜单比窗口高时，限制菜单高度\n            if (!this.isCascade) {\n                if (menuHeight + gutter * 2 > windowHeight) {\n                    menuHeightTemp = windowHeight - gutter * 2;\n                    this.$element.height(menuHeightTemp);\n                }\n            }\n            menuTop =\n                (windowHeight - menuHeightTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetTop - anchorTop);\n        }\n        this.$element.css('top', `${menuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            menuLeft = isFixed\n                ? anchorLeft + anchorWidth - menuWidth\n                : anchorOffsetLeft + anchorWidth - menuWidth;\n        }\n        else {\n            transformOriginX = '50%';\n            //=======================在窗口中居中\n            // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n            let menuWidthTemp = menuWidth;\n            // 菜单比窗口宽，限制菜单宽度\n            if (menuWidth + gutter * 2 > windowWidth) {\n                menuWidthTemp = windowWidth - gutter * 2;\n                this.$element.width(menuWidthTemp);\n            }\n            menuLeft =\n                (windowWidth - menuWidthTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n        }\n        this.$element.css('left', `${menuLeft}px`);\n        // 设置菜单动画方向\n        this.$element.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 调整子菜单的位置\n     * @param $submenu\n     */\n    readjustSubmenu($submenu) {\n        const $item = $submenu.parent('.mdui-menu-item');\n        let submenuTop;\n        let submenuLeft;\n        // 子菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 子菜单的原始宽度和高度\n        const submenuWidth = $submenu.width();\n        const submenuHeight = $submenu.height();\n        // 触发子菜单的菜单项的宽度高度\n        const itemRect = $item[0].getBoundingClientRect();\n        const itemWidth = itemRect.width;\n        const itemHeight = itemRect.height;\n        const itemLeft = itemRect.left;\n        const itemTop = itemRect.top;\n        // 判断菜单上下位置\n        if (windowHeight - itemTop > submenuHeight) {\n            // 判断下方是否放得下菜单\n            position = 'bottom';\n        }\n        else if (itemTop + itemHeight > submenuHeight) {\n            // 判断上方是否放得下菜单\n            position = 'top';\n        }\n        else {\n            // 默认放在下方\n            position = 'bottom';\n        }\n        // 判断菜单左右位置\n        if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n            // 判断右侧是否放得下菜单\n            align = 'left';\n        }\n        else if (itemLeft > submenuWidth) {\n            // 判断左侧是否放得下菜单\n            align = 'right';\n        }\n        else {\n            // 默认放在右侧\n            align = 'left';\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            submenuTop = '0';\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            submenuTop = -submenuHeight + itemHeight;\n        }\n        $submenu.css('top', `${submenuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            submenuLeft = itemWidth;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            submenuLeft = -submenuWidth;\n        }\n        $submenu.css('left', `${submenuLeft}px`);\n        // 设置菜单动画方向\n        $submenu.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 打开子菜单\n     * @param $submenu\n     */\n    openSubMenu($submenu) {\n        this.readjustSubmenu($submenu);\n        $submenu\n            .addClass('mdui-menu-open')\n            .parent('.mdui-menu-item')\n            .addClass('mdui-menu-item-active');\n    }\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param $submenu\n     */\n    closeSubMenu($submenu) {\n        // 关闭子菜单\n        $submenu\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => $submenu.removeClass('mdui-menu-closing'))\n            // 移除激活状态的样式\n            .parent('.mdui-menu-item')\n            .removeClass('mdui-menu-item-active');\n        // 循环关闭嵌套的子菜单\n        $submenu.find('.mdui-menu').each((_, menu) => {\n            const $subSubmenu = $(menu);\n            $subSubmenu\n                .removeClass('mdui-menu-open')\n                .addClass('mdui-menu-closing')\n                .transitionEnd(() => $subSubmenu.removeClass('mdui-menu-closing'))\n                .parent('.mdui-menu-item')\n                .removeClass('mdui-menu-item-active');\n        });\n    }\n    /**\n     * 切换子菜单状态\n     * @param $submenu\n     */\n    toggleSubMenu($submenu) {\n        $submenu.hasClass('mdui-menu-open')\n            ? this.closeSubMenu($submenu)\n            : this.openSubMenu($submenu);\n    }\n    /**\n     * 绑定子菜单事件\n     */\n    bindSubMenuEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击打开子菜单\n        this.$element.on('click', '.mdui-menu-item', function (event) {\n            const $item = $(this);\n            const $target = $(event.target);\n            // 禁用状态菜单不操作\n            if ($item.attr('disabled') !== undefined) {\n                return;\n            }\n            // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n            if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n                return;\n            }\n            // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n            if (!$target.parents('.mdui-menu-item').first().is($item)) {\n                return;\n            }\n            // 当前菜单的子菜单\n            const $submenu = $item.children('.mdui-menu');\n            // 先关闭除当前子菜单外的所有同级子菜单\n            $item\n                .parent('.mdui-menu')\n                .children('.mdui-menu-item')\n                .each((_, item) => {\n                const $tmpSubmenu = $(item).children('.mdui-menu');\n                if ($tmpSubmenu.length &&\n                    (!$submenu.length || !$tmpSubmenu.is($submenu))) {\n                    that.closeSubMenu($tmpSubmenu);\n                }\n            });\n            // 切换当前子菜单\n            if ($submenu.length) {\n                that.toggleSubMenu($submenu);\n            }\n        });\n        if (this.options.subMenuTrigger === 'hover') {\n            // 临时存储 setTimeout 对象\n            let timeout = null;\n            let timeoutOpen = null;\n            this.$element.on('mouseover mouseout', '.mdui-menu-item', function (event) {\n                const $item = $(this);\n                const eventType = event.type;\n                const $relatedTarget = $(event.relatedTarget);\n                // 禁用状态的菜单不操作\n                if ($item.attr('disabled') !== undefined) {\n                    return;\n                }\n                // 用 mouseover 模拟 mouseenter\n                if (eventType === 'mouseover') {\n                    if (!$item.is($relatedTarget) &&\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 用 mouseout 模拟 mouseleave\n                else if (eventType === 'mouseout') {\n                    if ($item.is($relatedTarget) ||\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 当前菜单项下的子菜单，未必存在\n                const $submenu = $item.children('.mdui-menu');\n                // 鼠标移入菜单项时，显示菜单项下的子菜单\n                if (eventType === 'mouseover') {\n                    if ($submenu.length) {\n                        // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n                        const tmpClose = $submenu.data('timeoutClose.mdui.menu');\n                        if (tmpClose) {\n                            clearTimeout(tmpClose);\n                        }\n                        // 如果当前子菜单已经打开，不操作\n                        if ($submenu.hasClass('mdui-menu-open')) {\n                            return;\n                        }\n                        // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n                        clearTimeout(timeoutOpen);\n                        // 准备打开当前子菜单\n                        timeout = timeoutOpen = setTimeout(() => that.openSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutOpen.mdui.menu', timeout);\n                    }\n                }\n                // 鼠标移出菜单项时，关闭菜单项下的子菜单\n                else if (eventType === 'mouseout') {\n                    if ($submenu.length) {\n                        // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n                        const tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n                        if (tmpOpen) {\n                            clearTimeout(tmpOpen);\n                        }\n                        // 准备关闭当前子菜单\n                        timeout = setTimeout(() => that.closeSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutClose.mdui.menu', timeout);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-menu-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n            this.$element.css({\n                top: '',\n                left: '',\n                width: '',\n                position: 'fixed',\n            });\n        }\n    }\n    /**\n     * 切换菜单状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjust();\n        this.$element\n            // 菜单隐藏状态使用使用 fixed 定位。\n            .css('position', this.options.fixed ? 'fixed' : 'absolute')\n            .addClass('mdui-menu-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 菜单开始关闭时，关闭所有子菜单\n        this.$element.find('.mdui-menu').each((_, submenu) => {\n            this.closeSubMenu($(submenu));\n        });\n        this.$element\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => this.transitionEnd());\n    }\n}\nmdui.Menu = Menu;\n\nconst customAttr$9 = 'mdui-menu';\nconst dataName$3 = '_mdui_menu';\n$(() => {\n    $document.on('click', `[${customAttr$9}]`, function () {\n        const $this = $(this);\n        let instance = $this.data(dataName$3);\n        if (!instance) {\n            const options = parseOptions(this, customAttr$9);\n            const menuSelector = options.target;\n            // @ts-ignore\n            delete options.target;\n            instance = new mdui.Menu($this, menuSelector, options);\n            $this.data(dataName$3, instance);\n            instance.toggle();\n        }\n    });\n});\n\nexport default mdui;\n//# sourceMappingURL=mdui.esm.js.map\n","import { computed, unref, watch, ref, customRef, isVue3, isRef, effectScope, getCurrentScope, onScopeDispose, shallowRef, watchSyncEffect, readonly, reactive, toRef, isVue2, set as set$1, toRefs as toRefs$1, getCurrentInstance, onBeforeUnmount, onMounted, nextTick, onUnmounted } from 'vue-demi';\n\nfunction and(...args) {\n  return computed(() => args.every((i) => unref(i)));\n}\n\nfunction biSyncRef(a, b) {\n  const flush = \"sync\";\n  const stop1 = watch(a, (newValue) => {\n    b.value = newValue;\n  }, {\n    flush,\n    immediate: true\n  });\n  const stop2 = watch(b, (newValue) => {\n    a.value = newValue;\n  }, {\n    flush,\n    immediate: true\n  });\n  return () => {\n    stop1();\n    stop2();\n  };\n}\n\nfunction controlledComputed(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  watch(source, () => {\n    dirty.value = true;\n    trigger();\n  }, { flush: \"sync\" });\n  return customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = fn();\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set() {\n      }\n    };\n  });\n}\n\nfunction __onlyVue3(name = \"this function\") {\n  if (isVue3)\n    return;\n  throw new Error(`[VueUse] ${name} is only works on Vue 3.`);\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  __onlyVue3();\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction controlledRef(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(ref, {\n    get,\n    set,\n    untrackedGet,\n    silentSet,\n    peek,\n    lay\n  }, { enumerable: true });\n}\n\nfunction createEventHook() {\n  const fns = [];\n  const off = (fn) => {\n    const index = fns.indexOf(fn);\n    if (index !== -1)\n      fns.splice(index, 1);\n  };\n  const on = (fn) => {\n    fns.push(fn);\n    return {\n      off: () => off(fn)\n    };\n  };\n  const trigger = (param) => {\n    fns.forEach((fn) => fn(param));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return () => {\n    if (!initialized) {\n      state = scope.run(stateFactory);\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nfunction reactify(fn) {\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unref(i))));\n  };\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!state) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nconst isClient = typeof window !== \"undefined\";\nconst isDef = (val) => typeof val !== \"undefined\";\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isBoolean = (val) => typeof val === \"boolean\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isNumber = (val) => typeof val === \"number\";\nconst isString = (val) => typeof val === \"string\";\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst isWindow = (val) => typeof window !== \"undefined\" && toString.call(val) === \"[object Window]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    filter(() => fn.apply(this, args), { fn, thisArg: this, args });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  const filter = (invoke) => {\n    const duration = unref(ms);\n    const maxDuration = unref(options.maxWait);\n    if (timer)\n      clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return invoke();\n    }\n    if (maxDuration && !maxTimer) {\n      maxTimer = setTimeout(() => {\n        if (timer)\n          clearTimeout(timer);\n        maxTimer = null;\n        invoke();\n      }, maxDuration);\n    }\n    timer = setTimeout(() => {\n      if (maxTimer)\n        clearTimeout(maxTimer);\n      maxTimer = null;\n      invoke();\n    }, duration);\n  };\n  return filter;\n}\nfunction throttleFilter(ms, trailing = true, leading = true) {\n  let lastExec = 0;\n  let timer;\n  let preventLeading = !leading;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n  };\n  const filter = (invoke) => {\n    const duration = unref(ms);\n    const elapsed = Date.now() - lastExec;\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration) {\n      lastExec = Date.now();\n      if (preventLeading)\n        preventLeading = false;\n      else\n        invoke();\n    }\n    if (trailing) {\n      timer = setTimeout(() => {\n        lastExec = Date.now();\n        if (!leading)\n          preventLeading = true;\n        clear();\n        invoke();\n      }, duration);\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => preventLeading = true, duration);\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive, pause, resume, eventFilter };\n}\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || !obj[k] === void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(debounceFilter(ms, options), fn);\n}\n\nfunction useDebounce(value, ms = 200, options = {}) {\n  if (ms <= 0)\n    return value;\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __objRest$5 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$9.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$9.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchWithFilter(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$5(_a, [\n    \"eventFilter\"\n  ]);\n  return watch(source, createFilterWrapper(eventFilter, cb), watchOptions);\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$8.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(b)) {\n      if (__propIsEnum$8.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nvar __objRest$4 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$8.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$8.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction debouncedWatch(source, cb, options = {}) {\n  const _a = options, {\n    debounce = 0\n  } = _a, watchOptions = __objRest$4(_a, [\n    \"debounce\"\n  ]);\n  return watchWithFilter(source, cb, __spreadProps$4(__spreadValues$7({}, watchOptions), {\n    eventFilter: debounceFilter(debounce)\n  }));\n}\n\nfunction eagerComputed(fn) {\n  const result = shallowRef();\n  watchSyncEffect(() => {\n    result.value = fn();\n  });\n  return readonly(result);\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$7.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(b)) {\n      if (__propIsEnum$7.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nvar __objRest$3 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$7.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$7.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction ignorableWatch(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$3(_a, [\n    \"eventFilter\"\n  ]);\n  const filteredCb = createFilterWrapper(eventFilter, cb);\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(source, (...args) => {\n      if (!ignore.value)\n        filteredCb(...args);\n    }, watchOptions);\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(watch(source, () => {\n      syncCounter.value++;\n    }, __spreadProps$3(__spreadValues$6({}, watchOptions), { flush: \"sync\" })));\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(watch(source, (...args) => {\n      const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n      ignoreCounter.value = 0;\n      syncCounter.value = 0;\n      if (ignore)\n        return;\n      filteredCb(...args);\n    }, watchOptions));\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$6.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(b)) {\n      if (__propIsEnum$6.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = __spreadValues$5({}, obj);\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction not(v) {\n  return computed(() => !unref(v));\n}\n\nfunction or(...args) {\n  return computed(() => args.some((i) => unref(i)));\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$5.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(b)) {\n      if (__propIsEnum$5.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$5.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$5.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction pausableWatch(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter: filter\n  } = _a, watchOptions = __objRest$2(_a, [\n    \"eventFilter\"\n  ]);\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(source, cb, __spreadProps$2(__spreadValues$4({}, watchOptions), {\n    eventFilter\n  }));\n  return { stop, pause, resume, isActive };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(keys.map((key) => {\n    const value = obj[key];\n    return [\n      key,\n      typeof value === \"function\" ? reactify(value.bind(obj)) : value\n    ];\n  }));\n}\n\nfunction reactivePick(obj, ...keys) {\n  return reactive(Object.fromEntries(keys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    if (isVue2) {\n      set$1(...args);\n    } else {\n      const [target, key, value] = args;\n      target[key] = value;\n    }\n  }\n}\n\nfunction syncRef(source, targets, {\n  flush = \"sync\",\n  deep = false,\n  immediate = true\n} = {}) {\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(source, (newValue) => targets.forEach((target) => target.value = newValue), { flush, deep, immediate });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = true, leading = true) {\n  return createFilterWrapper(throttleFilter(ms, trailing, leading), fn);\n}\n\nfunction useThrottle(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$4.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$4.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction throttledWatch(source, cb, options = {}) {\n  const _a = options, {\n    throttle = 0,\n    trailing = true,\n    leading = true\n  } = _a, watchOptions = __objRest$1(_a, [\n    \"throttle\",\n    \"trailing\",\n    \"leading\"\n  ]);\n  return watchWithFilter(source, cb, __spreadProps$1(__spreadValues$3({}, watchOptions), {\n    eventFilter: throttleFilter(throttle, trailing, leading)\n  }));\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return Reflect.get(objectRef.value, p, receiver);\n    },\n    set(_, p, value) {\n      objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction toRefs(objectRef) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? new Array(objectRef.value.length) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        if (Array.isArray(objectRef.value)) {\n          const copy = [...objectRef.value];\n          copy[key] = v;\n          objectRef.value = copy;\n        } else {\n          objectRef.value = __spreadProps(__spreadValues$2({}, objectRef.value), { [key]: v });\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeUnmount(fn) {\n  if (getCurrentInstance())\n    onBeforeUnmount(fn);\n}\n\nfunction tryOnMounted(fn, sync = true) {\n  if (getCurrentInstance())\n    onMounted(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn) {\n  if (getCurrentInstance())\n    onUnmounted(fn);\n}\n\nfunction until(r) {\n  let isNot = false;\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(r, (v) => {\n        if (condition(v) === !isNot) {\n          stop == null ? void 0 : stop();\n          resolve();\n        }\n      }, {\n        flush,\n        deep,\n        immediate: true\n      });\n    });\n    const promises = [watcher];\n    if (timeout) {\n      promises.push(promiseTimeout(timeout, throwOnTimeout).finally(() => {\n        stop == null ? void 0 : stop();\n      }));\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    return toMatch((v) => v === unref(value), options);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(unref(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(unref(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        isNot = !isNot;\n        return this;\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        isNot = !isNot;\n        return this;\n      }\n    };\n    return instance;\n  }\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  const count = ref(initialValue);\n  const {\n    max = Infinity,\n    min = -Infinity\n  } = options;\n  const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);\n  const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);\n  const get = () => count.value;\n  const set = (val) => count.value = val;\n  const reset = (val = initialValue) => {\n    initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    if (interval <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer = setInterval(cb, interval);\n  }\n  if (immediate && isClient)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true\n  } = options;\n  const counter = ref(0);\n  const controls = useIntervalFn(() => counter.value += 1, interval, { immediate });\n  if (exposeControls) {\n    return __spreadValues$1({\n      counter\n    }, controls);\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(source, () => ms.value = timestamp(), options);\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, unref(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending,\n    start,\n    stop\n  };\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false\n  } = options;\n  const controls = useTimeoutFn(noop, interval, options);\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return __spreadValues({\n      ready\n    }, controls);\n  } else {\n    return ready;\n  }\n}\n\nfunction useToggle(initialValue = false) {\n  if (isRef(initialValue)) {\n    return (value) => {\n      initialValue.value = typeof value === \"boolean\" ? value : !initialValue.value;\n    };\n  } else {\n    const boolean = ref(initialValue);\n    const toggle = (value) => {\n      boolean.value = typeof value === \"boolean\" ? value : !boolean.value;\n    };\n    return [boolean, toggle];\n  }\n}\n\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchAtMost(source, cb, options) {\n  const _a = options, {\n    count\n  } = _a, watchOptions = __objRest(_a, [\n    \"count\"\n  ]);\n  const current = ref(0);\n  const stop = watchWithFilter(source, (...args) => {\n    current.value += 1;\n    if (current.value >= unref(count))\n      stop();\n    cb(...args);\n  }, watchOptions);\n  return { count: current, stop };\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    stop();\n    return cb(...args);\n  }, options);\n}\n\nfunction whenever(source, cb, options) {\n  return watch(source, (v, ov, onInvalidate) => {\n    if (v)\n      cb(v, ov, onInvalidate);\n  }, options);\n}\n\nexport { and, assert, biSyncRef, bypassFilter, clamp, containsProp, controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, useDebounce as debouncedRef, debouncedWatch, eagerComputed, extendRef, get, identity, ignorableWatch, increaseWithUnit, invoke, isBoolean, isClient, isDef, isDefined, isFunction, isNumber, isObject, isString, isWindow, makeDestructurable, noop, not, now, objectPick, or, pausableFilter, pausableWatch, promiseTimeout, rand, reactify, reactifyObject, reactivePick, refDefault, set, syncRef, throttleFilter, useThrottle as throttledRef, throttledWatch, timestamp, toReactive, toRefs, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useCounter, useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToggle, watchAtMost, watchOnce, watchWithFilter, whenever };\n"],"names":["isString","isObject","isFunction","extend","remove","get","set","trigger","get$1","add","set$1","callHook","mergeOptions","queue"],"mappings":"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"}